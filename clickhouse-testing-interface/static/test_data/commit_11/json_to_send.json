{"commits": {"leftCommit": {"commit": "61d33a8d9ac6b8db90e1a0ce8924d70d20cd58b4 (tag: v20.4.1.3079-testing)", "merge": "abbeb13c 5d11118c", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Sun Apr 19 20:28:23 2020 +0300", "info": "Merge pull request #10263 from azat/distributed-send-bg-pool\nUse background thread pool for distributed sends"}, "rightCommit": {"commit": "f6de9c6ffd0b93862741cfc5e8cd88b7585afeae", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 22:54:08 2020 +0300", "info": "Update AlterCommands.cpp"}}, "changes": [], "unstableQueries": [{"oldTime": 0.0368, "newTime": 0.0481, "relativeDifference": 0.307, "quantiles": [0.289, 0.388, 0.43, 0.464], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0643, "newTime": 0.0634, "relativeDifference": -0.014, "quantiles": [0.012, 0.023, 0.233, 0.289], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1311, "newTime": 0.1431, "relativeDifference": 0.091, "quantiles": [0.055, 0.091, 0.147, 0.163], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0885, "newTime": 0.0992, "relativeDifference": 0.12, "quantiles": [0.047, 0.086, 0.14, 0.165], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0262, "newTime": 0.0265, "relativeDifference": 0.011, "quantiles": [0.004, 0.011, 0.121, 0.137], "testName": "date_time_64", "query": "SELECT count() from dt where not ignore(toStartOfDay(x))"}, {"oldTime": 0.1515, "newTime": 0.1517, "relativeDifference": 0.001, "quantiles": [0.001, 0.087, 0.117, 0.123], "testName": "array_auc", "query": "SELECT avg(ifNotFinite(arrayAUC(arrayMap(x -> rand(x) / 0x100000000, range(2 + rand() % 100)), arrayMap(x -> rand(x) % 2, range(2 + rand() % 100))), 0)) FROM numbers(100000)"}, {"oldTime": 0.9658, "newTime": 0.8584, "relativeDifference": -0.112, "quantiles": [0.0, 0.038, 0.111, 0.152], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.265, "newTime": 0.233, "relativeDifference": -0.121, "quantiles": [0.006, 0.02, 0.108, 0.116], "testName": "logical_functions_large", "query": "SELECT count() FROM\\n        (SELECT materialize(0) AS x1, materialize(0) AS x2, materialize(0) AS x3, materialize(0) AS x4, materialize(0) AS x5, materialize(0) AS x6, materialize(0) AS x7, materialize(0) AS x8, materialize(0) AS x9, materialize(0) AS x10 FROM zeros(150000000))\\n    WHERE NOT ignore(and(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10))"}, {"oldTime": 0.0631, "newTime": 0.0592, "relativeDifference": -0.062, "quantiles": [0.017, 0.057, 0.107, 0.141], "testName": "website", "query": "SELECT UserID, SearchPhrase, count() FROM hits_10m_single GROUP BY UserID, SearchPhrase LIMIT 10"}, {"oldTime": 0.1738, "newTime": 0.1842, "relativeDifference": 0.059, "quantiles": [0.0, 0.051, 0.107, 0.127], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_LZ4 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1588, "newTime": 0.1641, "relativeDifference": 0.033, "quantiles": [0.019, 0.036, 0.099, 0.154], "testName": "least_greatest_hits", "query": "SELECT count() FROM test.hits WHERE NOT ignore(greatest(URL, Referer, Title))"}, {"oldTime": 0.1175, "newTime": 0.1172, "relativeDifference": -0.003, "quantiles": [0.001, 0.012, 0.096, 0.117], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0334, "newTime": 0.0353, "relativeDifference": 0.056, "quantiles": [0.0, 0.034, 0.094, 0.11], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15)(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.0361, "newTime": 0.0362, "relativeDifference": 0.002, "quantiles": [0.001, 0.014, 0.093, 0.112], "testName": "base64_hits", "query": "SELECT count() FROM hits_100m_single WHERE NOT ignore(base64Encode(MobilePhoneModel))"}, {"oldTime": 0.1104, "newTime": 0.1076, "relativeDifference": -0.026, "quantiles": [0.005, 0.034, 0.092, 0.114], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.186, "newTime": 0.173, "relativeDifference": -0.07, "quantiles": [0.022, 0.045, 0.092, 0.105], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_T64 (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1475, "newTime": 0.1389, "relativeDifference": -0.059, "quantiles": [0.001, 0.034, 0.091, 0.102], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1172, "newTime": 0.1176, "relativeDifference": 0.003, "quantiles": [0.003, 0.037, 0.089, 0.119], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0506, "newTime": 0.0538, "relativeDifference": 0.063, "quantiles": [0.005, 0.031, 0.085, 0.1], "testName": "int_parsing", "query": "SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionHeight)) SETTINGS max_threads = 1"}, {"oldTime": 0.5881, "newTime": 0.5716, "relativeDifference": -0.029, "quantiles": [0.0, 0.025, 0.077, 0.101], "testName": "json_extract_rapidjson", "query": "SELECT \\'rapidjson-7\\', count() FROM zeros(1000000) WHERE NOT ignore(JSONExtractString(materialize(\\'{\"sparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}, \"nparam\":8495, \"fparam\":{\"nested_1\":91.15,\"nested_2\":[334, 89.05, 1000.01]}, \"bparam\":false}\\'), \\'sparam\\', \\'nested_1\\'))"}, {"oldTime": 0.1049, "newTime": 0.1074, "relativeDifference": 0.023, "quantiles": [0.008, 0.018, 0.076, 0.127], "testName": "string_sort", "query": "SELECT SearchPhrase, MobilePhoneModel FROM hits_100m_single ORDER BY SearchPhrase, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.1121, "newTime": 0.1164, "relativeDifference": 0.038, "quantiles": [0.035, 0.043, 0.075, 0.114], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1276, "newTime": 0.1352, "relativeDifference": 0.059, "quantiles": [0.003, 0.053, 0.069, 0.119], "testName": "order_by_read_in_order", "query": "SELECT * FROM hits_100m_single ORDER BY CounterID DESC, toStartOfWeek(EventDate) DESC LIMIT 100"}, {"oldTime": 0.1436, "newTime": 0.1449, "relativeDifference": 0.009, "quantiles": [0.005, 0.013, 0.052, 0.102], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 10.0, "changedPerf": 0.0, "total": 10.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "website", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "array_auc", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "base64_hits", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "int_parsing", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "date_time_64", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "least_greatest_hits", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "json_extract_rapidjson", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "logical_functions_large", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "linear_regression", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "order_by_read_in_order", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 29.523, "clientTime": 26.445, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.445, "avgWallClockTime": 29.523, "shortestQuery": 26.445}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 29.278, "clientTime": 26.255, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.255, "avgWallClockTime": 29.277, "shortestQuery": 26.255}, {"testName": "simple_join_query", "wallClockTime": 81.579, "clientTime": 53.222, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.425, "avgWallClockTime": 20.394, "shortestQuery": 13.094}, {"testName": "general_purpose_hashes", "wallClockTime": 1458.846, "clientTime": 1337.426, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.757, "avgWallClockTime": 18.703, "shortestQuery": 3.33}, {"testName": "empty_string_serialization", "wallClockTime": 18.368, "clientTime": 16.858, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.858, "avgWallClockTime": 18.368, "shortestQuery": 16.858}, {"testName": "trim_urls", "wallClockTime": 104.573, "clientTime": 95.708, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 40.515, "avgWallClockTime": 17.428, "shortestQuery": 8.245}, {"testName": "group_array_moving_sum", "wallClockTime": 208.714, "clientTime": 154.84, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 21.073, "avgWallClockTime": 17.392, "shortestQuery": 7.049}, {"testName": "array_fill", "wallClockTime": 102.885, "clientTime": 94.195, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.309, "avgWallClockTime": 17.147, "shortestQuery": 7.192}, {"testName": "prewhere", "wallClockTime": 16.729, "clientTime": 15.214, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.214, "avgWallClockTime": 16.729, "shortestQuery": 15.214}, {"testName": "first_significant_subdomain", "wallClockTime": 15.892, "clientTime": 14.484, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.484, "avgWallClockTime": 15.892, "shortestQuery": 14.484}, {"testName": "constant_column_search", "wallClockTime": 399.666, "clientTime": 365.978, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 34.027, "avgWallClockTime": 14.273, "shortestQuery": 4.856}, {"testName": "trim_numbers", "wallClockTime": 79.509, "clientTime": 72.672, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 29.602, "avgWallClockTime": 13.251, "shortestQuery": 2.62}, {"testName": "string_sort", "wallClockTime": 1104.529, "clientTime": 1012.752, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 34.901, "avgWallClockTime": 13.149, "shortestQuery": 0.592}, {"testName": "and_function", "wallClockTime": 26.1, "clientTime": 23.852, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 21.95, "avgWallClockTime": 13.05, "shortestQuery": 1.902}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.563, "clientTime": 4.572, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.572, "avgWallClockTime": 12.562, "shortestQuery": 4.572}, {"testName": "json_extract_rapidjson", "wallClockTime": 137.585, "clientTime": 126.059, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.335, "avgWallClockTime": 10.583, "shortestQuery": 3.59}, {"testName": "constant_column_comparison", "wallClockTime": 222.04, "clientTime": 203.384, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.466, "avgWallClockTime": 10.573, "shortestQuery": 3.807}, {"testName": "bloom_filter", "wallClockTime": 9.898, "clientTime": 8.895, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.895, "avgWallClockTime": 9.897, "shortestQuery": 8.895}, {"testName": "joins_in_memory", "wallClockTime": 334.165, "clientTime": 461.242, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 22.342, "avgWallClockTime": 9.828, "shortestQuery": 17.638}, {"testName": "array_reduce", "wallClockTime": 58.807, "clientTime": 53.745, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.62, "avgWallClockTime": 9.801, "shortestQuery": 3.942}, {"testName": "url_hits", "wallClockTime": 192.28, "clientTime": 183.195, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.616, "avgWallClockTime": 9.613, "shortestQuery": 5.752}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 614.07, "clientTime": 563.194, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 27.889, "avgWallClockTime": 9.304, "shortestQuery": 0.865}, {"testName": "base64_hits", "wallClockTime": 109.996, "clientTime": 100.763, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.854, "avgWallClockTime": 9.166, "shortestQuery": 0.831}, {"testName": "if_array_string", "wallClockTime": 53.747, "clientTime": 49.095, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 21.036, "avgWallClockTime": 8.957, "shortestQuery": 4.141}, {"testName": "string_join", "wallClockTime": 26.036, "clientTime": 19.659, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.169, "avgWallClockTime": 8.678, "shortestQuery": 4.423}, {"testName": "sum_map", "wallClockTime": 34.237, "clientTime": 29.225, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.289, "avgWallClockTime": 8.559, "shortestQuery": 1.355}, {"testName": "logical_functions_large", "wallClockTime": 85.498, "clientTime": 78.263, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.403, "avgWallClockTime": 8.549, "shortestQuery": 3.856}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 212.873, "clientTime": 194.879, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 38.284, "avgWallClockTime": 8.187, "shortestQuery": 0.884}, {"testName": "visit_param_extract_raw", "wallClockTime": 24.426, "clientTime": 22.343, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.943, "avgWallClockTime": 8.142, "shortestQuery": 2.047}, {"testName": "column_column_comparison", "wallClockTime": 140.954, "clientTime": 129.139, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.34, "avgWallClockTime": 7.418, "shortestQuery": 5.206}, {"testName": "math", "wallClockTime": 443.337, "clientTime": 406.405, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.8, "avgWallClockTime": 7.388, "shortestQuery": 2.291}, {"testName": "round_down", "wallClockTime": 35.701, "clientTime": 32.619, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.788, "avgWallClockTime": 7.14, "shortestQuery": 1.273}, {"testName": "random_printable_ascii", "wallClockTime": 48.848, "clientTime": 44.672, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 14.865, "avgWallClockTime": 6.978, "shortestQuery": 2.982}, {"testName": "right", "wallClockTime": 13.847, "clientTime": 12.607, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.579, "avgWallClockTime": 6.923, "shortestQuery": 6.028}, {"testName": "array_join", "wallClockTime": 41.377, "clientTime": 37.832, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 8.85, "avgWallClockTime": 6.896, "shortestQuery": 2.281}, {"testName": "cpu_synthetic", "wallClockTime": 322.617, "clientTime": 308.8, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.745, "avgWallClockTime": 6.864, "shortestQuery": 1.038}, {"testName": "ngram_distance", "wallClockTime": 109.622, "clientTime": 100.381, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.038, "avgWallClockTime": 6.851, "shortestQuery": 3.98}, {"testName": "sort", "wallClockTime": 66.845, "clientTime": 60.314, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.043, "avgWallClockTime": 6.684, "shortestQuery": 3.549}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.3, "clientTime": 26.693, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 10.999, "avgWallClockTime": 6.659, "shortestQuery": 0.579}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.55, "clientTime": 0.027, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.55, "shortestQuery": 0.0}, {"testName": "uniq", "wallClockTime": 510.885, "clientTime": 467.458, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 44.227, "avgWallClockTime": 6.386, "shortestQuery": 0.899}, {"testName": "collations", "wallClockTime": 12.535, "clientTime": 11.362, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.176, "avgWallClockTime": 6.267, "shortestQuery": 1.186}, {"testName": "string_set", "wallClockTime": 43.286, "clientTime": 35.419, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.796, "avgWallClockTime": 6.183, "shortestQuery": 3.119}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.006, "clientTime": 0.019, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.006, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 50.303, "clientTime": 46.001, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 9.014, "avgWallClockTime": 5.589, "shortestQuery": 1.976}, {"testName": "json_extract_simdjson", "wallClockTime": 71.397, "clientTime": 65.411, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.346, "avgWallClockTime": 5.492, "shortestQuery": 2.816}, {"testName": "merge_tree_huge_pk", "wallClockTime": 21.922, "clientTime": 1.7, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.275, "avgWallClockTime": 5.48, "shortestQuery": 1.275}, {"testName": "website", "wallClockTime": 381.527, "clientTime": 355.073, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 38.045, "avgWallClockTime": 5.226, "shortestQuery": 0.564}, {"testName": "read_hits_with_aio", "wallClockTime": 19.756, "clientTime": 18.026, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.968, "avgWallClockTime": 4.939, "shortestQuery": 2.783}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.577, "clientTime": 7.555, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.818, "avgWallClockTime": 4.788, "shortestQuery": 1.736}, {"testName": "order_by_single_column", "wallClockTime": 32.719, "clientTime": 29.904, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.363, "avgWallClockTime": 4.674, "shortestQuery": 1.201}, {"testName": "range", "wallClockTime": 9.033, "clientTime": 8.184, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.601, "avgWallClockTime": 4.516, "shortestQuery": 2.583}, {"testName": "codecs_int_insert", "wallClockTime": 91.968, "clientTime": 81.526, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.531, "avgWallClockTime": 4.379, "shortestQuery": 1.296}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 34.444, "clientTime": 30.174, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.277, "avgWallClockTime": 4.305, "shortestQuery": 0.925}, {"testName": "entropy", "wallClockTime": 37.843, "clientTime": 34.527, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.895, "avgWallClockTime": 4.204, "shortestQuery": 0.746}, {"testName": "order_by_read_in_order", "wallClockTime": 19.973, "clientTime": 17.996, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 9.166, "avgWallClockTime": 3.994, "shortestQuery": 1.447}, {"testName": "scalar", "wallClockTime": 3.965, "clientTime": 1.345, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.345, "avgWallClockTime": 3.964, "shortestQuery": 1.345}, {"testName": "linear_regression", "wallClockTime": 19.556, "clientTime": 17.807, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.613, "avgWallClockTime": 3.911, "shortestQuery": 0.723}, {"testName": "trim_whitespace", "wallClockTime": 23.435, "clientTime": 11.494, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.344, "avgWallClockTime": 3.905, "shortestQuery": 0.973}, {"testName": "set_hits", "wallClockTime": 22.958, "clientTime": 20.93, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.154, "avgWallClockTime": 3.826, "shortestQuery": 0.985}, {"testName": "array_auc", "wallClockTime": 3.624, "clientTime": 3.212, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.212, "avgWallClockTime": 3.624, "shortestQuery": 3.212}, {"testName": "functions_geo", "wallClockTime": 20.005, "clientTime": 18.237, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.467, "avgWallClockTime": 3.334, "shortestQuery": 1.699}, {"testName": "set_index", "wallClockTime": 15.712, "clientTime": 4.583, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.173, "avgWallClockTime": 3.142, "shortestQuery": 0.665}, {"testName": "if_array_num", "wallClockTime": 17.54, "clientTime": 15.97, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.507, "avgWallClockTime": 2.923, "shortestQuery": 1.809}, {"testName": "decimal_aggregates", "wallClockTime": 57.319, "clientTime": 52.338, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.464, "avgWallClockTime": 2.729, "shortestQuery": 0.856}, {"testName": "bitCount", "wallClockTime": 16.17, "clientTime": 14.719, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.643, "avgWallClockTime": 2.695, "shortestQuery": 1.63}, {"testName": "h3", "wallClockTime": 2.578, "clientTime": 2.267, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.267, "avgWallClockTime": 2.578, "shortestQuery": 2.267}, {"testName": "date_time_64", "wallClockTime": 42.623, "clientTime": 31.59, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.821, "avgWallClockTime": 2.367, "shortestQuery": 0.585}, {"testName": "least_greatest_hits", "wallClockTime": 6.645, "clientTime": 6.01, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.723, "avgWallClockTime": 2.214, "shortestQuery": 2.067}, {"testName": "empty_string_deserialization", "wallClockTime": 2.152, "clientTime": 0.39, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.151, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.568, "clientTime": 6.824, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.731, "avgWallClockTime": 1.891, "shortestQuery": 1.678}, {"testName": "jit_large_requests", "wallClockTime": 3.604, "clientTime": 1.555, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.989, "avgWallClockTime": 1.802, "shortestQuery": 0.989}, {"testName": "merge_table_streams", "wallClockTime": 1.75, "clientTime": 1.388, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.388, "avgWallClockTime": 1.75, "shortestQuery": 1.388}, {"testName": "order_by_decimals", "wallClockTime": 8.419, "clientTime": 7.629, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.311, "avgWallClockTime": 1.683, "shortestQuery": 0.815}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.676, "clientTime": 1.436, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.436, "avgWallClockTime": 1.675, "shortestQuery": 1.436}, {"testName": "array_element", "wallClockTime": 4.382, "clientTime": 3.914, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.442, "avgWallClockTime": 1.46, "shortestQuery": 1.044}, {"testName": "int_parsing", "wallClockTime": 101.833, "clientTime": 93.221, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.152, "avgWallClockTime": 1.226, "shortestQuery": 0.606}, {"testName": "basename", "wallClockTime": 2.215, "clientTime": 1.919, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.031, "avgWallClockTime": 1.107, "shortestQuery": 0.887}, {"testName": "if_string_hits", "wallClockTime": 4.248, "clientTime": 3.791, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.063, "avgWallClockTime": 1.062, "shortestQuery": 1.046}, {"testName": "concat_hits", "wallClockTime": 24.085, "clientTime": 21.999, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.818, "avgWallClockTime": 0.926, "shortestQuery": 1.174}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.816, "clientTime": 1.568, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.949, "avgWallClockTime": 0.907, "shortestQuery": 0.619}, {"testName": "great_circle_dist", "wallClockTime": 1.741, "clientTime": 1.506, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.981, "avgWallClockTime": 0.87, "shortestQuery": 0.981}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.903, "clientTime": 38.115, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.796, "avgWallClockTime": 0.87, "shortestQuery": 2.107}, {"testName": "information_value", "wallClockTime": 1.692, "clientTime": 1.445, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.917, "avgWallClockTime": 0.846, "shortestQuery": 0.917}, {"testName": "jit_small_requests", "wallClockTime": 2.354, "clientTime": 1.982, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.277, "avgWallClockTime": 0.784, "shortestQuery": 1.277}, {"testName": "count", "wallClockTime": 0.769, "clientTime": 0.015, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.768, "shortestQuery": 0.0}, {"testName": "codecs_float_insert", "wallClockTime": 11.254, "clientTime": 9.373, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.962, "avgWallClockTime": 0.75, "shortestQuery": 0.591}, {"testName": "slices_hits", "wallClockTime": 1.46, "clientTime": 1.234, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.967, "avgWallClockTime": 0.73, "shortestQuery": 0.967}, {"testName": "analyze_array_tuples", "wallClockTime": 0.644, "clientTime": 0.484, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.643, "shortestQuery": 0.0}, {"testName": "complex_array_creation", "wallClockTime": 1.183, "clientTime": 0.986, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.591, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.393, "clientTime": 3.018, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.636, "avgWallClockTime": 0.565, "shortestQuery": 0.621}, {"testName": "consistent_hashes", "wallClockTime": 3.48, "clientTime": 3.08, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.508, "avgWallClockTime": 0.497, "shortestQuery": 1.008}, {"testName": "conditional", "wallClockTime": 3.723, "clientTime": 3.294, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.73, "avgWallClockTime": 0.465, "shortestQuery": 0.624}, {"testName": "date_parsing", "wallClockTime": 0.462, "clientTime": 0.326, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.462, "shortestQuery": 0.0}, {"testName": "early_constant_folding", "wallClockTime": 0.417, "clientTime": 0.273, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.416, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.4, "clientTime": 0.265, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.4, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.734, "clientTime": 0.563, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.367, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.778, "clientTime": 6.1, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.275, "avgWallClockTime": 0.356, "shortestQuery": 0.65}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.278, "clientTime": 1.07, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.319, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.778, "clientTime": 3.395, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.318, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.823, "clientTime": 4.268, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.277, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.036, "clientTime": 0.855, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.259, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.035, "clientTime": 0.852, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.258, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.774, "clientTime": 2.451, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.184, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.357, "clientTime": 0.23, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.178, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": {"difference": [0.0001], "newTime": [0.0215]}, "and_function": {"difference": [-0.0014, -0.0005], "newTime": [0.0854, 0.9917]}, "array_auc": {"difference": [0.0002], "newTime": [0.1517]}, "array_element": {"difference": [0.0008, 0.0009, 0.0015], "newTime": [0.0644, 0.0657, 0.0485]}, "array_fill": {"difference": [0.0031, -0.0013, -0.0038, -0.031, -0.0002, -0.001], "newTime": [0.44, 0.3243, 0.3637, 1.1812, 0.9305, 1.0223]}, "array_join": {"difference": [-0.0042, -0.0004, -0.0015, 0.0066, -0.0025, -0.0029], "newTime": [0.3988, 0.4028, 0.102, 0.317, 0.1905, 0.304]}, "array_reduce": {"difference": [-0.0111, -0.0151, -0.0161, 0.004, -0.0025, 0.0001], "newTime": [0.1735, 0.2075, 0.3937, 0.6132, 0.4096, 0.6183]}, "base64": {"difference": [0.0005, 0.0001, -0.0001, -0.0016, -0.0155, -0.0061, -0.0039, -0.0191, -0.0049], "newTime": [0.0893, 0.1894, 0.1322, 0.1972, 0.4036, 0.2311, 0.2023, 0.3894, 0.2293]}, "base64_hits": {"difference": [0.0001, -0.0008, -0.0431, -0.0208, 0.0027, -0.0018, 0.0101, -0.0347, -0.0008, -0.0009, -0.008, 0.0051], "newTime": [0.0362, 0.0804, 0.4171, 0.4514, 0.0554, 0.1332, 0.773, 0.7931, 0.0512, 0.1329, 0.792, 0.7988]}, "basename": {"difference": [-0.0001, 0.0], "newTime": [0.0393, 0.0465]}, "bitCount": {"difference": [-0.0004, -0.0008, -0.0008, 0.0024, 0.0022, 0.0011], "newTime": [0.0737, 0.1418, 0.0958, 0.1664, 0.0977, 0.0927]}, "bit_operations_fixed_string": {"difference": [-0.0004, -0.0004, 0.0008, 0.0002], "newTime": [0.0115, 0.0099, 0.0123, 0.0121]}, "bit_operations_fixed_string_numbers": {"difference": [0.0, -0.0004], "newTime": [0.043, 0.0278]}, "bloom_filter": {"difference": [0.0049], "newTime": [0.4064]}, "bounding_ratio": {"difference": [0.0001, 0.0001], "newTime": [0.0044, 0.0058]}, "cidr": {"difference": [-0.0005, 0.0007], "newTime": [0.0089, 0.015]}, "codecs_float_insert": {"difference": [-0.0002, 0.0001, 0.0008, 0.0001, 0.0002, 0.0001, -0.0001, 0.0003, -0.0002, 0.0003, 0.0002, 0.0002, 0.0008, 0.0005, -0.0001], "newTime": [0.0429, 0.0422, 0.0391, 0.0301, 0.0432, 0.0281, 0.03, 0.0162, 0.0154, 0.0284, 0.0142, 0.0268, 0.0166, 0.0179, 0.0309]}, "codecs_float_select": {"difference": [0.0004, 0.0002, 0.0004, -0.0003, 0.0001, -0.0001, 0.0004, -0.0002, -0.0002, -0.0004, 0.0002, -0.0001, 0.0001, 0.0004, 0.0005], "newTime": [0.0165, 0.0128, 0.0064, 0.0046, 0.0127, 0.0161, 0.0149, 0.0045, 0.0046, 0.013, 0.0086, 0.0129, 0.0048, 0.005, 0.0134]}, "codecs_int_insert": {"difference": [-0.0086, -0.0039, -0.004, 0.004, 0.012, -0.013, 0.0071, 0.0004, -0.0022, 0.0061, -0.0003, 0.0043, 0.0013, 0.0033, -0.0028, -0.0009, -0.0077, 0.0104, 0.0009, -0.0013, -0.0146], "newTime": [0.1389, 0.2364, 0.2113, 0.2175, 0.1431, 0.173, 0.3481, 0.1176, 0.249, 0.2609, 0.1172, 0.1164, 0.1449, 0.1648, 0.1076, 0.0634, 0.1694, 0.1842, 0.1119, 0.1436, 0.2635]}, "codecs_int_select": {"difference": [-0.0005, 0.0004, -0.0002, -0.0003, 0.0001, -0.0005, 0.0, 0.0, 0.0, -0.0003, 0.0, 0.0001, 0.0001, 0.0002, 0.0, -0.0001, 0.0, 0.0, -0.0002, -0.0001, -0.0005], "newTime": [0.0047, 0.012, 0.0097, 0.0111, 0.005, 0.0111, 0.0158, 0.0048, 0.0161, 0.0142, 0.0049, 0.0046, 0.0087, 0.005, 0.0052, 0.0061, 0.0085, 0.0109, 0.0047, 0.0109, 0.0152]}, "collations": {"difference": [0.0047, -0.0032], "newTime": [0.4558, 0.0512]}, "column_column_comparison": {"difference": [0.0001, -0.0007, -0.0038, -0.0001, 0.0061, -0.001, 0.0, 0.005, -0.0002, -0.0001, 0.0173, -0.0009, 0.0, 0.0003, 0.003, -0.0078, -0.0028, 0.0, -0.0036], "newTime": [0.0013, 0.616, 0.2357, 0.0011, 0.2569, 0.9175, 0.0011, 0.2763, 0.2516, 0.0011, 0.6393, 0.2614, 0.001, 0.0015, 0.6699, 0.2464, 1.1914, 0.0011, 0.2985]}, "complex_array_creation": {"difference": [-0.0005, 0.0], "newTime": [0.0223, 0.0206]}, "concat_hits": {"difference": [0.0014, -0.0002, -0.0006, -0.0002, 0.0001, 0.0007, -0.0005, -0.0015, -0.0023, -0.0012, -0.0064, -0.0002, 0.0003, -0.0007, 0.0004, 0.0011, 0.0003, 0.0005, -0.0002, -0.0022, -0.0008, 0.0002, 0.0018, 0.0006, -0.0036, -0.0017], "newTime": [0.0164, 0.0149, 0.0122, 0.0109, 0.0163, 0.0172, 0.0114, 0.0527, 0.069, 0.0571, 0.0616, 0.0643, 0.0813, 0.0146, 0.0152, 0.0127, 0.0118, 0.0538, 0.016, 0.0678, 0.012, 0.0173, 0.061, 0.0674, 0.0606, 0.0797]}, "conditional": {"difference": [-0.0002, -0.0007, 0.0, 0.0006, 0.0005, -0.0002, 0.0004, 0.0005], "newTime": [0.0151, 0.0278, 0.0086, 0.0149, 0.0196, 0.0324, 0.0118, 0.0171]}, "consistent_hashes": {"difference": [-0.0003, 0.0004, -0.0001, -0.0001, -0.0004, -0.0002, -0.0002], "newTime": [0.0044, 0.0683, 0.0454, 0.0054, 0.0049, 0.0048, 0.0049]}, "constant_column_comparison": {"difference": [0.0077, -0.0027, -0.0015, 0.0014, 0.0035, 0.0006, 0.0004, -0.0028, -0.0002, -0.0002, 0.0018, 0.0004, -0.0017, -0.0028, 0.0013, 0.0008, 0.0031, -0.0114, -0.005, 0.0033, 0.0055], "newTime": [0.4788, 0.5071, 0.5036, 0.3881, 0.4509, 0.445, 0.5008, 0.5574, 0.5526, 0.1745, 0.2114, 0.2046, 0.1999, 0.229, 0.2399, 0.5414, 0.6181, 0.616, 0.5403, 0.6128, 0.6603]}, "constant_column_search": {"difference": [0.0021, 0.0004, 0.0009, 0.0014, -0.0171, -0.0193, 0.0008, -0.004, 0.0025, 0.0052, -0.0385, 0.0035, 0.0063, -0.0025, -0.0019, 0.0044, 0.0007, 0.0015, -0.0189, -0.0074, -0.0069, 0.002, 0.0052, 0.0081, 0.0019, 0.0023, 0.0004, -0.0019], "newTime": [0.2219, 0.2206, 0.9062, 1.0408, 1.5326, 1.0509, 0.4663, 0.5725, 0.521, 0.8575, 0.5811, 0.9676, 0.4367, 0.3208, 0.3374, 0.5031, 0.3638, 0.4713, 1.1199, 0.3638, 1.0654, 0.4248, 0.4705, 0.4376, 0.3269, 0.2474, 0.3221, 0.3971]}, "count": {"difference": [0.0001], "newTime": [0.0006]}, "cpu_synthetic": {"difference": [-0.0002, 0.0026, 0.0056, 0.0366, -0.0167, 0.0014, 0.0001, 0.002, -0.0005, -0.001, -0.0004, 0.0004, 0.0014, 0.0009, -0.0004, 0.0009, 0.0329, -0.0018, 0.0149, 0.0012, 0.002, -0.0193, -0.0081, 0.0008, -0.0001, -0.0005, -0.0001, 0.0017, -0.0018, 0.0005, -0.0021, 0.0035, 0.0, 0.0001, 0.0004, 0.0002, -0.0003, 0.0, 0.0, -0.0009, -0.0004, 0.0005, 0.0012, 0.0008, 0.0024], "newTime": [0.1737, 0.2647, 0.4759, 1.0875, 0.8739, 0.0475, 0.0658, 0.2731, 0.3479, 0.0649, 0.0761, 0.1244, 0.431, 0.2565, 0.262, 0.2789, 1.9539, 0.1236, 1.1388, 0.0966, 0.1645, 0.4571, 0.6136, 0.1664, 0.1997, 0.3314, 0.8516, 0.0521, 0.4392, 0.4254, 0.4779, 0.1001, 0.0179, 0.0213, 0.0185, 0.0242, 0.0194, 0.0174, 0.0173, 0.0711, 0.0732, 0.0708, 0.1166, 0.1214, 0.1563]}, "date_parsing": {"difference": [0.0007], "newTime": [0.0139]}, "date_time_64": {"difference": [0.0002, -0.0004, -0.0008, 0.0, 0.0003, -0.0001, -0.004, -0.0033, -0.0003, -0.0006, -0.0001, -0.0003, 0.0005, -0.0005, -0.0006, 0.0, 0.0, 0.0003], "newTime": [0.02, 0.0346, 0.0496, 0.0213, 0.0265, 0.0263, 0.1138, 0.1356, 0.0628, 0.0694, 0.0692, 0.2185, 0.019, 0.0334, 0.1588, 0.3131, 0.0193, 0.036]}, "decimal_aggregates": {"difference": [0.001, 0.0003, 0.0008, 0.0054, -0.0034, -0.0017, 0.0021, 0.0002, 0.0007, 0.0034, 0.0017, 0.0005, -0.0097, -0.0032, 0.0013, 0.0023, -0.0006, -0.0014, 0.0001, -0.0003, 0.002], "newTime": [0.006, 0.0032, 0.0034, 0.2442, 0.157, 0.164, 0.0095, 0.0049, 0.0055, 0.2494, 0.1527, 0.1638, 0.2399, 0.1464, 0.1566, 0.1603, 0.1577, 0.1572, 0.0853, 0.0381, 0.0664]}, "distributed_aggregation": {"difference": [-0.0015, -0.0034, -0.0001, 0.0001], "newTime": [0.0762, 0.0733, 0.075, 0.0763]}, "early_constant_folding": {"difference": [-0.0001], "newTime": [0.0123]}, "empty_string_deserialization": {"difference": [-0.0001], "newTime": [0.017]}, "empty_string_serialization": {"difference": [0.0081], "newTime": [0.7777]}, "entropy": {"difference": [-0.0002, 0.0, -0.0003, 0.0009, 0.0001, 0.0002, 0.0062, 0.0127, -0.0006], "newTime": [0.0494, 0.0731, 0.016, 0.0097, 0.006, 0.0562, 0.6472, 0.6791, 0.0333]}, "first_significant_subdomain": {"difference": [0.0019], "newTime": [0.6567]}, "fixed_string16": {"difference": [0.0003], "newTime": [0.0113]}, "format_date_time": {"difference": [0.0004, -0.0001, 0.0, -0.0002, 0.0, 0.0001], "newTime": [0.0247, 0.0176, 0.0277, 0.0279, 0.0082, 0.0289]}, "functions_coding": {"difference": [-0.0002, 0.0001, -0.0004, 0.0006], "newTime": [0.007, 0.0116, 0.0079, 0.0108]}, "functions_geo": {"difference": [-0.0001, -0.0004, 0.001, -0.0016, -0.0004, -0.0005], "newTime": [0.0767, 0.0822, 0.2489, 0.1456, 0.1269, 0.1461]}, "general_purpose_hashes": {"difference": [-0.0085, 0.0251, -0.004, 0.0002, 0.0053, 0.0101, -0.0011, -0.0123, -0.0049, 0.0017, 0.001, -0.0145, -0.0047, -0.0362, 0.006, 0.0019, -0.0168, 0.0223, 0.0068, -0.0019, 0.0084, -0.0764, -0.0073, -0.0056, 0.0083, 0.0028, 0.0037, 0.0035, 0.0042, 0.0049, -0.0002, 0.003, -0.0017, -0.0119, 0.0001, 0.0007, 0.0011, 0.001, 0.0024, -0.0046, -0.0009, -0.0016, -0.0044, 0.0143, 0.0029, -0.0079, 0.0039, 0.0025, 0.0004, -0.0015, 0.0005, 0.0114, 0.0049, -0.0102, 0.0045, 0.0065, 0.0047, 0.009, -0.0239, 0.009, -0.0029, -0.0128, 0.0226, -0.0086, 0.0004, 0.0039, 0.0118, -0.0111, -0.0005, -0.0024, 0.0024, 0.0222, -0.0183, 0.0038, -0.008, 0.0058, 0.009, 0.0025], "newTime": [0.5403, 1.4806, 0.5506, 1.0318, 0.6136, 1.0579, 0.3803, 1.3428, 0.3631, 1.3245, 0.7447, 1.2059, 0.5197, 1.1739, 0.5765, 1.1551, 0.7781, 1.669, 0.6643, 1.4118, 0.836, 1.6806, 0.5468, 1.1738, 0.6861, 1.3157, 0.2194, 0.5348, 0.2221, 0.3996, 0.2309, 0.3976, 0.1555, 0.4783, 0.1513, 0.4823, 0.2838, 0.4655, 0.2172, 0.4319, 0.2274, 0.419, 0.3179, 0.641, 0.2631, 0.5189, 0.3248, 0.6199, 0.2181, 0.4512, 0.2767, 0.5001, 1.1721, 0.603, 0.5283, 1.2766, 1.2734, 0.5385, 0.705, 0.6021, 0.592, 0.7766, 0.5935, 0.5953, 0.5342, 1.3632, 1.2523, 1.251, 1.3965, 1.3992, 1.254, 1.2604, 1.2541, 1.2575, 1.2363, 1.2622, 1.2664, 1.2548]}, "general_purpose_hashes_on_UUID": {"difference": [-0.0009, -0.0005, -0.0002, -0.0002, -0.0004, 0.0015, 0.0007, 0.0, -0.0015, -0.0001, 0.0021, 0.0009, 0.0001, -0.0003, -0.0005, -0.0002, -0.0003, 0.0004, 0.0018, -0.0002, -0.0008, -0.0025, 0.0006, -0.0067, -0.0006, 0.0039, -0.0029, -0.0336, -0.0448, 0.0027, 0.006, 0.0033, -0.009, -0.0049, 0.0108, -0.0231, -0.0094, 0.0106, 0.006, -0.0015, 0.015, -0.0182, 0.0136, -0.0156, 0.0075, 0.0031, 0.0048, 0.0044, 0.0009, 0.013, 0.0111, -0.0005, -0.0004, -0.0025, 0.0023, 0.0024, -0.0062, -0.0015, -0.006, -0.0033, -0.0041, -0.0015, 0.0331, -0.0042, -0.0009, -0.0058], "newTime": [0.0388, 0.0397, 0.0465, 0.0463, 0.0423, 0.0421, 0.0413, 0.044, 0.0428, 0.0429, 0.0429, 0.0192, 0.018, 0.02, 0.0199, 0.0185, 0.0211, 0.0184, 0.0214, 0.0189, 0.0186, 0.0188, 0.6286, 0.4626, 0.6444, 0.4775, 1.2772, 1.0783, 1.2192, 1.0755, 0.8747, 0.7055, 0.8151, 0.6492, 0.7426, 0.5615, 1.037, 0.8915, 0.997, 0.8332, 0.8797, 0.6782, 0.8589, 0.6769, 0.2493, 0.1833, 0.2493, 0.1896, 0.4546, 0.4189, 0.4509, 0.3866, 0.3171, 0.2694, 0.3095, 0.2443, 0.2849, 0.2181, 0.3821, 0.3182, 0.369, 0.3165, 0.3413, 0.2591, 0.3251, 0.2725]}, "generate_table_function": {"difference": [0.0002, 0.0, -0.0001, 0.0005, -0.0002, 0.0003, 0.0002, -0.0003, 0.0005, 0.0001, 0.0, 0.0004, 0.0003, 0.0002, 0.0002, -0.0001, 0.0005, 0.0007, 0.0002], "newTime": [0.0063, 0.0089, 0.016, 0.0062, 0.0081, 0.0226, 0.0179, 0.0282, 0.0579, 0.0053, 0.0042, 0.0072, 0.0163, 0.0141, 0.0161, 0.0059, 0.0069, 0.011, 0.0103]}, "great_circle_dist": {"difference": [-0.0001, -0.0001], "newTime": [0.044, 0.0235]}, "group_array_moving_sum": {"difference": [-0.021, 0.0002, 0.0268, 0.0127, -0.0203, 0.0069, -0.0029, -0.0006, -0.0014, -0.0124, 0.002, 0.0115], "newTime": [0.9478, 0.4393, 0.9684, 0.4429, 0.9481, 0.4489, 0.6267, 0.3255, 0.6411, 0.3269, 0.637, 0.3336]}, "h3": {"difference": [0.0007], "newTime": [0.1028]}, "if_array_num": {"difference": [-0.001, -0.0004, 0.0004, -0.0008, 0.0001, -0.0016], "newTime": [0.0804, 0.0879, 0.1148, 0.126, 0.1528, 0.1557]}, "if_array_string": {"difference": [0.001, -0.0046, 0.0003, -0.0037, 0.0009, -0.1074], "newTime": [0.1883, 0.2616, 0.2216, 0.2578, 0.3429, 0.8584]}, "if_string_const": {"difference": [0.0002, 0.0, 0.0004, 0.0002], "newTime": [0.0097, 0.0098, 0.0107, 0.0078]}, "if_string_hits": {"difference": [0.0004, 0.0006, 0.0005, 0.0019], "newTime": [0.0125, 0.0177, 0.0475, 0.0937]}, "information_value": {"difference": [-0.0002, -0.0006], "newTime": [0.0412, 0.0235]}, "inserts_arrays_lowcardinality": {"difference": [-0.0016, -0.0011], "newTime": [0.0773, 0.2637]}, "int_parsing": {"difference": [0.0003, 0.0, 0.0003, 0.0, 0.0009, -0.001, 0.0006, 0.0005, -0.0002, -0.0032, 0.0004, 0.0015, 0.0008, 0.0005, -0.0002, -0.0021, 0.0003, 0.0006, 0.0004, 0.0, 0.0008, -0.0013, -0.0001, 0.0001, -0.0003, 0.0014, -0.0001, -0.0005, -0.0003, -0.0004, -0.0003, -0.0002, 0.0002, -0.0003, 0.0002, 0.0001, -0.0004, 0.0004, -0.0005, -0.0001, 0.0002, 0.0004, -0.0009, -0.0001, 0.0002, -0.0002, 0.0004, 0.0, 0.0003, 0.0001, 0.0003, 0.0008, -0.0003, -0.0013, 0.0008, -0.0012, 0.0001, 0.0, 0.0032, 0.0022, -0.0009, 0.0006, 0.0004, -0.0006, -0.0004, -0.0003, 0.0003, -0.0001, 0.0001, 0.0009, 0.0003, -0.0001, -0.0001, -0.0032, 0.0001, 0.0002, 0.0043, -0.0043, 0.0014, 0.0001, 0.0006, -0.0001, 0.0006], "newTime": [0.0284, 0.036, 0.035, 0.078, 0.0516, 0.049, 0.0642, 0.0286, 0.0334, 0.0547, 0.0566, 0.0591, 0.0712, 0.0788, 0.035, 0.1109, 0.0647, 0.0642, 0.0337, 0.0311, 0.0338, 0.0859, 0.0297, 0.0281, 0.0442, 0.0695, 0.033, 0.0462, 0.0352, 0.0286, 0.0276, 0.0308, 0.0306, 0.0347, 0.0277, 0.0288, 0.0288, 0.032, 0.0279, 0.0512, 0.059, 0.0308, 0.0733, 0.0287, 0.0288, 0.0371, 0.036, 0.0301, 0.0388, 0.0335, 0.0555, 0.1727, 0.0304, 0.0603, 0.0746, 0.0619, 0.0355, 0.0346, 0.0538, 0.0516, 0.0823, 0.0829, 0.0337, 0.0353, 0.053, 0.0617, 0.0328, 0.0321, 0.0321, 0.0487, 0.03, 0.0289, 0.0419, 0.1866, 0.0372, 0.0404, 0.1491, 0.1397, 0.0508, 0.054, 0.0591, 0.0283, 0.0347]}, "jit_large_requests": {"difference": [-0.0001, 0.0008], "newTime": [0.0451, 0.0244]}, "jit_small_requests": {"difference": [0.0, -0.0002, 0.0004], "newTime": [0.0173, 0.0572, 0.0129]}, "joins_in_memory": {"difference": [0.0001, 0.0001, 0.0, -0.0001, -0.0001, -0.0234, 0.0115, -0.0159, -0.0068, 0.0079, -0.006, 0.0039, -0.0109, -0.01, 0.0128, -0.0194, 0.0033, 0.0015, 0.0198, -0.0045, 0.0104], "newTime": [0.0024, 0.0023, 0.0024, 0.0038, 0.0018, 0.7893, 0.8139, 0.8163, 0.975, 0.8064, 0.8198, 0.8479, 0.9814, 0.8357, 0.8486, 0.8639, 1.0269, 0.8305, 0.8256, 0.8474, 0.9987]}, "joins_in_memory_pmj": {"difference": [0.0003, 0.0001, -0.0003, -0.0003, -0.0013, 0.0027, 0.002, -0.0024, -0.0001, 0.0006, -0.0002, 0.0027], "newTime": [0.0037, 0.0031, 0.0032, 0.0045, 0.0974, 0.098, 0.1078, 0.126, 0.0956, 0.0971, 0.1048, 0.1253]}, "json_extract_rapidjson": {"difference": [-0.0011, 0.0095, -0.0033, 0.0044, -0.0041, 0.001, -0.0042, 0.001, 0.0024, 0.0014, -0.0165, -0.0261, -0.0044], "newTime": [0.1667, 0.838, 0.5653, 0.6037, 0.5608, 0.1651, 0.1655, 0.1652, 0.1638, 0.5673, 0.5716, 0.576, 0.5667]}, "json_extract_simdjson": {"difference": [-0.0079, 0.0125, -0.0076, -0.0055, -0.0092, -0.0025, 0.0034, -0.0006, 0.0038, -0.0007, -0.0028, -0.0033, -0.0038], "newTime": [0.1245, 0.5622, 0.2461, 0.2778, 0.2463, 0.1277, 0.1336, 0.1271, 0.1306, 0.2385, 0.2482, 0.2402, 0.2407]}, "least_greatest_hits": {"difference": [-0.0005, 0.0053, 0.0014], "newTime": [0.0093, 0.1641, 0.0949]}, "linear_regression": {"difference": [0.002, 0.0019, -0.0002, -0.0151, 0.0029], "newTime": [0.0338, 0.0353, 0.2541, 0.3776, 0.0949]}, "logical_functions_large": {"difference": [-0.032, -0.0004, 0.0045, -0.0006, 0.0017, -0.0006, -0.001, -0.0022, 0.0007, 0.0002], "newTime": [0.233, 0.1872, 0.9281, 0.2191, 0.3946, 0.3355, 0.3586, 0.369, 0.3394, 0.1749]}, "materialized_view_parallel_insert": {"difference": [-0.0056], "newTime": [1.1911]}, "math": {"difference": [0.0005, -0.0004, -0.0002, 0.0032, 0.0011, 0.0018, 0.0004, -0.0014, -0.0011, 0.0009, 0.0, 0.0004, -0.004, 0.0041, -0.0007, -0.0046, -0.0017, 0.0024, -0.0009, 0.0028, 0.013, 0.0031, -0.0003, -0.0009, 0.0028, 0.0126, 0.0033, -0.0274, -0.0377, 0.0146, 0.0015, -0.0178, -0.0113, -0.0022, 0.0005, -0.0013, -0.0038, 0.0024, 0.001, -0.0066, 0.0106, -0.0071, -0.0016, -0.003, -0.0054, 0.0001, -0.0039, 0.0068, -0.0193, 0.0062, 0.0046, -0.0036, 0.0023, 0.0016, 0.0079, -0.0023, -0.0083, 0.007, 0.006, -0.0005], "newTime": [0.1043, 0.105, 0.104, 0.1921, 0.1971, 0.1976, 0.1562, 0.1593, 0.1611, 0.1448, 0.149, 0.1477, 0.1909, 0.2003, 0.1956, 0.154, 0.1604, 0.1629, 0.3381, 0.3358, 0.3442, 0.1113, 0.1159, 0.1167, 0.4937, 0.5792, 0.5529, 0.5393, 0.6141, 0.6331, 0.3688, 0.4213, 0.4436, 0.3691, 0.4351, 0.4139, 0.2376, 0.1687, 0.2261, 0.4284, 0.4822, 0.4951, 0.351, 0.3932, 0.4315, 0.2314, 0.1606, 0.2261, 0.8583, 0.9028, 0.8346, 0.2057, 0.1579, 0.2026, 0.2069, 0.2677, 0.2544, 0.2185, 0.162, 0.2064]}, "merge_table_streams": {"difference": [-0.0004], "newTime": [0.0625]}, "merge_tree_huge_pk": {"difference": [0.0001, 0.0005, -0.0002, 0.0001], "newTime": [0.0025, 0.0564, 0.0101, 0.0048]}, "merge_tree_many_partitions": {"difference": [-0.0001], "newTime": [0.001]}, "merge_tree_many_partitions_2": {"difference": [0.0065], "newTime": [0.2093]}, "merge_tree_simple_select": {"difference": [0.0002], "newTime": [0.0009]}, "mingroupby-orderbylimit1": {"difference": [0.0025, 0.0045, -0.0026, 0.0113, 0.0107, 0.0018, -0.0014, -0.0003], "newTime": [0.1985, 0.2035, 0.0203, 0.0481, 0.0992, 0.2997, 0.0811, 0.4202]}, "ngram_distance": {"difference": [0.0007, -0.0006, 0.0004, -0.0006, -0.0001, 0.0015, 0.0007, 0.0003, -0.0018, -0.0047, 0.0011, 0.0005, 0.0009, -0.0022, -0.0012, 0.0], "newTime": [0.1831, 0.1802, 0.1821, 0.1976, 0.2535, 0.2018, 0.2008, 0.2007, 0.3454, 0.3639, 0.3632, 0.3298, 0.3528, 0.499, 0.3498, 0.3504]}, "order_by_decimals": {"difference": [0.0, 0.0015, -0.0006, 0.0001, 0.0002], "newTime": [0.1045, 0.0696, 0.0662, 0.0687, 0.0368]}, "order_by_read_in_order": {"difference": [0.0076, 0.0024, -0.0035, 0.0014, -0.0002], "newTime": [0.1352, 0.126, 0.4084, 0.0702, 0.0642]}, "order_by_single_column": {"difference": [0.0019, 0.001, 0.0015, -0.0013, -0.0022, 0.0029, 0.0068], "newTime": [0.1017, 0.054, 0.1164, 0.1345, 0.1785, 0.3455, 0.4288]}, "parallel_insert": {"difference": [-0.0041], "newTime": [1.1993]}, "pre_limit_no_sorting": {"difference": [-0.0006], "newTime": [0.0642]}, "prewhere": {"difference": [0.0024], "newTime": [0.6945]}, "random_printable_ascii": {"difference": [0.0033, -0.0043, 0.0003, -0.0025, 0.0144, 0.0012, 0.005], "newTime": [0.1856, 0.2041, 0.0189, 0.1352, 0.6746, 0.1445, 0.6744]}, "range": {"difference": [0.002, -0.0017], "newTime": [0.2558, 0.1164]}, "read_hits_with_aio": {"difference": [0.0011, -0.0008, 0.0023, 0.0002], "newTime": [0.1277, 0.1695, 0.2725, 0.2519]}, "right": {"difference": [-0.0018, 0.0026], "newTime": [0.2727, 0.2997]}, "round_down": {"difference": [0.0102, 0.0006, 0.0002, 0.0021, -0.0005], "newTime": [1.1749, 0.0624, 0.0987, 0.0926, 0.0573]}, "round_methods": {"difference": [0.0004, -0.0002, -0.0003, 0.0, -0.0001, -0.0001, 0.0001, 0.0, -0.0001, 0.0003, 0.0003, 0.0002, -0.0001, -0.0001, -0.0002], "newTime": [0.0151, 0.003, 0.0036, 0.0144, 0.0029, 0.0036, 0.015, 0.0033, 0.0037, 0.0162, 0.0036, 0.0042, 0.0135, 0.003, 0.0033]}, "scalar": {"difference": [0.0001], "newTime": [0.0612]}, "set_hits": {"difference": [0.0001, 0.0006, -0.002, 0.0018, 0.0018, -0.0022], "newTime": [0.0683, 0.044, 0.2787, 0.0916, 0.3262, 0.1392]}, "set_index": {"difference": [-0.0017, 0.0002, 0.0005, 0.0005, -0.0001], "newTime": [0.0167, 0.007, 0.0983, 0.0297, 0.0514]}, "simple_join_query": {"difference": [0.0211, -0.0058, -0.005, 0.0042], "newTime": [0.621, 0.613, 0.5949, 0.615]}, "slices_hits": {"difference": [0.0003, -0.0011], "newTime": [0.0115, 0.0429]}, "sort": {"difference": [0.0023, 0.0005, -0.0061, 0.0007, -0.0012, -0.0024, -0.0029, -0.0053, 0.0011, 0.0033], "newTime": [0.2035, 0.22, 0.273, 0.1671, 0.1594, 0.2165, 0.2012, 0.5315, 0.5917, 0.1652]}, "string_join": {"difference": [-0.0097, 0.0082, -0.0012], "newTime": [0.3669, 0.323, 0.2014]}, "string_set": {"difference": [-0.0005, -0.0049, -0.006, 0.0103, -0.0009, -0.0053, 0.0007], "newTime": [0.2729, 0.2105, 0.3494, 0.2687, 0.1619, 0.1971, 0.1413]}, "string_sort": {"difference": [0.0002, -0.0038, -0.0001, 0.0005, -0.0013, -0.0102, -0.0008, -0.0198, 0.0012, 0.0033, 0.001, -0.0022, -0.0035, -0.0056, 0.0002, -0.003, 0.0009, -0.0074, 0.0004, -0.0056, -0.0053, -0.0104, 0.0007, -0.0019, -0.0072, -0.0258, 0.0028, -0.001, -0.0006, 0.0132, 0.0024, -0.0093, 0.0005, 0.0189, 0.0039, 0.0298, -0.0033, -0.0355, -0.004, -0.0258, -0.0006, 0.0175, 0.0001, 0.0, 0.0025, -0.0087, 0.0004, -0.0052, -0.0018, -0.0065, 0.0003, 0.0012, -0.0006, 0.0018, -0.0026, 0.0048, -0.0013, 0.0186, 0.0008, -0.0008, -0.0001, -0.0219, 0.0085, -0.0133, 0.0013, 0.0065, -0.0002, -0.0107, 0.0061, -0.0193, 0.0003, 0.0099, 0.0027, -0.0241, 0.0001, 0.0175, -0.0003, 0.0349, 0.0022, -0.0115, -0.0114, 0.0157, -0.0018, -0.0003], "newTime": [0.0268, 0.1425, 0.0273, 0.1456, 0.0891, 0.4286, 0.2068, 1.0586, 0.1066, 0.5808, 0.2417, 0.9973, 0.2635, 0.9694, 0.0421, 0.2255, 0.0843, 0.4551, 0.0426, 0.2227, 0.2147, 1.1238, 0.1126, 0.6684, 0.2548, 1.0406, 0.288, 1.0324, 0.1545, 0.797, 0.2051, 0.9775, 0.2134, 1.0455, 0.1587, 0.839, 0.2335, 1.0758, 0.4557, 1.5631, 0.4676, 1.4987, 0.0534, 0.2822, 0.1074, 0.4916, 0.1192, 0.6041, 0.2425, 0.9602, 0.0544, 0.2945, 0.2806, 1.0333, 0.3025, 1.0473, 0.1841, 0.7746, 0.2288, 0.9654, 0.2442, 0.9861, 0.4724, 1.5661, 0.2616, 1.0497, 0.187, 0.7687, 0.5375, 1.4689, 0.2118, 0.7185, 0.2542, 0.9177, 0.2719, 0.956, 0.4684, 1.4149, 0.2798, 0.9738, 0.5436, 1.4018, 0.2166, 0.7043]}, "sum_map": {"difference": [-0.0028, -0.0089, 0.0008, -0.0096], "newTime": [0.0596, 0.5912, 0.0615, 0.5897]}, "synthetic_hardware_benchmark": {"difference": [0.0003, 0.0003, 0.0005, 0.0002, -0.0012, 0.0007, 0.0022, -0.0001, -0.0033, 0.0, 0.0005, -0.0009, 0.0004, -0.0002, 0.0002, 0.0002, -0.0011, 0.0045, 0.0009, 0.0, -0.0008, -0.004, 0.0005, 0.0463, 0.0112, 0.0293], "newTime": [0.0524, 0.0406, 0.058, 0.04, 0.1737, 0.1528, 0.1359, 0.1625, 0.1468, 0.734, 0.1016, 0.0902, 0.0822, 0.0955, 0.091, 0.4384, 0.3137, 0.3426, 0.1975, 0.0988, 0.1698, 0.361, 0.496, 1.7409, 0.8428, 1.7086]}, "trim_numbers": {"difference": [0.0001, 0.0043, -0.0283, 0.0014, -0.0078, -0.0008], "newTime": [0.1188, 0.1223, 1.3415, 0.5328, 1.058, 0.1285]}, "trim_urls": {"difference": [-0.0096, -0.0173, -0.0027, -0.0033, 0.0099, -0.0078], "newTime": [0.3806, 0.3778, 1.8482, 0.5458, 0.8136, 0.3694]}, "trim_whitespace": {"difference": [0.0028, 0.0012, 0.0024, 0.0016, -0.0003, -0.001], "newTime": [0.1008, 0.067, 0.0441, 0.1069, 0.0974, 0.101]}, "uniq": {"difference": [0.0, -0.0004, 0.0005, 0.0011, -0.0013, -0.0003, -0.0009, 0.0, -0.0017, 0.0134, 0.0021, -0.0004, -0.0002, -0.0011, -0.0007, -0.0006, -0.0037, 0.0007, -0.0028, -0.0017, 0.0027, 0.0107, -0.0083, -0.0057, 0.0007, 0.0076, -0.0085, -0.0083, 0.0557, -0.0025, 0.0009, -0.0055, 0.0001, 0.0003, 0.0005, -0.0007, 0.0001, -0.0006, 0.0, 0.0015, 0.001, -0.0041, -0.0006, -0.0002, -0.0006, 0.0016, -0.0002, 0.0001, -0.0002, -0.0024, 0.0004, 0.0006, 0.0007, 0.0018, 0.0017, -0.0032, 0.0001, 0.011, 0.0009, 0.0003, -0.0005, 0.0003, 0.0009, -0.0001, -0.0016, 0.0026, -0.0018, -0.0024, 0.0019, 0.0121, -0.0053, 0.0048, -0.0062, -0.0043, -0.0041, 0.0031, 0.0065, -0.0032, -0.0009, -0.0016], "newTime": [0.0204, 0.0702, 0.0493, 0.0505, 0.0504, 0.0539, 0.0593, 0.0728, 0.0964, 2.0052, 0.0461, 0.0212, 0.0245, 0.0224, 0.0216, 0.021, 0.2578, 0.4278, 0.3877, 0.3784, 0.3798, 0.3889, 0.3776, 0.3743, 0.3785, 0.5075, 0.4328, 0.3306, 1.0586, 0.4023, 0.3019, 0.3089, 0.0578, 0.1776, 0.1093, 0.1165, 0.132, 0.1415, 0.1528, 0.1671, 0.1879, 0.3861, 0.1145, 0.0571, 0.0671, 0.0608, 0.0584, 0.0566, 0.0429, 0.2255, 0.0798, 0.0922, 0.1061, 0.1271, 0.1488, 0.1924, 0.2667, 1.8535, 0.0865, 0.0407, 0.0415, 0.0411, 0.0422, 0.0405, 0.2778, 0.3369, 0.3317, 0.3278, 0.335, 0.3425, 0.3365, 0.3371, 0.341, 1.3166, 0.3388, 0.294, 0.5184, 0.3178, 0.2825, 0.2805]}, "url_hits": {"difference": [-0.0079, 0.0135, 0.0006, 0.0004, 0.0002, -0.0028, 0.0051, 0.0027, -0.0032, 0.0088, 0.0011, 0.0028, 0.0048, -0.0039, 0.0045, 0.0037, -0.0004, 0.0041, -0.0033], "newTime": [1.0192, 0.7483, 0.3351, 0.3204, 0.3889, 0.4196, 0.3975, 0.3206, 0.3543, 0.438, 0.4548, 0.3799, 0.3099, 0.3098, 0.4459, 0.2618, 0.3822, 0.3964, 0.2942]}, "vectorize_aggregation_combinators": {"difference": [0.0024, -0.0003, -0.0001, -0.0004, -0.0048], "newTime": [0.4977, 0.0305, 0.0265, 0.3372, 0.3154]}, "visit_param_extract_raw": {"difference": [0.0005, 0.0, -0.0021], "newTime": [0.0931, 0.7283, 0.1963]}, "website": {"difference": [0.0021, 0.0002, 0.0025, 0.0007, -0.0001, 0.0094, -0.0002, 0.0011, 0.0004, -0.0019, 0.0006, 0.003, 0.0006, -0.0003, -0.0006, -0.0043, 0.0014, 0.0017, -0.001, -0.002, 0.0004, 0.0057, 0.002, 0.0082, 0.0076, 0.0003, 0.0003, -0.0006, 0.0011, -0.002, 0.0029, -0.0019, -0.0003, 0.0005, 0.0007, 0.0157, 0.0025, -0.0007, -0.0003, -0.0013, 0.0018, -0.0039, 0.0015, -0.0024, -0.0027, -0.0098, 0.0037, 0.0006, 0.0021, -0.0015, -0.0006, 0.0, -0.0015, 0.0002, -0.0007, -0.0076, 0.0003, -0.0021, 0.0001, -0.0003, -0.0001, 0.0002, -0.0024, 0.0023, -0.0002, -0.0002, 0.0, 0.0, -0.0001, -0.002, 0.0001, -0.0002], "newTime": [0.4626, 0.2094, 1.344, 0.1607, 0.0061, 0.4884, 0.35, 0.0474, 0.0854, 0.0229, 0.078, 0.2015, 0.0374, 0.174, 0.0329, 0.2732, 0.3477, 0.0544, 0.0964, 0.0983, 0.0773, 0.7768, 0.1228, 0.3034, 0.2746, 0.3368, 0.0547, 0.0313, 0.0454, 0.1584, 0.196, 0.0774, 0.025, 0.0925, 0.0318, 1.3516, 0.1556, 0.0099, 0.0123, 0.6034, 1.0173, 0.0592, 0.0982, 0.407, 0.0423, 1.7255, 0.2059, 0.3938, 0.2383, 0.0619, 0.0084, 0.0016, 0.2696, 0.0011, 0.0063, 0.0149, 0.4506, 0.083, 0.0107, 0.0045, 0.0166, 0.0071, 0.9349, 0.1742, 0.0189, 0.0066, 0.0024, 0.0097, 0.1254, 0.0427, 0.0699, 0.0419]}}, "reportErrors": []}
