{"commits": {"leftCommit": {"commit": "0afd36193387fcb7e8d57a1a8d0160d1859a5f91", "author": "alesapin <alesapin@gmail.com>", "date": "Mon Apr 20 17:19:55 2020 +0300", "info": "Fix subprocess call in clickhouse-test"}, "rightCommit": {"commit": "47a7c0baf416055d9d753d36cb98544992ec93c5 (pr/merge)", "author": "Alexander Kuzmenkov <36882414+akuzm@users.noreply.github.com>", "date": "Mon Apr 20 18:32:41 2020 +0300", "info": "Update test.py\nReal tested commit is:\nMerge 672c952d39786fa1a97865e2df01baec8bd762ba into 9d83a9dc3d6d762d306295a81d9ee33997ffa369", "merge": "9d83a9dc 672c952d"}}, "changes": [], "unstableQueries": [{"oldTime": 0.023, "newTime": 0.0308, "relativeDifference": 0.339, "quantiles": [0.051, 0.369, 0.613, 0.678], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         group by key format Null;\\n    "}, {"oldTime": 0.0328, "newTime": 0.0491, "relativeDifference": 0.496, "quantiles": [0.44, 0.475, 0.585, 0.6], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0824, "newTime": 0.0871, "relativeDifference": 0.057, "quantiles": [0.056, 0.086, 0.253, 0.304], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0964, "newTime": 0.12, "relativeDifference": 0.244, "quantiles": [0.003, 0.062, 0.245, 0.257], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.5612, "newTime": 0.5817, "relativeDifference": 0.036, "quantiles": [0.001, 0.136, 0.211, 0.217], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash2_64(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.0544, "newTime": 0.0649, "relativeDifference": 0.193, "quantiles": [0.02, 0.051, 0.208, 0.257], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1165, "newTime": 0.1133, "relativeDifference": -0.028, "quantiles": [0.007, 0.054, 0.13, 0.163], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1413, "newTime": 0.1572, "relativeDifference": 0.112, "quantiles": [0.035, 0.062, 0.121, 0.143], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1299, "newTime": 0.1388, "relativeDifference": 0.068, "quantiles": [0.014, 0.049, 0.121, 0.169], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0843, "newTime": 0.0856, "relativeDifference": 0.015, "quantiles": [0.005, 0.095, 0.121, 0.132], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0886, "newTime": 0.0847, "relativeDifference": -0.045, "quantiles": [0.008, 0.048, 0.12, 0.126], "testName": "string_sort", "query": "SELECT PageCharset, MobilePhoneModel FROM hits_100m_single ORDER BY PageCharset, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.1087, "newTime": 0.1158, "relativeDifference": 0.065, "quantiles": [0.017, 0.024, 0.114, 0.159], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1301, "newTime": 0.1277, "relativeDifference": -0.019, "quantiles": [0.018, 0.055, 0.111, 0.122], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.9395, "newTime": 0.946, "relativeDifference": 0.006, "quantiles": [0.006, 0.022, 0.111, 0.168], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.1711, "newTime": 0.1485, "relativeDifference": -0.133, "quantiles": [0.0, 0.032, 0.11, 0.13], "testName": "website", "query": "SELECT sum(ResolutionWidth), sum(ResolutionWidth + 1), sum(ResolutionWidth + 2), sum(ResolutionWidth + 3), sum(ResolutionWidth + 4), sum(ResolutionWidth + 5), sum(ResolutionWidth + 6), sum(ResolutionWidth + 7), sum(ResolutionWidth + 8), sum(ResolutionWidth + 9), sum(ResolutionWidth + 10), sum(ResolutionWidth + 11), sum(ResolutionWidth + 12), sum(ResolutionWidth + 13), sum(ResolutionWidth + 14), sum(ResolutionWidth + 15), sum(ResolutionWidth + 16), sum(ResolutionWidth + 17), sum(ResolutionWidth + 18), sum(ResolutionWidth + 19), sum(ResolutionWidth + 20), sum(ResolutionWidth + 21), sum(ResolutionWidth + 22), sum(ResolutionWidth + 23), sum(ResolutionWidth + 24), sum(ResolutionWidth + 25), sum(ResolutionWidth + 26), sum(ResolutionWidth + 27), sum(ResolutionWidth + 28), sum(ResolutionWidth + 29), sum(ResolutionWidth + 30), sum(ResolutionWidth + 31), sum(ResolutionWidth + 32), sum(ResolutionWidth + 33), sum(ResolutionWidth + 34), sum(ResolutionWidth + 35), sum(ResolutionWidth + 36), sum(ResolutionWidth + 37), sum(ResolutionWidth + 38), sum(ResolutionWidth + 39), sum(ResolutionWidth + 40), sum(ResolutionWidth + 41), sum(ResolutionWidth + 42), sum(ResolutionWidth + 43), sum(ResolutionWidth + 44), sum(ResolutionWidth + 45), sum(ResolutionWidth + 46), sum(ResolutionWidth + 47), sum(ResolutionWidth + 48), sum(ResolutionWidth + 49), sum(ResolutionWidth + 50), sum(ResolutionWidth + 51), sum(ResolutionWidth + 52), sum(ResolutionWidth + 53), sum(ResolutionWidth + 54), sum(ResolutionWidth + 55), sum(ResolutionWidth + 56), sum(ResolutionWidth + 57), sum(ResolutionWidth + 58), sum(ResolutionWidth + 59), sum(ResolutionWidth + 60), sum(ResolutionWidth + 61), sum(ResolutionWidth + 62), sum(ResolutionWidth + 63), sum(ResolutionWidth + 64), sum(ResolutionWidth + 65), sum(ResolutionWidth + 66), sum(ResolutionWidth + 67), sum(ResolutionWidth + 68), sum(ResolutionWidth + 69), sum(ResolutionWidth + 70), sum(ResolutionWidth + 71), sum(ResolutionWidth + 72), sum(ResolutionWidth + 73), sum(ResolutionWidth + 74), sum(ResolutionWidth + 75), sum(ResolutionWidth + 76), sum(ResolutionWidth + 77), sum(ResolutionWidth + 78), sum(ResolutionWidth + 79), sum(ResolutionWidth + 80), sum(ResolutionWidth + 81), sum(ResolutionWidth + 82), sum(ResolutionWidth + 83), sum(ResolutionWidth + 84), sum(ResolutionWidth + 85), sum(ResolutionWidth + 86), sum(ResolutionWidth + 87), sum(ResolutionWidth + 88), sum(ResolutionWidth + 89) FROM hits_10m_single"}, {"oldTime": 0.6506, "newTime": 0.6865, "relativeDifference": 0.055, "quantiles": [0.006, 0.03, 0.108, 0.12], "testName": "random_printable_ascii", "query": "SELECT count() FROM zeros(1000000) WHERE NOT ignore(randomPrintableASCII(rand() % 1000))"}, {"oldTime": 0.0297, "newTime": 0.0314, "relativeDifference": 0.057, "quantiles": [0.016, 0.042, 0.108, 0.131], "testName": "set_index", "query": "SELECT count() FROM test_in WHERE a IN (SELECT rand(1) FROM numbers(100000)) SETTINGS max_rows_to_read = 1, read_overflow_mode = \\'break\\'"}, {"oldTime": 0.0661, "newTime": 0.07, "relativeDifference": 0.059, "quantiles": [0.02, 0.056, 0.101, 0.15], "testName": "trim_whitespace", "query": "SELECT replaceRegexpOne(value, \\' *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.691, "newTime": 0.7272, "relativeDifference": 0.052, "quantiles": [0.014, 0.041, 0.099, 0.109], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash2_32(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.1991, "newTime": 0.2016, "relativeDifference": 0.012, "quantiles": [0.0, 0.012, 0.09, 0.148], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_1111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0824, "newTime": 0.0767, "relativeDifference": -0.07, "quantiles": [0.02, 0.047, 0.09, 0.101], "testName": "distributed_aggregation", "query": "select count() from (select sipHash64(zero) from zeros_mt(100000000) union all select sipHash64(zero) from zeros_mt(100000000))"}, {"oldTime": 0.5476, "newTime": 0.5922, "relativeDifference": 0.081, "quantiles": [0.03, 0.061, 0.089, 0.127], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash3_128(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.1719, "newTime": 0.1758, "relativeDifference": 0.022, "quantiles": [0.022, 0.038, 0.085, 0.1], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Gorilla (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1126, "newTime": 0.1193, "relativeDifference": 0.059, "quantiles": [0.008, 0.03, 0.081, 0.114], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0339, "newTime": 0.0361, "relativeDifference": 0.064, "quantiles": [0.005, 0.026, 0.079, 0.106], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15)(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.0307, "newTime": 0.0321, "relativeDifference": 0.045, "quantiles": [0.002, 0.022, 0.078, 0.101], "testName": "website", "query": "SELECT Title, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(Title) GROUP BY Title ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0985, "newTime": 0.1021, "relativeDifference": 0.036, "quantiles": [0.035, 0.038, 0.078, 0.1], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.1284, "newTime": 0.1251, "relativeDifference": -0.026, "quantiles": [0.003, 0.015, 0.072, 0.107], "testName": "website", "query": "SELECT uniq(SearchPhrase) FROM hits_100m_single FORMAT Null"}, {"oldTime": 0.111, "newTime": 0.1155, "relativeDifference": 0.04, "quantiles": [0.002, 0.039, 0.062, 0.117], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0647, "newTime": 0.0625, "relativeDifference": -0.035, "quantiles": [0.023, 0.031, 0.049, 0.1], "testName": "pre_limit_no_sorting", "query": "SELECT sum(number) FROM (select number from system.numbers_mt limit 1000000000)"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 9.0, "changedPerf": 0.0, "total": 9.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 5.0, "changedPerf": 0.0, "total": 5.0}, {"testName": "website", "unstable": 4.0, "changedPerf": 0.0, "total": 4.0}, {"testName": "general_purpose_hashes", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "set_index", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "trim_whitespace", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "random_printable_ascii", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "distributed_aggregation", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "linear_regression", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "pre_limit_no_sorting", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 28.945, "clientTime": 25.967, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.967, "avgWallClockTime": 28.944, "shortestQuery": 25.967}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 28.643, "clientTime": 25.711, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.711, "avgWallClockTime": 28.642, "shortestQuery": 25.711}, {"testName": "simple_join_query", "wallClockTime": 80.074, "clientTime": 51.902, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.243, "avgWallClockTime": 20.018, "shortestQuery": 12.771}, {"testName": "general_purpose_hashes", "wallClockTime": 1451.687, "clientTime": 1330.352, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.555, "avgWallClockTime": 18.611, "shortestQuery": 3.511}, {"testName": "trim_urls", "wallClockTime": 107.141, "clientTime": 98.112, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 43.217, "avgWallClockTime": 17.856, "shortestQuery": 8.118}, {"testName": "empty_string_serialization", "wallClockTime": 17.673, "clientTime": 16.17, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.17, "avgWallClockTime": 17.673, "shortestQuery": 16.17}, {"testName": "array_fill", "wallClockTime": 103.833, "clientTime": 95.134, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.4, "avgWallClockTime": 17.305, "shortestQuery": 7.202}, {"testName": "prewhere", "wallClockTime": 16.772, "clientTime": 15.291, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.291, "avgWallClockTime": 16.771, "shortestQuery": 15.291}, {"testName": "group_array_moving_sum", "wallClockTime": 201.121, "clientTime": 148.263, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.207, "avgWallClockTime": 16.76, "shortestQuery": 6.655}, {"testName": "first_significant_subdomain", "wallClockTime": 15.717, "clientTime": 14.301, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.301, "avgWallClockTime": 15.717, "shortestQuery": 14.301}, {"testName": "constant_column_search", "wallClockTime": 406.478, "clientTime": 372.036, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 36.304, "avgWallClockTime": 14.517, "shortestQuery": 4.758}, {"testName": "trim_numbers", "wallClockTime": 80.088, "clientTime": 73.335, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 29.762, "avgWallClockTime": 13.347, "shortestQuery": 2.564}, {"testName": "string_sort", "wallClockTime": 1102.318, "clientTime": 1010.561, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 34.931, "avgWallClockTime": 13.122, "shortestQuery": 0.593}, {"testName": "and_function", "wallClockTime": 25.989, "clientTime": 23.742, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 21.795, "avgWallClockTime": 12.994, "shortestQuery": 1.947}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.252, "clientTime": 4.351, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.351, "avgWallClockTime": 12.251, "shortestQuery": 4.351}, {"testName": "constant_column_comparison", "wallClockTime": 220.384, "clientTime": 201.943, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.264, "avgWallClockTime": 10.494, "shortestQuery": 3.66}, {"testName": "json_extract_rapidjson", "wallClockTime": 134.237, "clientTime": 122.979, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.111, "avgWallClockTime": 10.325, "shortestQuery": 3.504}, {"testName": "bloom_filter", "wallClockTime": 9.878, "clientTime": 8.891, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.891, "avgWallClockTime": 9.878, "shortestQuery": 8.891}, {"testName": "joins_in_memory", "wallClockTime": 334.814, "clientTime": 463.523, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 22.627, "avgWallClockTime": 9.847, "shortestQuery": 17.295}, {"testName": "url_hits", "wallClockTime": 192.31, "clientTime": 183.092, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.777, "avgWallClockTime": 9.615, "shortestQuery": 5.855}, {"testName": "array_reduce", "wallClockTime": 56.549, "clientTime": 51.677, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.414, "avgWallClockTime": 9.424, "shortestQuery": 3.805}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 619.192, "clientTime": 567.588, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 29.349, "avgWallClockTime": 9.381, "shortestQuery": 0.857}, {"testName": "base64_hits", "wallClockTime": 108.625, "clientTime": 99.455, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.781, "avgWallClockTime": 9.052, "shortestQuery": 0.843}, {"testName": "if_array_string", "wallClockTime": 53.8, "clientTime": 49.419, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 21.246, "avgWallClockTime": 8.966, "shortestQuery": 4.182}, {"testName": "sum_map", "wallClockTime": 35.384, "clientTime": 30.328, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 14.081, "avgWallClockTime": 8.845, "shortestQuery": 1.374}, {"testName": "string_join", "wallClockTime": 25.833, "clientTime": 19.416, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.092, "avgWallClockTime": 8.611, "shortestQuery": 4.359}, {"testName": "logical_functions_large", "wallClockTime": 85.483, "clientTime": 78.302, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.482, "avgWallClockTime": 8.548, "shortestQuery": 3.843}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 216.9, "clientTime": 198.992, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 42.305, "avgWallClockTime": 8.342, "shortestQuery": 0.887}, {"testName": "visit_param_extract_raw", "wallClockTime": 23.834, "clientTime": 21.736, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.303, "avgWallClockTime": 7.944, "shortestQuery": 2.056}, {"testName": "column_column_comparison", "wallClockTime": 140.669, "clientTime": 128.839, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.273, "avgWallClockTime": 7.403, "shortestQuery": 5.14}, {"testName": "math", "wallClockTime": 444.211, "clientTime": 407.126, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.344, "avgWallClockTime": 7.403, "shortestQuery": 2.247}, {"testName": "round_down", "wallClockTime": 36.282, "clientTime": 33.187, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 26.453, "avgWallClockTime": 7.256, "shortestQuery": 1.278}, {"testName": "array_join", "wallClockTime": 42.205, "clientTime": 38.596, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.083, "avgWallClockTime": 7.034, "shortestQuery": 2.294}, {"testName": "random_printable_ascii", "wallClockTime": 48.951, "clientTime": 44.692, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.135, "avgWallClockTime": 6.993, "shortestQuery": 2.869}, {"testName": "sort", "wallClockTime": 69.503, "clientTime": 62.716, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.312, "avgWallClockTime": 6.95, "shortestQuery": 3.752}, {"testName": "right", "wallClockTime": 13.899, "clientTime": 12.655, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.697, "avgWallClockTime": 6.949, "shortestQuery": 5.958}, {"testName": "cpu_synthetic", "wallClockTime": 323.88, "clientTime": 309.478, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.688, "avgWallClockTime": 6.891, "shortestQuery": 0.999}, {"testName": "ngram_distance", "wallClockTime": 109.589, "clientTime": 100.355, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.047, "avgWallClockTime": 6.849, "shortestQuery": 4.152}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.37, "clientTime": 26.886, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.164, "avgWallClockTime": 6.673, "shortestQuery": 0.583}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.602, "clientTime": 0.025, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.602, "shortestQuery": 0.0}, {"testName": "collations", "wallClockTime": 13.009, "clientTime": 11.825, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.698, "avgWallClockTime": 6.504, "shortestQuery": 1.127}, {"testName": "uniq", "wallClockTime": 507.97, "clientTime": 464.864, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.562, "avgWallClockTime": 6.349, "shortestQuery": 0.882}, {"testName": "string_set", "wallClockTime": 42.851, "clientTime": 35.129, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.714, "avgWallClockTime": 6.121, "shortestQuery": 3.094}, {"testName": "merge_tree_simple_select", "wallClockTime": 5.791, "clientTime": 0.014, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 5.79, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 50.034, "clientTime": 45.745, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.967, "avgWallClockTime": 5.559, "shortestQuery": 1.986}, {"testName": "json_extract_simdjson", "wallClockTime": 71.491, "clientTime": 65.495, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.261, "avgWallClockTime": 5.499, "shortestQuery": 2.776}, {"testName": "website", "wallClockTime": 380.219, "clientTime": 353.773, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.796, "avgWallClockTime": 5.208, "shortestQuery": 0.567}, {"testName": "merge_tree_huge_pk", "wallClockTime": 20.303, "clientTime": 1.794, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.301, "avgWallClockTime": 5.075, "shortestQuery": 1.301}, {"testName": "read_hits_with_aio", "wallClockTime": 19.472, "clientTime": 17.745, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.833, "avgWallClockTime": 4.868, "shortestQuery": 2.691}, {"testName": "order_by_single_column", "wallClockTime": 32.754, "clientTime": 29.943, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.305, "avgWallClockTime": 4.679, "shortestQuery": 1.228}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.213, "clientTime": 7.347, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.697, "avgWallClockTime": 4.606, "shortestQuery": 1.65}, {"testName": "range", "wallClockTime": 8.999, "clientTime": 8.158, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.585, "avgWallClockTime": 4.499, "shortestQuery": 2.573}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.357, "clientTime": 30.895, "total": 8.0, "ignoredQueries": 0.0, "longestQuery": 9.404, "avgWallClockTime": 4.419, "shortestQuery": 0.625}, {"testName": "codecs_int_insert", "wallClockTime": 90.339, "clientTime": 80.208, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.607, "avgWallClockTime": 4.301, "shortestQuery": 1.305}, {"testName": "entropy", "wallClockTime": 37.804, "clientTime": 34.558, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.724, "avgWallClockTime": 4.2, "shortestQuery": 0.724}, {"testName": "trim_whitespace", "wallClockTime": 23.805, "clientTime": 11.599, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.304, "avgWallClockTime": 3.967, "shortestQuery": 0.966}, {"testName": "order_by_read_in_order", "wallClockTime": 19.798, "clientTime": 17.765, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.976, "avgWallClockTime": 3.959, "shortestQuery": 1.407}, {"testName": "scalar", "wallClockTime": 3.938, "clientTime": 1.354, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.354, "avgWallClockTime": 3.937, "shortestQuery": 1.354}, {"testName": "set_hits", "wallClockTime": 23.01, "clientTime": 20.998, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.219, "avgWallClockTime": 3.835, "shortestQuery": 1.016}, {"testName": "linear_regression", "wallClockTime": 18.967, "clientTime": 17.221, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.275, "avgWallClockTime": 3.793, "shortestQuery": 0.723}, {"testName": "array_auc", "wallClockTime": 3.732, "clientTime": 3.312, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.312, "avgWallClockTime": 3.732, "shortestQuery": 3.312}, {"testName": "functions_geo", "wallClockTime": 20.245, "clientTime": 18.446, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.66, "avgWallClockTime": 3.374, "shortestQuery": 1.699}, {"testName": "set_index", "wallClockTime": 15.717, "clientTime": 4.764, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.33, "avgWallClockTime": 3.143, "shortestQuery": 0.681}, {"testName": "if_array_num", "wallClockTime": 18.034, "clientTime": 16.428, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.606, "avgWallClockTime": 3.005, "shortestQuery": 1.926}, {"testName": "decimal_aggregates", "wallClockTime": 57.438, "clientTime": 52.362, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.439, "avgWallClockTime": 2.735, "shortestQuery": 0.864}, {"testName": "bitCount", "wallClockTime": 16.123, "clientTime": 14.688, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.623, "avgWallClockTime": 2.687, "shortestQuery": 1.656}, {"testName": "h3", "wallClockTime": 2.639, "clientTime": 2.32, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.32, "avgWallClockTime": 2.638, "shortestQuery": 2.32}, {"testName": "date_time_64", "wallClockTime": 42.794, "clientTime": 31.809, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.994, "avgWallClockTime": 2.377, "shortestQuery": 0.577}, {"testName": "least_greatest_hits", "wallClockTime": 6.674, "clientTime": 6.051, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.629, "avgWallClockTime": 2.224, "shortestQuery": 2.199}, {"testName": "empty_string_deserialization", "wallClockTime": 2.108, "clientTime": 0.395, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.108, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.691, "clientTime": 6.925, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.804, "avgWallClockTime": 1.922, "shortestQuery": 1.689}, {"testName": "jit_large_requests", "wallClockTime": 3.514, "clientTime": 1.489, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.947, "avgWallClockTime": 1.756, "shortestQuery": 0.947}, {"testName": "merge_table_streams", "wallClockTime": 1.728, "clientTime": 1.373, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.373, "avgWallClockTime": 1.728, "shortestQuery": 1.373}, {"testName": "order_by_decimals", "wallClockTime": 8.563, "clientTime": 7.737, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.315, "avgWallClockTime": 1.712, "shortestQuery": 0.816}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.67, "clientTime": 1.422, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.422, "avgWallClockTime": 1.669, "shortestQuery": 1.422}, {"testName": "array_element", "wallClockTime": 4.503, "clientTime": 4.029, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.478, "avgWallClockTime": 1.5, "shortestQuery": 1.089}, {"testName": "int_parsing", "wallClockTime": 101.07, "clientTime": 92.513, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 3.997, "avgWallClockTime": 1.217, "shortestQuery": 0.608}, {"testName": "basename", "wallClockTime": 2.264, "clientTime": 1.963, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.063, "avgWallClockTime": 1.131, "shortestQuery": 0.9}, {"testName": "if_string_hits", "wallClockTime": 4.258, "clientTime": 3.803, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.041, "avgWallClockTime": 1.064, "shortestQuery": 1.048}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.816, "clientTime": 1.56, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.947, "avgWallClockTime": 0.907, "shortestQuery": 0.612}, {"testName": "concat_hits", "wallClockTime": 23.387, "clientTime": 21.342, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.754, "avgWallClockTime": 0.899, "shortestQuery": 1.151}, {"testName": "great_circle_dist", "wallClockTime": 1.73, "clientTime": 1.489, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.958, "avgWallClockTime": 0.865, "shortestQuery": 0.958}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.533, "clientTime": 37.422, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.74, "avgWallClockTime": 0.855, "shortestQuery": 2.061}, {"testName": "information_value", "wallClockTime": 1.701, "clientTime": 1.457, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.93, "avgWallClockTime": 0.85, "shortestQuery": 0.93}, {"testName": "jit_small_requests", "wallClockTime": 2.31, "clientTime": 1.939, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.256, "avgWallClockTime": 0.769, "shortestQuery": 1.256}, {"testName": "codecs_float_insert", "wallClockTime": 11.101, "clientTime": 9.3, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.956, "avgWallClockTime": 0.74, "shortestQuery": 0.571}, {"testName": "count", "wallClockTime": 0.74, "clientTime": 0.024, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.74, "shortestQuery": 0.0}, {"testName": "slices_hits", "wallClockTime": 1.432, "clientTime": 1.207, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.949, "avgWallClockTime": 0.716, "shortestQuery": 0.949}, {"testName": "analyze_array_tuples", "wallClockTime": 0.666, "clientTime": 0.504, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.666, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.48, "clientTime": 3.1, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.651, "avgWallClockTime": 0.58, "shortestQuery": 0.629}, {"testName": "complex_array_creation", "wallClockTime": 1.147, "clientTime": 0.946, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.573, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.52, "clientTime": 3.11, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.503, "avgWallClockTime": 0.502, "shortestQuery": 1.003}, {"testName": "date_parsing", "wallClockTime": 0.477, "clientTime": 0.338, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.476, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.663, "clientTime": 3.267, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.72, "avgWallClockTime": 0.457, "shortestQuery": 0.61}, {"testName": "early_constant_folding", "wallClockTime": 0.412, "clientTime": 0.274, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.412, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.383, "clientTime": 0.25, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.382, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.759, "clientTime": 0.586, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.379, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.826, "clientTime": 6.146, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.305, "avgWallClockTime": 0.359, "shortestQuery": 0.659}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.31, "clientTime": 1.088, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.327, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.696, "clientTime": 3.34, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.313, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.575, "clientTime": 4.082, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.265, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.047, "clientTime": 0.861, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.261, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.004, "clientTime": 0.823, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.25, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.798, "clientTime": 2.477, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.186, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.334, "clientTime": 0.209, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.166, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": {"difference": [-0.0015], "newTime": [0.0213]}, "and_function": {"difference": [-0.0005, -0.0662], "newTime": [0.0883, 0.9587]}, "array_auc": {"difference": [-0.0009], "newTime": [0.1485]}, "array_element": {"difference": [0.0005, -0.0017, -0.0035], "newTime": [0.0658, 0.0643, 0.048]}, "array_fill": {"difference": [0.0063, 0.0035, -0.0098, 0.0189, -0.0232, -0.0183], "newTime": [0.4435, 0.328, 0.3686, 1.2084, 0.9174, 1.0368]}, "array_join": {"difference": [-0.0018, -0.0036, -0.0003, 0.0068, 0.0006, 0.0037], "newTime": [0.4105, 0.4074, 0.1039, 0.3165, 0.1996, 0.3173]}, "array_reduce": {"difference": [-0.0008, -0.0006, 0.0155, 0.0229, -0.0035, -0.0216], "newTime": [0.1725, 0.2069, 0.3906, 0.585, 0.3987, 0.5976]}, "base64": {"difference": [-0.0013, 0.0007, -0.0002, -0.0034, 0.0008, -0.003, -0.0037, -0.0018, -0.0008], "newTime": [0.0891, 0.1894, 0.1312, 0.1956, 0.4082, 0.2266, 0.1948, 0.4014, 0.2307]}, "base64_hits": {"difference": [0.0007, 0.0005, 0.0026, 0.0064, 0.0014, 0.0013, -0.0017, -0.0106, -0.0008, -0.0017, -0.0062, 0.0149], "newTime": [0.0377, 0.0793, 0.4433, 0.4436, 0.0524, 0.1333, 0.7607, 0.7994, 0.0513, 0.1335, 0.7839, 0.7958]}, "basename": {"difference": [0.0017, 0.0006], "newTime": [0.0409, 0.0486]}, "bitCount": {"difference": [0.0, 0.0032, 0.0042, -0.0015, 0.0003, -0.0026], "newTime": [0.0751, 0.1431, 0.0985, 0.1646, 0.0954, 0.0904]}, "bit_operations_fixed_string": {"difference": [0.0001, 0.0029, 0.0001, -0.0001], "newTime": [0.0119, 0.013, 0.0122, 0.0121]}, "bit_operations_fixed_string_numbers": {"difference": [-0.0001, 0.0006], "newTime": [0.0426, 0.0279]}, "bloom_filter": {"difference": [-0.0042], "newTime": [0.4014]}, "bounding_ratio": {"difference": [0.0, -0.0003], "newTime": [0.0044, 0.0046]}, "cidr": {"difference": [-0.0004, 0.0002], "newTime": [0.0088, 0.0152]}, "codecs_float_insert": {"difference": [0.0008, -0.0005, 0.001, -0.0016, 0.001, 0.0001, -0.0001, 0.001, 0.0005, -0.0006, -0.0004, -0.0001, 0.001, -0.0001, -0.0017], "newTime": [0.0432, 0.0414, 0.0387, 0.0298, 0.0433, 0.029, 0.0291, 0.0165, 0.0155, 0.0279, 0.0145, 0.0258, 0.0182, 0.0174, 0.029]}, "codecs_float_select": {"difference": [0.0003, 0.0002, 0.0005, 0.0, 0.0, 0.0002, 0.0002, -0.0002, -0.0007, -0.0001, 0.0, 0.0001, 0.0, -0.0002, 0.0002], "newTime": [0.0167, 0.0134, 0.0061, 0.0043, 0.0128, 0.0165, 0.0147, 0.0047, 0.0039, 0.0128, 0.0081, 0.0132, 0.0048, 0.0043, 0.013]}, "codecs_int_insert": {"difference": [-0.0024, 0.0025, -0.0044, 0.0074, 0.0089, 0.0068, 0.0159, 0.0053, -0.0167, 0.0068, -0.0032, 0.0071, 0.0159, -0.0073, 0.0045, 0.0105, 0.0039, 0.0071, 0.0067, -0.0065, -0.0067], "newTime": [0.1277, 0.2348, 0.2178, 0.2115, 0.1388, 0.1746, 0.3557, 0.1165, 0.2307, 0.2567, 0.1133, 0.1158, 0.1572, 0.1595, 0.1155, 0.0649, 0.1758, 0.1761, 0.1193, 0.1382, 0.2706]}, "codecs_int_select": {"difference": [-0.0004, 0.0002, 0.0, 0.0, -0.0004, -0.0002, 0.0002, 0.0, -0.0004, -0.0003, -0.0003, -0.0006, -0.0004, -0.0003, -0.0003, 0.0, -0.0004, 0.0, -0.0003, 0.0, 0.0003], "newTime": [0.0041, 0.0114, 0.0096, 0.0111, 0.0045, 0.0109, 0.0153, 0.0042, 0.0154, 0.0146, 0.0041, 0.0041, 0.0079, 0.0044, 0.0043, 0.0054, 0.008, 0.011, 0.0046, 0.0106, 0.0153]}, "collations": {"difference": [0.0067, -0.0001], "newTime": [0.4891, 0.0501]}, "column_column_comparison": {"difference": [-0.0001, 0.0013, 0.003, 0.0, -0.0048, 0.0027, -0.0003, 0.0057, -0.0001, 0.0, 0.0049, -0.0002, 0.0001, 0.0, 0.0049, 0.0098, 0.0188, -0.0002, 0.0011], "newTime": [0.001, 0.6108, 0.2339, 0.0012, 0.2497, 0.9152, 0.0012, 0.2777, 0.2431, 0.0011, 0.6319, 0.2712, 0.0012, 0.0014, 0.6753, 0.2507, 1.2025, 0.0013, 0.3005]}, "complex_array_creation": {"difference": [-0.0004, 0.0], "newTime": [0.0216, 0.0207]}, "concat_hits": {"difference": [0.0002, -0.0001, -0.0008, -0.0003, 0.0016, -0.0002, -0.0016, 0.0003, -0.0034, 0.0004, -0.0003, 0.0008, -0.0009, -0.0012, 0.0003, 0.0, 0.001, 0.0004, 0.0001, 0.0006, -0.0002, -0.0005, -0.0012, -0.0003, -0.0011, -0.0029], "newTime": [0.0156, 0.0146, 0.0116, 0.0108, 0.0173, 0.017, 0.0115, 0.0528, 0.0656, 0.0561, 0.0607, 0.0633, 0.0798, 0.0146, 0.0146, 0.012, 0.0114, 0.0523, 0.017, 0.0687, 0.0119, 0.0168, 0.057, 0.0637, 0.0594, 0.0769]}, "conditional": {"difference": [0.0005, -0.0002, -0.0001, 0.0001, 0.0006, -0.0003, 0.0002, -0.0001], "newTime": [0.0155, 0.027, 0.0086, 0.014, 0.0194, 0.0319, 0.0117, 0.0167]}, "consistent_hashes": {"difference": [0.0, -0.0001, 0.0006, -0.0004, 0.0, 0.0001, -0.0001], "newTime": [0.0042, 0.068, 0.0458, 0.0057, 0.0049, 0.005, 0.0048]}, "constant_column_comparison": {"difference": [0.0141, 0.0114, 0.0133, 0.0006, -0.0013, -0.0011, 0.0025, 0.0076, 0.0094, -0.0001, 0.0018, 0.0035, 0.0062, 0.0009, 0.0016, 0.0166, 0.0096, 0.0144, 0.0113, 0.0086, 0.0087], "newTime": [0.4768, 0.504, 0.5102, 0.3887, 0.453, 0.447, 0.4968, 0.5533, 0.5555, 0.1662, 0.2074, 0.2179, 0.1939, 0.2256, 0.2341, 0.549, 0.6265, 0.6277, 0.5357, 0.6117, 0.6525]}, "constant_column_search": {"difference": [0.0021, 0.0003, 0.0025, -0.0021, -0.004, -0.0121, -0.0075, -0.0013, 0.0017, 0.0041, -0.0055, -0.0024, 0.0018, 0.0022, -0.0045, -0.0016, -0.0013, 0.0065, 0.0216, -0.0023, 0.0069, -0.0022, 0.0029, -0.0086, -0.0061, 0.0013, -0.0073, 0.0016], "newTime": [0.219, 0.216, 0.8988, 1.0349, 1.6364, 1.0514, 0.451, 0.5671, 0.5362, 0.8613, 0.5834, 1.0157, 0.421, 0.317, 0.342, 0.4923, 0.3682, 0.4723, 1.2547, 0.377, 1.1398, 0.4223, 0.4643, 0.4325, 0.3164, 0.2427, 0.3235, 0.3925]}, "count": {"difference": [0.0004], "newTime": [0.001]}, "cpu_synthetic": {"difference": [0.001, -0.0002, 0.0018, -0.0208, -0.0253, 0.0002, 0.0007, -0.0023, 0.0057, 0.0018, 0.0, -0.0005, -0.0041, -0.0014, -0.0002, -0.0001, -0.0449, -0.0021, 0.0198, 0.0007, 0.0013, 0.0006, -0.0005, 0.0043, 0.0003, -0.0044, 0.0028, -0.0008, -0.005, -0.0082, 0.0032, 0.0036, 0.0004, 0.0, -0.0002, 0.0001, -0.0001, 0.0001, 0.0001, 0.0016, 0.0024, 0.002, -0.0002, -0.0035, -0.0018], "newTime": [0.1784, 0.2712, 0.4663, 1.0596, 0.929, 0.0454, 0.0671, 0.2721, 0.3418, 0.0656, 0.0769, 0.1219, 0.4317, 0.2513, 0.2563, 0.277, 1.9286, 0.1268, 1.153, 0.095, 0.1661, 0.4573, 0.6212, 0.1656, 0.201, 0.3282, 0.8562, 0.0515, 0.4437, 0.4218, 0.4824, 0.1021, 0.0179, 0.0213, 0.0182, 0.0238, 0.0192, 0.0174, 0.0169, 0.0704, 0.0754, 0.0718, 0.1168, 0.1173, 0.154]}, "date_parsing": {"difference": [-0.0043], "newTime": [0.0135]}, "date_time_64": {"difference": [-0.0004, 0.001, 0.0007, 0.0003, 0.0003, -0.0003, -0.0012, 0.0013, -0.0001, 0.0006, 0.0007, -0.0012, -0.0002, 0.0002, 0.0006, 0.0036, -0.0003, -0.0005], "newTime": [0.0193, 0.0353, 0.0507, 0.021, 0.0258, 0.0257, 0.1179, 0.14, 0.0627, 0.0686, 0.0688, 0.2153, 0.0189, 0.0354, 0.1634, 0.32, 0.0193, 0.036]}, "decimal_aggregates": {"difference": [0.0002, -0.0001, -0.0004, -0.0005, -0.0022, 0.0003, -0.0001, -0.0004, 0.0, 0.0013, -0.0001, -0.0017, 0.0009, -0.0022, -0.0001, 0.0004, -0.0008, -0.0008, -0.0003, -0.0006, -0.0004], "newTime": [0.0054, 0.0024, 0.0027, 0.2412, 0.1576, 0.1634, 0.0086, 0.004, 0.0051, 0.2489, 0.1572, 0.1596, 0.2406, 0.1493, 0.1562, 0.1608, 0.1536, 0.1567, 0.0846, 0.0381, 0.0678]}, "distributed_aggregation": {"difference": [-0.0057, 0.0, 0.0008, 0.0001], "newTime": [0.0767, 0.0754, 0.0766, 0.0756]}, "early_constant_folding": {"difference": [0.0], "newTime": [0.0119]}, "empty_string_deserialization": {"difference": [-0.0002], "newTime": [0.0171]}, "empty_string_serialization": {"difference": [-0.0286], "newTime": [0.7309]}, "entropy": {"difference": [0.0014, 0.0014, -0.0003, 0.0005, 0.0, 0.0008, 0.02, 0.0002, 0.0002], "newTime": [0.0508, 0.0759, 0.0164, 0.0092, 0.0059, 0.056, 0.6624, 0.6715, 0.0329]}, "first_significant_subdomain": {"difference": [0.0164], "newTime": [0.6628]}, "fixed_string16": {"difference": [0.0002], "newTime": [0.011]}, "format_date_time": {"difference": [0.0001, 0.0001, -0.0009, 0.0005, 0.0, -0.0002], "newTime": [0.025, 0.0182, 0.0281, 0.0283, 0.0087, 0.0293]}, "functions_coding": {"difference": [0.0, 0.0004, -0.0005, 0.0005], "newTime": [0.0076, 0.012, 0.0078, 0.0106]}, "functions_geo": {"difference": [-0.0036, -0.0018, 0.0072, -0.0026, -0.0035, -0.0024], "newTime": [0.0753, 0.0814, 0.2625, 0.1466, 0.1237, 0.1476]}, "general_purpose_hashes": {"difference": [-0.0274, -0.0245, -0.0094, -0.0052, 0.0336, 0.0065, 0.0024, -0.003, -0.0018, 0.022, -0.008, 0.005, -0.0009, 0.0079, 0.0005, 0.0197, 0.0048, -0.015, -0.0131, -0.036, -0.0144, 0.0159, -0.0078, -0.0025, -0.0062, 0.0134, -0.013, 0.0073, 0.0014, 0.0059, 0.008, -0.0041, 0.0009, -0.0155, 0.0023, -0.0064, -0.0007, -0.003, 0.0003, -0.0002, 0.004, 0.0017, -0.0036, 0.0101, 0.0035, 0.0016, -0.0073, -0.0089, 0.0036, 0.0068, 0.0004, 0.0021, -0.0106, -0.0044, -0.0162, 0.0088, -0.0032, -0.0032, 0.0362, 0.0205, 0.0446, -0.0088, -0.03, 0.0005, 0.0043, -0.0086, -0.0129, -0.0153, 0.0055, -0.008, -0.0297, -0.0211, -0.0121, -0.0455, -0.0354, -0.0177, -0.0521, -0.007], "newTime": [0.5202, 1.45, 0.6051, 1.009, 0.574, 1.0453, 0.386, 1.3047, 0.365, 1.3511, 0.7435, 1.2347, 0.5366, 1.1982, 0.5902, 1.1498, 0.7935, 1.6533, 0.6458, 1.4011, 0.8207, 1.7176, 0.5443, 1.1883, 0.6815, 1.3027, 0.2169, 0.5352, 0.2375, 0.3958, 0.2316, 0.3957, 0.1613, 0.4827, 0.1613, 0.4901, 0.2898, 0.4625, 0.2194, 0.4277, 0.2367, 0.4291, 0.3246, 0.6419, 0.2656, 0.5335, 0.3098, 0.6182, 0.2246, 0.4515, 0.2753, 0.4831, 1.1469, 0.6299, 0.5074, 1.2835, 1.2424, 0.5328, 0.7272, 0.5817, 0.5922, 0.7317, 0.5388, 0.6006, 0.5391, 1.3234, 1.1793, 1.2115, 1.3806, 1.3743, 1.2011, 1.2, 1.2313, 1.2156, 1.2107, 1.2317, 1.2135, 1.2372]}, "general_purpose_hashes_on_UUID": {"difference": [0.0005, 0.0007, 0.0001, -0.0002, -0.0002, -0.0004, -0.0008, 0.0006, 0.0005, -0.0002, 0.0004, -0.0011, -0.0005, 0.0002, 0.0017, 0.0, 0.0009, 0.0005, -0.0002, 0.0027, 0.0002, 0.0044, 0.0062, 0.0093, 0.0268, 0.0216, -0.0077, -0.0079, -0.0091, 0.0163, -0.0039, -0.0038, 0.0111, 0.0031, -0.0251, -0.0087, 0.0061, -0.0095, 0.0063, 0.0147, -0.0017, -0.0078, 0.019, 0.0148, 0.0044, 0.0043, 0.0118, 0.0029, -0.0028, -0.0041, -0.0131, 0.0009, -0.0018, 0.009, 0.0088, -0.0011, -0.0074, -0.0055, -0.0033, -0.0044, 0.0013, -0.008, 0.0047, -0.0051, 0.0055, -0.0008], "newTime": [0.0393, 0.0408, 0.046, 0.0459, 0.0427, 0.0407, 0.0398, 0.0443, 0.0435, 0.0422, 0.0419, 0.0178, 0.0176, 0.0202, 0.0221, 0.0186, 0.0193, 0.019, 0.0197, 0.0217, 0.0193, 0.0233, 0.6032, 0.4384, 0.6469, 0.4779, 1.2387, 1.0882, 1.3288, 1.1799, 0.8701, 0.7077, 0.8128, 0.6348, 0.7303, 0.5726, 1.0443, 0.87, 0.9984, 0.8381, 0.8709, 0.706, 0.8646, 0.6999, 0.2483, 0.1794, 0.2567, 0.1849, 0.4476, 0.3951, 0.4816, 0.4246, 0.3264, 0.2719, 0.3052, 0.2373, 0.2939, 0.2218, 0.3892, 0.3178, 0.3746, 0.3062, 0.3215, 0.2634, 0.3338, 0.2763]}, "generate_table_function": {"difference": [-0.0001, -0.0001, 0.0003, 0.0001, 0.0003, 0.0002, -0.0001, 0.0003, 0.001, 0.0002, 0.0001, -0.0004, 0.0007, 0.0008, -0.0003, -0.0001, -0.0004, -0.0001, 0.0005], "newTime": [0.0062, 0.009, 0.0165, 0.0057, 0.0085, 0.0227, 0.0167, 0.0296, 0.0585, 0.0055, 0.0043, 0.0064, 0.0157, 0.0143, 0.0156, 0.006, 0.0066, 0.0105, 0.0108]}, "great_circle_dist": {"difference": [0.0006, -0.0003], "newTime": [0.0435, 0.0236]}, "group_array_moving_sum": {"difference": [0.0046, 0.0114, 0.0013, -0.008, -0.0118, -0.0126, -0.0051, -0.0015, -0.0099, 0.0162, -0.0235, -0.0074], "newTime": [0.9128, 0.4305, 0.9021, 0.4221, 0.9106, 0.4225, 0.6079, 0.3106, 0.617, 0.3117, 0.6043, 0.3045]}, "h3": {"difference": [-0.0017], "newTime": [0.1039]}, "if_array_num": {"difference": [0.0016, 0.0019, -0.0006, 0.0003, -0.0051, 0.0021], "newTime": [0.085, 0.0922, 0.1151, 0.1298, 0.1526, 0.1638]}, "if_array_string": {"difference": [0.0018, 0.0013, -0.0031, 0.0012, -0.0027, 0.0065], "newTime": [0.1919, 0.2689, 0.2214, 0.2588, 0.3379, 0.946]}, "if_string_const": {"difference": [0.0001, -0.0003, -0.0003, -0.0003], "newTime": [0.0093, 0.0095, 0.0102, 0.0076]}, "if_string_hits": {"difference": [-0.0004, -0.0004, -0.0015, -0.0009], "newTime": [0.0132, 0.0179, 0.0473, 0.0916]}, "information_value": {"difference": [0.0013, 0.0004], "newTime": [0.0423, 0.0241]}, "inserts_arrays_lowcardinality": {"difference": [-0.0007, -0.0015], "newTime": [0.0746, 0.256]}, "int_parsing": {"difference": [0.0001, -0.0002, 0.0003, 0.0012, -0.0011, 0.0004, 0.0009, 0.0005, -0.0005, -0.0016, 0.0011, 0.0007, -0.0005, 0.0012, 0.0, 0.0, 0.0014, -0.0011, 0.0005, -0.0002, -0.0004, -0.0009, 0.0003, -0.0004, -0.0003, 0.0002, 0.0001, 0.0008, 0.0, -0.0001, 0.0, 0.0001, 0.0003, 0.0008, 0.0001, 0.0001, -0.0001, 0.0, 0.0, -0.0002, 0.0009, -0.0002, 0.0006, 0.0, 0.0003, 0.0001, -0.0003, 0.0004, 0.0, 0.0001, 0.0013, -0.0021, -0.0003, 0.0007, -0.0013, 0.0015, 0.0003, 0.0003, 0.0, 0.0023, 0.0012, 0.0011, 0.0002, 0.0003, 0.0002, -0.0004, 0.0004, 0.0007, 0.0001, 0.0005, 0.0001, -0.0002, 0.0007, 0.0012, -0.0003, 0.0001, -0.0011, 0.0038, -0.0003, 0.0004, 0.0001, 0.0004, -0.0001], "newTime": [0.0278, 0.0359, 0.0347, 0.0775, 0.05, 0.0504, 0.0651, 0.0285, 0.0331, 0.056, 0.0574, 0.0581, 0.0693, 0.0784, 0.0356, 0.1141, 0.0649, 0.0621, 0.0346, 0.0313, 0.0331, 0.0877, 0.0295, 0.028, 0.0439, 0.0696, 0.0327, 0.047, 0.0361, 0.0285, 0.0278, 0.0306, 0.0311, 0.0344, 0.0277, 0.0286, 0.0287, 0.0321, 0.0281, 0.051, 0.0576, 0.0303, 0.0726, 0.0284, 0.0287, 0.0379, 0.0359, 0.0295, 0.0384, 0.0335, 0.0553, 0.1701, 0.0308, 0.0607, 0.0734, 0.0617, 0.0349, 0.0351, 0.0497, 0.0498, 0.0828, 0.0805, 0.0338, 0.0361, 0.0515, 0.0602, 0.0327, 0.0324, 0.0317, 0.0477, 0.0296, 0.0284, 0.0418, 0.1824, 0.0367, 0.0413, 0.1435, 0.1423, 0.0501, 0.0547, 0.0585, 0.0284, 0.033]}, "jit_large_requests": {"difference": [0.0007, -0.0006], "newTime": [0.044, 0.0233]}, "jit_small_requests": {"difference": [-0.001, 0.0, 0.0008], "newTime": [0.0166, 0.0571, 0.0125]}, "joins_in_memory": {"difference": [-0.0002, 0.0001, 0.0002, 0.0001, 0.0, -0.0238, -0.0287, -0.0287, -0.0329, -0.0325, -0.0374, -0.0354, -0.0229, -0.0937, -0.0887, -0.0955, -0.0995, 0.0126, -0.0083, 0.0018, 0.0064], "newTime": [0.0024, 0.0025, 0.0028, 0.0042, 0.0019, 0.7725, 0.7693, 0.7965, 0.9302, 0.7967, 0.7873, 0.8323, 0.9564, 0.8125, 0.822, 0.8412, 0.9773, 0.8294, 0.8247, 0.8573, 0.9804]}, "joins_in_memory_pmj": {"difference": [0.0001, -0.0006, -0.0003, -0.0002, 0.0001, 0.0007, 0.0013, -0.0024, 0.0015, 0.0004, 0.001, 0.0014], "newTime": [0.0034, 0.0031, 0.0031, 0.0046, 0.0932, 0.0963, 0.1046, 0.1226, 0.0948, 0.0952, 0.103, 0.1235]}, "json_extract_rapidjson": {"difference": [0.0015, 0.0014, 0.0046, -0.0124, 0.0071, 0.0016, 0.0046, 0.005, 0.0037, 0.0207, 0.0231, 0.0168, 0.0154], "newTime": [0.1676, 0.8202, 0.5606, 0.5669, 0.5592, 0.1599, 0.1643, 0.1611, 0.165, 0.5698, 0.5796, 0.5548, 0.5611]}, "json_extract_simdjson": {"difference": [0.0044, 0.0038, -0.0013, 0.0041, -0.0109, 0.0034, 0.0009, -0.0011, -0.0002, -0.012, 0.0014, 0.0, -0.0066], "newTime": [0.1319, 0.5545, 0.2468, 0.2859, 0.2478, 0.1282, 0.131, 0.1282, 0.133, 0.2345, 0.2597, 0.2353, 0.2346]}, "least_greatest_hits": {"difference": [0.0005, 0.0073, 0.0001], "newTime": [0.0097, 0.1625, 0.0976]}, "linear_regression": {"difference": [0.001, 0.0022, 0.0084, 0.01, 0.0005], "newTime": [0.0334, 0.0361, 0.2443, 0.3776, 0.0926]}, "logical_functions_large": {"difference": [0.0101, 0.0029, 0.0037, 0.0013, 0.0161, -0.0033, -0.0036, 0.0045, 0.0021, 0.0014], "newTime": [0.2395, 0.189, 0.9318, 0.2223, 0.4104, 0.3386, 0.3581, 0.3727, 0.3381, 0.1746]}, "materialized_view_parallel_insert": {"difference": [0.0011], "newTime": [1.1673]}, "math": {"difference": [-0.0024, 0.0006, -0.0024, -0.0146, -0.0181, -0.0167, -0.0014, -0.0026, -0.0002, 0.0067, 0.0001, 0.0007, -0.0013, -0.0001, 0.0015, 0.0009, -0.0004, -0.0007, 0.0028, 0.0042, -0.0038, 0.0022, -0.0002, -0.0011, -0.0074, 0.0053, -0.0072, -0.0147, -0.0102, 0.0392, -0.002, -0.0001, 0.0048, 0.0048, -0.0031, 0.0029, 0.0024, -0.0026, -0.0023, 0.0023, 0.022, 0.0168, 0.0023, 0.0285, -0.0081, -0.0006, 0.0027, 0.0009, 0.0026, -0.0046, -0.0278, -0.0004, -0.0031, 0.001, 0.0012, 0.0006, 0.0013, 0.0014, -0.0016, 0.002], "newTime": [0.0989, 0.1037, 0.1015, 0.1738, 0.1747, 0.1785, 0.1543, 0.1568, 0.1583, 0.1491, 0.1471, 0.1453, 0.1936, 0.1976, 0.1962, 0.1568, 0.1631, 0.1597, 0.3335, 0.3411, 0.3367, 0.1114, 0.1193, 0.1159, 0.4844, 0.5722, 0.5476, 0.5365, 0.6304, 0.6513, 0.363, 0.4103, 0.4493, 0.3684, 0.4359, 0.4409, 0.2335, 0.1593, 0.2293, 0.436, 0.5143, 0.5111, 0.3608, 0.4232, 0.4664, 0.2291, 0.1598, 0.2272, 0.8584, 0.8744, 0.8138, 0.2102, 0.1547, 0.1974, 0.2029, 0.2627, 0.2658, 0.2174, 0.1577, 0.2177]}, "merge_table_streams": {"difference": [-0.0005], "newTime": [0.0619]}, "merge_tree_huge_pk": {"difference": [0.0, 0.0, 0.0002, -0.0001], "newTime": [0.0022, 0.057, 0.0099, 0.0047]}, "merge_tree_many_partitions": {"difference": [0.0], "newTime": [0.001]}, "merge_tree_many_partitions_2": {"difference": [0.0018], "newTime": [0.1985]}, "merge_tree_simple_select": {"difference": [0.0001], "newTime": [0.0006]}, "mingroupby-orderbylimit1": {"difference": [-0.0039, 0.0025, 0.0078, 0.0163, 0.0236, -0.0029, 0.0013, -0.0005], "newTime": [0.1921, 0.2016, 0.0308, 0.0491, 0.12, 0.3039, 0.0856, 0.4252]}, "ngram_distance": {"difference": [0.0007, 0.0017, 0.0002, 0.0024, 0.0007, 0.0012, -0.0003, 0.0003, -0.0006, -0.0013, 0.0016, 0.0003, 0.001, 0.0021, -0.0006, -0.0006], "newTime": [0.1889, 0.1887, 0.189, 0.1985, 0.2505, 0.196, 0.194, 0.1935, 0.3496, 0.3626, 0.3662, 0.3316, 0.3498, 0.5033, 0.3485, 0.3489]}, "order_by_decimals": {"difference": [-0.0002, 0.0018, 0.0016, -0.0004, -0.0001], "newTime": [0.1042, 0.0717, 0.068, 0.07, 0.0368]}, "order_by_read_in_order": {"difference": [-0.0044, -0.0042, 0.0002, -0.0038, -0.0029], "newTime": [0.1293, 0.123, 0.4005, 0.0679, 0.0618]}, "order_by_single_column": {"difference": [-0.0011, 0.0007, -0.0007, 0.0011, -0.0009, 0.0011, 0.0005], "newTime": [0.1027, 0.0543, 0.1161, 0.1358, 0.1832, 0.3407, 0.4231]}, "parallel_insert": {"difference": [-0.016], "newTime": [1.1733]}, "pre_limit_no_sorting": {"difference": [-0.0022], "newTime": [0.0625]}, "prewhere": {"difference": [0.0016], "newTime": [0.6968]}, "random_printable_ascii": {"difference": [-0.0012, -0.0013, -0.0002, 0.0014, 0.0359, -0.0007, 0.0006], "newTime": [0.185, 0.2057, 0.0185, 0.133, 0.6865, 0.1437, 0.6935]}, "range": {"difference": [0.0, 0.0005], "newTime": [0.2545, 0.1172]}, "read_hits_with_aio": {"difference": [0.0004, 0.0007, 0.0017, -0.0004], "newTime": [0.1233, 0.1691, 0.2662, 0.2495]}, "right": {"difference": [-0.0059, -0.0053], "newTime": [0.2665, 0.3017]}, "round_down": {"difference": [0.0066, -0.0006, 0.0015, -0.0008, 0.0002], "newTime": [1.2019, 0.061, 0.0963, 0.0893, 0.0578]}, "round_methods": {"difference": [0.0, 0.0, 0.0, 0.0006, 0.0003, 0.0001, 0.0004, 0.0, 0.0002, -0.0001, 0.0, -0.0002, 0.0001, 0.0, -0.0002], "newTime": [0.0144, 0.0031, 0.0037, 0.0149, 0.0036, 0.0035, 0.0151, 0.0033, 0.0037, 0.0164, 0.0032, 0.0039, 0.0137, 0.0033, 0.0038]}, "scalar": {"difference": [0.001], "newTime": [0.06]}, "set_hits": {"difference": [0.0012, 0.0013, -0.0053, 0.0001, 0.0001, 0.0012], "newTime": [0.0691, 0.0461, 0.2764, 0.0906, 0.3267, 0.1433]}, "set_index": {"difference": [-0.001, -0.0004, -0.0089, 0.0017, -0.006], "newTime": [0.018, 0.006, 0.1003, 0.0314, 0.0483]}, "simple_join_query": {"difference": [0.0019, -0.0125, 0.0013, -0.0001], "newTime": [0.5978, 0.5801, 0.5888, 0.5725]}, "slices_hits": {"difference": [0.0001, -0.0004], "newTime": [0.0112, 0.0428]}, "sort": {"difference": [0.0136, 0.0217, 0.0148, 0.0084, 0.0169, 0.0189, 0.0152, 0.0395, 0.0262, 0.0102], "newTime": [0.2211, 0.2428, 0.2926, 0.1796, 0.1784, 0.2348, 0.221, 0.5716, 0.6147, 0.1777]}, "string_join": {"difference": [-0.0213, 0.0005, 0.001], "newTime": [0.3559, 0.3166, 0.2006]}, "string_set": {"difference": [0.0, 0.0004, -0.016, 0.0093, 0.0004, 0.0032, -0.0048], "newTime": [0.2803, 0.2151, 0.3435, 0.2613, 0.1594, 0.1989, 0.1378]}, "string_sort": {"difference": [0.0008, 0.0015, 0.0003, -0.0003, 0.0002, -0.003, 0.0014, 0.0275, -0.0042, -0.0016, -0.0023, -0.025, 0.0063, 0.002, 0.0001, 0.0019, -0.0039, 0.0022, 0.0005, 0.0093, 0.009, -0.0083, 0.0004, -0.0023, 0.0058, 0.0443, 0.0028, 0.0193, -0.0016, -0.0029, 0.0015, 0.02, 0.0027, -0.0042, 0.0005, 0.0057, -0.0043, 0.0031, 0.0037, -0.0166, -0.0025, 0.0097, -0.0001, -0.0064, 0.0044, -0.0043, 0.0037, -0.0009, 0.0089, 0.0561, 0.0013, -0.0008, 0.0017, 0.0235, 0.0038, -0.0137, -0.0002, 0.0043, 0.0096, -0.0237, -0.0003, -0.0617, 0.0178, 0.0036, -0.0006, 0.0144, 0.0032, -0.0222, -0.0018, -0.0006, 0.0031, -0.0008, 0.0053, 0.0106, 0.0052, -0.0356, 0.0056, 0.0282, 0.0002, 0.018, 0.0142, -0.0301, 0.0041, -0.0126], "newTime": [0.0271, 0.1473, 0.0265, 0.1459, 0.0897, 0.4445, 0.2114, 1.0851, 0.1057, 0.567, 0.2471, 1.0066, 0.2669, 0.9794, 0.0417, 0.2344, 0.0847, 0.4644, 0.0433, 0.2378, 0.2277, 1.0872, 0.1168, 0.6697, 0.26, 1.0718, 0.2777, 1.0477, 0.1516, 0.8034, 0.1995, 1.0012, 0.2123, 1.0571, 0.1551, 0.8167, 0.2255, 1.0806, 0.4694, 1.5664, 0.4607, 1.4528, 0.0523, 0.2862, 0.1082, 0.4995, 0.121, 0.6159, 0.2494, 1.0223, 0.0547, 0.2851, 0.2801, 1.0505, 0.2973, 1.0267, 0.179, 0.7683, 0.2352, 0.9465, 0.2429, 0.9658, 0.4782, 1.5889, 0.2609, 1.0357, 0.1894, 0.7654, 0.5288, 1.4842, 0.2121, 0.6963, 0.2535, 0.8965, 0.2739, 0.912, 0.4641, 1.3909, 0.2806, 0.9954, 0.531, 1.378, 0.2197, 0.6963]}, "sum_map": {"difference": [0.0069, 0.0617, -0.0009, 0.0053], "newTime": [0.0676, 0.6679, 0.0611, 0.6118]}, "synthetic_hardware_benchmark": {"difference": [0.0, 0.0001, 0.0035, 0.0011, 0.0001, 0.0001, -0.0011, 0.0004, 0.0001, -0.0552, 0.0002, 0.0006, -0.0015, 0.002, 0.0002, -0.0214, -0.0221, 0.0034, 0.0016, 0.0011, -0.0035, 0.0019, -0.0048, 0.0294, 0.0161, 0.0544], "newTime": [0.0528, 0.0396, 0.0612, 0.0411, 0.1713, 0.1511, 0.1348, 0.1609, 0.1475, 0.6914, 0.102, 0.0883, 0.0826, 0.0994, 0.0916, 0.4089, 0.2921, 0.3415, 0.2022, 0.0981, 0.1697, 0.3657, 0.4853, 1.7266, 0.8508, 1.9623]}, "trim_numbers": {"difference": [0.0011, 0.0013, -0.0169, -0.0147, -0.0348, -0.0051], "newTime": [0.1172, 0.1193, 1.339, 0.5222, 1.0826, 0.1201]}, "trim_urls": {"difference": [0.0023, 0.0065, -0.0209, 0.0059, -0.0121, 0.0062], "newTime": [0.3744, 0.383, 1.9528, 0.5473, 0.8229, 0.3725]}, "trim_whitespace": {"difference": [-0.0001, 0.0039, -0.002, 0.0023, -0.0012, -0.0012], "newTime": [0.101, 0.07, 0.0424, 0.1056, 0.1002, 0.1017]}, "uniq": {"difference": [0.0003, 0.0036, -0.0009, 0.0007, -0.0003, 0.0006, -0.0015, 0.003, 0.0031, 0.0134, 0.0013, 0.0004, -0.0014, -0.0001, -0.0005, -0.0006, 0.0036, -0.0048, -0.0033, 0.0116, 0.001, 0.0011, -0.0043, -0.0029, -0.0102, -0.0104, 0.0056, 0.0079, -0.0547, -0.0035, -0.006, -0.0052, -0.0004, 0.0024, 0.0012, -0.0007, 0.0004, 0.0013, -0.0024, 0.0035, 0.0047, 0.0009, 0.0003, 0.0006, 0.0023, 0.0025, 0.0007, -0.0005, 0.0011, 0.0018, -0.0018, -0.0004, -0.001, -0.0028, -0.0071, 0.0079, 0.0122, 0.0107, 0.0007, 0.0004, 0.0019, 0.0003, 0.0007, 0.0015, 0.003, 0.0043, -0.0001, -0.0002, -0.0003, -0.0032, -0.0087, -0.0021, -0.0091, -0.005, -0.0084, 0.0014, -0.0076, 0.0015, -0.0011, -0.01], "newTime": [0.0199, 0.0737, 0.0499, 0.0495, 0.0504, 0.0549, 0.059, 0.0765, 0.098, 1.988, 0.0458, 0.0214, 0.0225, 0.0226, 0.0218, 0.0209, 0.2644, 0.4222, 0.3801, 0.3857, 0.3837, 0.3794, 0.3804, 0.3845, 0.3849, 0.4993, 0.4354, 0.34, 0.9652, 0.4058, 0.2945, 0.3135, 0.0561, 0.1762, 0.1097, 0.1195, 0.1309, 0.1416, 0.1554, 0.1672, 0.1904, 0.3814, 0.1176, 0.0571, 0.0691, 0.0625, 0.0572, 0.0573, 0.0428, 0.224, 0.0796, 0.0913, 0.1042, 0.1209, 0.1495, 0.1991, 0.2729, 1.8442, 0.0857, 0.0404, 0.0424, 0.0408, 0.041, 0.0405, 0.2696, 0.3387, 0.3328, 0.3286, 0.3351, 0.3279, 0.3315, 0.3308, 0.3305, 1.3019, 0.3411, 0.2928, 0.5139, 0.3202, 0.2801, 0.2811]}, "url_hits": {"difference": [-0.0297, -0.0137, 0.0064, 0.0047, -0.0018, 0.0004, 0.0135, -0.0027, -0.0071, -0.0006, 0.0078, 0.0033, 0.0, 0.0063, -0.0062, 0.0086, 0.0022, -0.0006, -0.006], "newTime": [1.0031, 0.7546, 0.337, 0.3211, 0.3883, 0.4202, 0.4128, 0.3076, 0.3495, 0.4308, 0.4564, 0.382, 0.2944, 0.3233, 0.4357, 0.2705, 0.3803, 0.3815, 0.3002]}, "vectorize_aggregation_combinators": {"difference": [0.0038, 0.0011, 0.0006, 0.0023, 0.0028], "newTime": [0.5083, 0.0318, 0.0267, 0.3407, 0.3157]}, "visit_param_extract_raw": {"difference": [-0.0026, -0.0013, 0.0043], "newTime": [0.0912, 0.7009, 0.2004]}, "website": {"difference": [0.0177, 0.005, 0.0014, -0.0008, 0.0001, 0.009, 0.0016, 0.0007, 0.002, -0.0011, 0.0006, 0.0025, 0.0011, 0.0027, 0.0002, -0.0075, -0.0024, -0.002, 0.0017, -0.0003, 0.0007, 0.0089, 0.0002, 0.0077, -0.0034, -0.0038, -0.0008, 0.0014, 0.0014, -0.0057, -0.0022, 0.0047, 0.0, -0.0011, 0.0005, -0.0134, -0.0002, 0.0003, 0.0007, -0.0036, -0.0175, 0.0011, 0.0001, -0.004, 0.0009, -0.0327, -0.0045, -0.0028, -0.002, -0.0018, -0.0005, 0.0, 0.0001, -0.0002, 0.0014, -0.0008, -0.001, 0.0014, 0.0002, 0.0, 0.0001, -0.0002, -0.0222, -0.0226, -0.0001, -0.0003, 0.0, -0.0006, -0.0033, -0.0012, 0.0018, 0.0008], "newTime": [0.45, 0.2097, 1.3412, 0.1612, 0.0061, 0.4917, 0.3666, 0.0474, 0.0878, 0.0239, 0.0764, 0.1993, 0.0377, 0.1758, 0.0326, 0.2684, 0.3466, 0.0536, 0.0967, 0.0988, 0.0765, 0.7618, 0.1211, 0.3019, 0.2571, 0.3377, 0.0531, 0.0321, 0.0448, 0.1559, 0.1919, 0.0871, 0.025, 0.0904, 0.0322, 1.3245, 0.1584, 0.0103, 0.0136, 0.6036, 0.9995, 0.0584, 0.0941, 0.4095, 0.0441, 1.6989, 0.1938, 0.3924, 0.2356, 0.063, 0.0082, 0.0009, 0.268, 0.0009, 0.0073, 0.0178, 0.4496, 0.085, 0.0106, 0.0045, 0.0163, 0.0064, 0.925, 0.1485, 0.0191, 0.0065, 0.0025, 0.0091, 0.1251, 0.0429, 0.0702, 0.0424]}}, "reportErrors": []}
