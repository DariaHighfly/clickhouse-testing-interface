{"commits": {"leftCommit": {"commit": "bc2200530f7d8c25cb49d45117a25aaffe151318", "author": "alesapin <alesapin@gmail.com>", "date": "Tue Apr 21 15:19:02 2020 +0300", "info": "Fix PVS studio version"}, "rightCommit": {"commit": "0ca37c75fd433b8ebc6bfecf445c19dfd34b59d2 (HEAD -> master)", "merge": "bc220053 750b7308", "author": "Ilya Yatsishin <2159081+qoega@users.noreply.github.com>", "date": "Tue Apr 21 15:41:00 2020 +0300", "info": "Merge pull request #10390 from ClickHouse/fix-flattening-of-array-tuples\nFix flattening of Array(Tuple(...)) data type."}}, "changes": [], "unstableQueries": [{"oldTime": 0.0408, "newTime": 0.0453, "relativeDifference": 0.11, "quantiles": [0.109, 0.207, 0.339, 0.358], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.063, "newTime": 0.0626, "relativeDifference": -0.007, "quantiles": [0.005, 0.109, 0.203, 0.307], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1171, "newTime": 0.0996, "relativeDifference": -0.15, "quantiles": [0.045, 0.102, 0.198, 0.207], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.9955, "newTime": 0.9458, "relativeDifference": -0.05, "quantiles": [0.035, 0.122, 0.193, 0.237], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.0459, "newTime": 0.0473, "relativeDifference": 0.03, "quantiles": [0.002, 0.031, 0.168, 0.192], "testName": "trim_whitespace", "query": "SELECT replaceRegexpOne(value, \\'^ *\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.0863, "newTime": 0.0939, "relativeDifference": 0.088, "quantiles": [0.027, 0.072, 0.152, 0.176], "testName": "string_sort", "query": "SELECT PageCharset, MobilePhoneModel FROM hits_100m_single ORDER BY PageCharset, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.1427, "newTime": 0.1547, "relativeDifference": 0.084, "quantiles": [0.011, 0.076, 0.14, 0.167], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0328, "newTime": 0.0333, "relativeDifference": 0.015, "quantiles": [0.001, 0.015, 0.134, 0.142], "testName": "vectorize_aggregation_combinators", "query": "SELECT countMerge(v) FROM (SELECT countState() v FROM zeros(1000000000)) FORMAT Null"}, {"oldTime": 0.1132, "newTime": 0.1187, "relativeDifference": 0.048, "quantiles": [0.004, 0.038, 0.132, 0.16], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1816, "newTime": 0.1614, "relativeDifference": -0.112, "quantiles": [0.002, 0.08, 0.131, 0.145], "testName": "decimal_aggregates", "query": "SELECT uniq(d32), uniqCombined(d32), uniqExact(d32), uniqHLL12(d32) FROM t"}, {"oldTime": 0.1825, "newTime": 0.1866, "relativeDifference": 0.022, "quantiles": [0.021, 0.056, 0.12, 0.136], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_LZ4 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0511, "newTime": 0.0547, "relativeDifference": 0.07, "quantiles": [0.045, 0.091, 0.119, 0.14], "testName": "set_index", "query": "SELECT count() FROM test_in WHERE toInt64(a) IN (SELECT toInt64(rand(1)) FROM numbers(100000)) settings max_rows_to_read=1, read_overflow_mode=\\'break\\'"}, {"oldTime": 0.0978, "newTime": 0.0886, "relativeDifference": -0.095, "quantiles": [0.011, 0.028, 0.119, 0.13], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.1181, "newTime": 0.1276, "relativeDifference": 0.08, "quantiles": [0.003, 0.026, 0.118, 0.147], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1484, "newTime": 0.1374, "relativeDifference": -0.075, "quantiles": [0.04, 0.073, 0.116, 0.119], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_T64 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.7471, "newTime": 0.8016, "relativeDifference": 0.072, "quantiles": [0.047, 0.101, 0.113, 0.166], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.2513, "newTime": 0.27, "relativeDifference": 0.074, "quantiles": [0.004, 0.027, 0.11, 0.128], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15, \\'Momentum\\')(Age, Income, ParamPrice, Robotness, RefererHash) FROM hits_100m_single FORMAT Null"}, {"oldTime": 1.142, "newTime": 1.0909, "relativeDifference": -0.045, "quantiles": [0.008, 0.014, 0.107, 0.13], "testName": "general_purpose_hashes_on_UUID", "query": "SELECT count() from zeros(100000000) where not ignore(murmurHash3_32(generateUUIDv4()))"}, {"oldTime": 0.1248, "newTime": 0.1266, "relativeDifference": 0.014, "quantiles": [0.002, 0.02, 0.103, 0.113], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1037, "newTime": 0.1013, "relativeDifference": -0.024, "quantiles": [0.022, 0.051, 0.101, 0.116], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.2924, "newTime": 0.2993, "relativeDifference": 0.023, "quantiles": [0.023, 0.068, 0.101, 0.13], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_ZSTD (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1175, "newTime": 0.1141, "relativeDifference": -0.029, "quantiles": [0.003, 0.029, 0.1, 0.133], "testName": "string_sort", "query": "SELECT SearchPhrase, MobilePhoneModel FROM hits_100m_single ORDER BY SearchPhrase, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.7066, "newTime": 0.7584, "relativeDifference": 0.073, "quantiles": [0.019, 0.035, 0.1, 0.158], "testName": "empty_string_serialization", "query": "INSERT INTO empty_strings SELECT \\'\\' FROM zeros(100000000);"}, {"oldTime": 0.0702, "newTime": 0.0696, "relativeDifference": -0.009, "quantiles": [0.002, 0.012, 0.097, 0.109], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[1], [2]][number % 2 + 2])"}, {"oldTime": 0.0786, "newTime": 0.0783, "relativeDifference": -0.004, "quantiles": [0.003, 0.02, 0.096, 0.124], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0514, "newTime": 0.0476, "relativeDifference": -0.074, "quantiles": [0.016, 0.073, 0.094, 0.103], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], []][number % 2 + 2])"}, {"oldTime": 0.1385, "newTime": 0.1371, "relativeDifference": -0.011, "quantiles": [0.01, 0.032, 0.087, 0.106], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0685, "newTime": 0.0655, "relativeDifference": -0.044, "quantiles": [0.002, 0.035, 0.086, 0.106], "testName": "sum_map", "query": "SELECT sumMapWithOverflow(key, val) FROM sum_map_100000 FORMAT Null"}, {"oldTime": 0.1966, "newTime": 0.194, "relativeDifference": -0.014, "quantiles": [0.013, 0.053, 0.085, 0.1], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_T64 (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1679, "newTime": 0.1647, "relativeDifference": -0.02, "quantiles": [0.009, 0.023, 0.084, 0.101], "testName": "website", "query": "SELECT TraficSourceID, SearchEngineID, AdvEngineID, ((SearchEngineID = 0 AND AdvEngineID = 0) ? Referer : \\'\\') AS Src, URL AS Dst, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT Refresh GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 1000"}, {"oldTime": 1.9192, "newTime": 1.9957, "relativeDifference": 0.039, "quantiles": [0.001, 0.033, 0.083, 0.1], "testName": "cpu_synthetic", "query": "SELECT count() FROM hits_10m_single WHERE NOT ignore(MD5(SearchPhrase)) SETTINGS max_threads = 1"}, {"oldTime": 0.0293, "newTime": 0.0316, "relativeDifference": 0.078, "quantiles": [0.016, 0.05, 0.081, 0.116], "testName": "set_index", "query": "SELECT count() FROM test_in WHERE a IN (SELECT rand(1) FROM numbers(100000)) SETTINGS max_rows_to_read = 1, read_overflow_mode = \\'break\\'"}, {"oldTime": 1.0453, "newTime": 1.0551, "relativeDifference": 0.009, "quantiles": [0.009, 0.024, 0.08, 0.102], "testName": "general_purpose_hashes_on_UUID", "query": "SELECT count() from zeros(100000000) where not ignore(murmurHash3_64(generateUUIDv4()))"}, {"oldTime": 0.2173, "newTime": 0.2068, "relativeDifference": -0.049, "quantiles": [0.015, 0.038, 0.08, 0.142], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.1419, "newTime": 0.1531, "relativeDifference": 0.078, "quantiles": [0.01, 0.034, 0.079, 0.119], "testName": "string_sort", "query": "SELECT SearchPhrase, PageCharset FROM hits_100m_single ORDER BY SearchPhrase, PageCharset LIMIT 10"}, {"oldTime": 0.1053, "newTime": 0.1132, "relativeDifference": 0.075, "quantiles": [0.02, 0.035, 0.079, 0.114], "testName": "trim_whitespace", "query": "SELECT replaceRegexpAll(value, \\'^ *| *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.0695, "newTime": 0.0662, "relativeDifference": -0.048, "quantiles": [0.013, 0.023, 0.078, 0.1], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], [2]][number % 2 + 2])"}, {"oldTime": 0.3619, "newTime": 0.3439, "relativeDifference": -0.05, "quantiles": [0.004, 0.04, 0.077, 0.103], "testName": "general_purpose_hashes_on_UUID", "query": "SELECT count() from zeros_mt(1000000000) where not ignore(xxHash32(generateUUIDv4()))"}, {"oldTime": 0.0438, "newTime": 0.0426, "relativeDifference": -0.028, "quantiles": [0.005, 0.009, 0.066, 0.102], "testName": "general_purpose_hashes_on_UUID", "query": "SELECT count() from numbers(1000000) where not ignore(xxHash64(toDecimal128(number, 23)))"}, {"oldTime": 0.1629, "newTime": 0.1547, "relativeDifference": -0.051, "quantiles": [0.004, 0.023, 0.063, 0.142], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0994, "newTime": 0.1015, "relativeDifference": 0.021, "quantiles": [0.001, 0.015, 0.055, 0.129], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":\"test_string\"}\\'), \\'myparam\\'))"}, {"oldTime": 0.2413, "newTime": 0.2432, "relativeDifference": 0.007, "quantiles": [0.007, 0.012, 0.045, 0.107], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_DoubleDelta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 12.0, "changedPerf": 0.0, "total": 12.0}, {"testName": "general_purpose_hashes_on_UUID", "unstable": 4.0, "changedPerf": 0.0, "total": 4.0}, {"testName": "array_element", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "string_sort", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "visit_param_extract_raw", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "website", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "cpu_synthetic", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "set_index", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "trim_whitespace", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "sum_map", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "linear_regression", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "decimal_aggregates", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "empty_string_serialization", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "vectorize_aggregation_combinators", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 29.264, "clientTime": 26.337, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.337, "avgWallClockTime": 29.263, "shortestQuery": 26.337}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 28.863, "clientTime": 25.828, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.828, "avgWallClockTime": 28.863, "shortestQuery": 25.828}, {"testName": "simple_join_query", "wallClockTime": 79.929, "clientTime": 51.88, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.287, "avgWallClockTime": 19.982, "shortestQuery": 12.805}, {"testName": "general_purpose_hashes", "wallClockTime": 1473.668, "clientTime": 1350.558, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 36.933, "avgWallClockTime": 18.893, "shortestQuery": 3.564}, {"testName": "trim_urls", "wallClockTime": 110.911, "clientTime": 101.358, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 42.122, "avgWallClockTime": 18.485, "shortestQuery": 8.851}, {"testName": "array_fill", "wallClockTime": 108.467, "clientTime": 99.087, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 27.159, "avgWallClockTime": 18.077, "shortestQuery": 7.4}, {"testName": "empty_string_serialization", "wallClockTime": 17.619, "clientTime": 15.931, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.931, "avgWallClockTime": 17.618, "shortestQuery": 15.931}, {"testName": "group_array_moving_sum", "wallClockTime": 205.056, "clientTime": 150.826, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.25, "avgWallClockTime": 17.087, "shortestQuery": 6.89}, {"testName": "prewhere", "wallClockTime": 16.663, "clientTime": 15.131, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.131, "avgWallClockTime": 16.663, "shortestQuery": 15.131}, {"testName": "first_significant_subdomain", "wallClockTime": 15.884, "clientTime": 14.462, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.462, "avgWallClockTime": 15.883, "shortestQuery": 14.462}, {"testName": "constant_column_search", "wallClockTime": 414.231, "clientTime": 379.14, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 34.63, "avgWallClockTime": 14.793, "shortestQuery": 5.041}, {"testName": "trim_numbers", "wallClockTime": 85.751, "clientTime": 78.516, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 33.551, "avgWallClockTime": 14.291, "shortestQuery": 2.57}, {"testName": "string_sort", "wallClockTime": 1123.997, "clientTime": 1030.057, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 35.083, "avgWallClockTime": 13.38, "shortestQuery": 0.589}, {"testName": "and_function", "wallClockTime": 25.423, "clientTime": 23.189, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 21.169, "avgWallClockTime": 12.711, "shortestQuery": 2.019}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 11.999, "clientTime": 4.463, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.463, "avgWallClockTime": 11.998, "shortestQuery": 4.463}, {"testName": "constant_column_comparison", "wallClockTime": 230.778, "clientTime": 211.734, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 15.482, "avgWallClockTime": 10.989, "shortestQuery": 4.024}, {"testName": "json_extract_rapidjson", "wallClockTime": 134.132, "clientTime": 122.76, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.021, "avgWallClockTime": 10.317, "shortestQuery": 3.502}, {"testName": "bloom_filter", "wallClockTime": 10.269, "clientTime": 9.205, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 9.205, "avgWallClockTime": 10.269, "shortestQuery": 9.205}, {"testName": "array_reduce", "wallClockTime": 60.821, "clientTime": 55.566, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 14.566, "avgWallClockTime": 10.136, "shortestQuery": 3.89}, {"testName": "url_hits", "wallClockTime": 196.036, "clientTime": 187.012, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.988, "avgWallClockTime": 9.801, "shortestQuery": 5.955}, {"testName": "joins_in_memory", "wallClockTime": 330.233, "clientTime": 454.7, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 21.822, "avgWallClockTime": 9.712, "shortestQuery": 17.161}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 633.957, "clientTime": 581.199, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 28.558, "avgWallClockTime": 9.605, "shortestQuery": 0.934}, {"testName": "base64_hits", "wallClockTime": 113.778, "clientTime": 104.255, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 19.184, "avgWallClockTime": 9.481, "shortestQuery": 0.835}, {"testName": "sum_map", "wallClockTime": 36.65, "clientTime": 31.284, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 14.647, "avgWallClockTime": 9.162, "shortestQuery": 1.509}, {"testName": "visit_param_extract_raw", "wallClockTime": 27.069, "clientTime": 24.854, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 17.752, "avgWallClockTime": 9.023, "shortestQuery": 2.282}, {"testName": "if_array_string", "wallClockTime": 53.763, "clientTime": 48.809, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 20.862, "avgWallClockTime": 8.96, "shortestQuery": 4.088}, {"testName": "string_join", "wallClockTime": 26.302, "clientTime": 19.984, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.33, "avgWallClockTime": 8.767, "shortestQuery": 4.419}, {"testName": "logical_functions_large", "wallClockTime": 86.503, "clientTime": 79.208, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.427, "avgWallClockTime": 8.65, "shortestQuery": 3.823}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 215.648, "clientTime": 197.668, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 38.545, "avgWallClockTime": 8.294, "shortestQuery": 0.92}, {"testName": "column_column_comparison", "wallClockTime": 147.336, "clientTime": 134.921, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 28.476, "avgWallClockTime": 7.754, "shortestQuery": 5.379}, {"testName": "sort", "wallClockTime": 75.559, "clientTime": 68.207, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 14.364, "avgWallClockTime": 7.555, "shortestQuery": 4.099}, {"testName": "math", "wallClockTime": 447.613, "clientTime": 410.086, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.357, "avgWallClockTime": 7.46, "shortestQuery": 2.22}, {"testName": "array_join", "wallClockTime": 44.481, "clientTime": 40.721, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.523, "avgWallClockTime": 7.413, "shortestQuery": 2.497}, {"testName": "right", "wallClockTime": 14.556, "clientTime": 13.246, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 7.043, "avgWallClockTime": 7.277, "shortestQuery": 6.202}, {"testName": "round_down", "wallClockTime": 35.761, "clientTime": 32.713, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.943, "avgWallClockTime": 7.152, "shortestQuery": 1.306}, {"testName": "random_printable_ascii", "wallClockTime": 49.035, "clientTime": 44.865, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.015, "avgWallClockTime": 7.004, "shortestQuery": 3.073}, {"testName": "cpu_synthetic", "wallClockTime": 328.112, "clientTime": 313.776, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 44.178, "avgWallClockTime": 6.981, "shortestQuery": 1.038}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 34.711, "clientTime": 27.873, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.822, "avgWallClockTime": 6.942, "shortestQuery": 0.59}, {"testName": "ngram_distance", "wallClockTime": 109.76, "clientTime": 100.472, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.022, "avgWallClockTime": 6.86, "shortestQuery": 3.992}, {"testName": "collations", "wallClockTime": 13.282, "clientTime": 12.083, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.906, "avgWallClockTime": 6.64, "shortestQuery": 1.176}, {"testName": "uniq", "wallClockTime": 513.229, "clientTime": 470.022, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 44.305, "avgWallClockTime": 6.415, "shortestQuery": 0.883}, {"testName": "string_set", "wallClockTime": 43.589, "clientTime": 35.582, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.574, "avgWallClockTime": 6.227, "shortestQuery": 3.324}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.064, "clientTime": 0.022, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.064, "shortestQuery": 0.0}, {"testName": "merge_tree_simple_select", "wallClockTime": 5.873, "clientTime": 0.021, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 5.873, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 52.122, "clientTime": 47.697, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 9.298, "avgWallClockTime": 5.791, "shortestQuery": 2.029}, {"testName": "json_extract_simdjson", "wallClockTime": 71.241, "clientTime": 65.246, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.213, "avgWallClockTime": 5.48, "shortestQuery": 2.811}, {"testName": "website", "wallClockTime": 387.591, "clientTime": 361.079, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.891, "avgWallClockTime": 5.309, "shortestQuery": 0.568}, {"testName": "read_hits_with_aio", "wallClockTime": 19.524, "clientTime": 17.81, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.863, "avgWallClockTime": 4.881, "shortestQuery": 2.682}, {"testName": "order_by_single_column", "wallClockTime": 33.761, "clientTime": 30.884, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.555, "avgWallClockTime": 4.823, "shortestQuery": 1.216}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.633, "clientTime": 7.494, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.785, "avgWallClockTime": 4.816, "shortestQuery": 1.708}, {"testName": "range", "wallClockTime": 9.589, "clientTime": 8.686, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.082, "avgWallClockTime": 4.794, "shortestQuery": 2.604}, {"testName": "codecs_int_insert", "wallClockTime": 98.143, "clientTime": 86.509, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 8.316, "avgWallClockTime": 4.673, "shortestQuery": 1.291}, {"testName": "merge_tree_huge_pk", "wallClockTime": 18.511, "clientTime": 1.74, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.277, "avgWallClockTime": 4.627, "shortestQuery": 1.277}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.475, "clientTime": 31.053, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.506, "avgWallClockTime": 4.434, "shortestQuery": 0.913}, {"testName": "entropy", "wallClockTime": 38.03, "clientTime": 34.727, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.784, "avgWallClockTime": 4.225, "shortestQuery": 0.75}, {"testName": "trim_whitespace", "wallClockTime": 24.257, "clientTime": 12.02, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.435, "avgWallClockTime": 4.042, "shortestQuery": 1.067}, {"testName": "scalar", "wallClockTime": 4.004, "clientTime": 1.419, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.419, "avgWallClockTime": 4.004, "shortestQuery": 1.419}, {"testName": "set_hits", "wallClockTime": 23.531, "clientTime": 21.498, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.378, "avgWallClockTime": 3.921, "shortestQuery": 1.001}, {"testName": "linear_regression", "wallClockTime": 19.383, "clientTime": 17.555, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.188, "avgWallClockTime": 3.876, "shortestQuery": 0.747}, {"testName": "array_auc", "wallClockTime": 3.861, "clientTime": 3.442, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.442, "avgWallClockTime": 3.861, "shortestQuery": 3.442}, {"testName": "order_by_read_in_order", "wallClockTime": 18.957, "clientTime": 17.001, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.604, "avgWallClockTime": 3.791, "shortestQuery": 1.436}, {"testName": "functions_geo", "wallClockTime": 20.039, "clientTime": 18.284, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.443, "avgWallClockTime": 3.339, "shortestQuery": 1.691}, {"testName": "set_index", "wallClockTime": 16.649, "clientTime": 4.805, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.31, "avgWallClockTime": 3.329, "shortestQuery": 0.683}, {"testName": "if_array_num", "wallClockTime": 17.703, "clientTime": 16.136, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.545, "avgWallClockTime": 2.95, "shortestQuery": 1.863}, {"testName": "bitCount", "wallClockTime": 16.561, "clientTime": 15.056, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.681, "avgWallClockTime": 2.76, "shortestQuery": 1.742}, {"testName": "decimal_aggregates", "wallClockTime": 57.452, "clientTime": 52.484, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.402, "avgWallClockTime": 2.735, "shortestQuery": 0.89}, {"testName": "h3", "wallClockTime": 2.703, "clientTime": 2.374, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.374, "avgWallClockTime": 2.703, "shortestQuery": 2.374}, {"testName": "date_time_64", "wallClockTime": 43.028, "clientTime": 32.034, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.938, "avgWallClockTime": 2.39, "shortestQuery": 0.587}, {"testName": "empty_string_deserialization", "wallClockTime": 2.337, "clientTime": 0.39, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.336, "shortestQuery": 0.0}, {"testName": "least_greatest_hits", "wallClockTime": 6.578, "clientTime": 5.91, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.527, "avgWallClockTime": 2.192, "shortestQuery": 2.141}, {"testName": "distributed_aggregation", "wallClockTime": 7.666, "clientTime": 6.907, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.784, "avgWallClockTime": 1.916, "shortestQuery": 1.684}, {"testName": "jit_large_requests", "wallClockTime": 3.608, "clientTime": 1.546, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.986, "avgWallClockTime": 1.804, "shortestQuery": 0.986}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.748, "clientTime": 1.492, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.492, "avgWallClockTime": 1.748, "shortestQuery": 1.492}, {"testName": "merge_table_streams", "wallClockTime": 1.728, "clientTime": 1.377, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.377, "avgWallClockTime": 1.728, "shortestQuery": 1.377}, {"testName": "order_by_decimals", "wallClockTime": 8.454, "clientTime": 7.648, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.275, "avgWallClockTime": 1.69, "shortestQuery": 0.813}, {"testName": "array_element", "wallClockTime": 4.623, "clientTime": 4.113, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.546, "avgWallClockTime": 1.541, "shortestQuery": 1.083}, {"testName": "int_parsing", "wallClockTime": 102.205, "clientTime": 93.514, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.037, "avgWallClockTime": 1.231, "shortestQuery": 0.62}, {"testName": "basename", "wallClockTime": 2.2, "clientTime": 1.905, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.042, "avgWallClockTime": 1.1, "shortestQuery": 0.862}, {"testName": "if_string_hits", "wallClockTime": 4.241, "clientTime": 3.788, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.019, "avgWallClockTime": 1.06, "shortestQuery": 1.061}, {"testName": "concat_hits", "wallClockTime": 24.164, "clientTime": 22.071, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.862, "avgWallClockTime": 0.929, "shortestQuery": 1.194}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.838, "clientTime": 1.585, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.953, "avgWallClockTime": 0.919, "shortestQuery": 0.631}, {"testName": "information_value", "wallClockTime": 1.794, "clientTime": 1.547, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.988, "avgWallClockTime": 0.897, "shortestQuery": 0.559}, {"testName": "great_circle_dist", "wallClockTime": 1.742, "clientTime": 1.499, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.97, "avgWallClockTime": 0.87, "shortestQuery": 0.97}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.68, "clientTime": 37.694, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.72, "avgWallClockTime": 0.861, "shortestQuery": 2.095}, {"testName": "jit_small_requests", "wallClockTime": 2.384, "clientTime": 2.004, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.292, "avgWallClockTime": 0.794, "shortestQuery": 1.292}, {"testName": "count", "wallClockTime": 0.788, "clientTime": 0.019, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.787, "shortestQuery": 0.0}, {"testName": "slices_hits", "wallClockTime": 1.57, "clientTime": 1.315, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 1.035, "avgWallClockTime": 0.785, "shortestQuery": 1.035}, {"testName": "codecs_float_insert", "wallClockTime": 11.228, "clientTime": 9.411, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.948, "avgWallClockTime": 0.748, "shortestQuery": 0.595}, {"testName": "analyze_array_tuples", "wallClockTime": 0.64, "clientTime": 0.482, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.639, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.512, "clientTime": 3.123, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.672, "avgWallClockTime": 0.585, "shortestQuery": 0.639}, {"testName": "complex_array_creation", "wallClockTime": 1.16, "clientTime": 0.966, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.579, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.509, "clientTime": 3.124, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.506, "avgWallClockTime": 0.501, "shortestQuery": 1.002}, {"testName": "date_parsing", "wallClockTime": 0.471, "clientTime": 0.333, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.47, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.738, "clientTime": 3.21, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.696, "avgWallClockTime": 0.467, "shortestQuery": 0.597}, {"testName": "early_constant_folding", "wallClockTime": 0.419, "clientTime": 0.279, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.418, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.828, "clientTime": 0.621, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.414, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.401, "clientTime": 0.263, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.4, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.864, "clientTime": 6.158, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.277, "avgWallClockTime": 0.361, "shortestQuery": 0.669}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.316, "clientTime": 1.103, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.328, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.731, "clientTime": 3.402, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.315, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 6.178, "clientTime": 4.538, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.294, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.062, "clientTime": 0.877, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.265, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.018, "clientTime": 0.837, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.254, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.959, "clientTime": 2.616, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.197, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.369, "clientTime": 0.239, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.184, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "reportErrors": []}
