{"commits": {"leftCommit": {"commit": "faeab5f6496e4875ae9b66a97a60229bbca8acdf", "merge": "73f978cb 2d08c8e4", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 22:47:12 2020 +0300", "info": "Merge pull request #10370 from amosbird/clang-10\nclang-10 fix"}, "rightCommit": {"commit": "69b6f135e7dc441739e5940e40cfc1784259a647", "merge": "faeab5f6 f6de9c6f", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 22:54:53 2020 +0300", "info": "Merge pull request #10382 from excitoon-favorites/altercodec\nAllowed to alter column in non-modifying data mode when the same type is specified"}}, "changes": [], "unstableQueries": [{"oldTime": 0.0338, "newTime": 0.0334, "relativeDifference": -0.012, "quantiles": [0.009, 0.026, 0.529, 0.552], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0593, "newTime": 0.0511, "relativeDifference": -0.139, "quantiles": [0.007, 0.105, 0.228, 0.302], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1109, "newTime": 0.114, "relativeDifference": 0.027, "quantiles": [0.027, 0.107, 0.215, 0.235], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1206, "newTime": 0.1182, "relativeDifference": -0.02, "quantiles": [0.019, 0.136, 0.193, 0.21], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0922, "newTime": 0.0791, "relativeDifference": -0.143, "quantiles": [0.021, 0.055, 0.172, 0.234], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0337, "newTime": 0.0331, "relativeDifference": -0.018, "quantiles": [0.006, 0.044, 0.142, 0.158], "testName": "conditional", "query": "SELECT count() FROM zeros(1000000) WHERE NOT ignore(multiIf(rand() % 2, [toDateTime(rand())], [toDate(rand())]))"}, {"oldTime": 0.9551, "newTime": 0.9044, "relativeDifference": -0.054, "quantiles": [0.052, 0.089, 0.141, 0.2], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.0379, "newTime": 0.0337, "relativeDifference": -0.111, "quantiles": [0.042, 0.056, 0.122, 0.134], "testName": "linear_regression", "query": "SELECT stochasticLinearRegression(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.1332, "newTime": 0.1243, "relativeDifference": -0.067, "quantiles": [0.052, 0.073, 0.121, 0.134], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.9232, "newTime": 0.911, "relativeDifference": -0.014, "quantiles": [0.008, 0.04, 0.121, 0.132], "testName": "cpu_synthetic", "query": "SELECT count() FROM hits_100m_single WHERE NOT ignore(MD5(SearchPhrase))"}, {"oldTime": 0.5325, "newTime": 0.5251, "relativeDifference": -0.014, "quantiles": [0.007, 0.034, 0.119, 0.129], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(metroHash64(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.1408, "newTime": 0.1382, "relativeDifference": -0.019, "quantiles": [0.018, 0.052, 0.115, 0.128], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.5439, "newTime": 0.5835, "relativeDifference": 0.072, "quantiles": [0.012, 0.066, 0.11, 0.118], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(farmHash64(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.0329, "newTime": 0.035, "relativeDifference": 0.063, "quantiles": [0.027, 0.038, 0.109, 0.152], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15)(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.0857, "newTime": 0.0921, "relativeDifference": 0.074, "quantiles": [0.043, 0.059, 0.108, 0.13], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0325, "newTime": 0.0324, "relativeDifference": -0.004, "quantiles": [0.001, 0.012, 0.097, 0.113], "testName": "vectorize_aggregation_combinators", "query": "SELECT countMerge(v) FROM (SELECT countState() v FROM zeros(1000000000)) FORMAT Null"}, {"oldTime": 0.0552, "newTime": 0.0496, "relativeDifference": -0.102, "quantiles": [0.034, 0.07, 0.097, 0.102], "testName": "int_parsing", "query": "SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionHeight)) SETTINGS max_threads = 1"}, {"oldTime": 0.1161, "newTime": 0.1079, "relativeDifference": -0.071, "quantiles": [0.033, 0.055, 0.095, 0.125], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0291, "newTime": 0.0296, "relativeDifference": 0.017, "quantiles": [0.006, 0.015, 0.095, 0.149], "testName": "set_index", "query": "SELECT count() FROM test_in WHERE a IN (SELECT rand(1) FROM numbers(100000)) SETTINGS max_rows_to_read = 1, read_overflow_mode = \\'break\\'"}, {"oldTime": 0.3986, "newTime": 0.4452, "relativeDifference": 0.116, "quantiles": [0.021, 0.061, 0.092, 0.105], "testName": "math", "query": "SELECT count() FROM numbers(100000000) WHERE NOT ignore(exp10(number))"}, {"oldTime": 0.1194, "newTime": 0.1304, "relativeDifference": 0.092, "quantiles": [0.016, 0.034, 0.091, 0.114], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0566, "newTime": 0.0593, "relativeDifference": 0.047, "quantiles": [0.005, 0.023, 0.081, 0.113], "testName": "order_by_single_column", "query": "SELECT MobilePhoneModel as col FROM hits_100m_single WHERE notEmpty(col) ORDER BY col LIMIT 500000,1"}, {"oldTime": 0.1009, "newTime": 0.0941, "relativeDifference": -0.068, "quantiles": [0.014, 0.055, 0.078, 0.115], "testName": "string_sort", "query": "SELECT MobilePhoneModel, PageCharset FROM hits_100m_single ORDER BY MobilePhoneModel, PageCharset LIMIT 10"}, {"oldTime": 0.789, "newTime": 0.7213, "relativeDifference": -0.086, "quantiles": [0.004, 0.021, 0.076, 0.103], "testName": "empty_string_serialization", "query": "INSERT INTO empty_strings SELECT \\'\\' FROM zeros(100000000);"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 6.0, "changedPerf": 0.0, "total": 6.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "general_purpose_hashes", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "linear_regression", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "math", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "website", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "conditional", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "int_parsing", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "set_index", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "order_by_single_column", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "empty_string_serialization", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "vectorize_aggregation_combinators", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 29.408, "clientTime": 26.409, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.409, "avgWallClockTime": 29.408, "shortestQuery": 26.409}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 29.233, "clientTime": 26.18, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.18, "avgWallClockTime": 29.232, "shortestQuery": 26.18}, {"testName": "simple_join_query", "wallClockTime": 79.211, "clientTime": 51.679, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.088, "avgWallClockTime": 19.802, "shortestQuery": 12.697}, {"testName": "general_purpose_hashes", "wallClockTime": 1481.453, "clientTime": 1357.811, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.905, "avgWallClockTime": 18.992, "shortestQuery": 3.516}, {"testName": "empty_string_serialization", "wallClockTime": 18.228, "clientTime": 16.498, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.498, "avgWallClockTime": 18.228, "shortestQuery": 16.498}, {"testName": "trim_urls", "wallClockTime": 107.109, "clientTime": 98.118, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 42.488, "avgWallClockTime": 17.851, "shortestQuery": 8.167}, {"testName": "array_fill", "wallClockTime": 103.664, "clientTime": 94.868, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.148, "avgWallClockTime": 17.277, "shortestQuery": 7.346}, {"testName": "group_array_moving_sum", "wallClockTime": 205.13, "clientTime": 152.17, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.728, "avgWallClockTime": 17.094, "shortestQuery": 7.085}, {"testName": "prewhere", "wallClockTime": 16.754, "clientTime": 15.25, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.25, "avgWallClockTime": 16.753, "shortestQuery": 15.25}, {"testName": "first_significant_subdomain", "wallClockTime": 16.111, "clientTime": 14.681, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.681, "avgWallClockTime": 16.111, "shortestQuery": 14.681}, {"testName": "constant_column_search", "wallClockTime": 409.394, "clientTime": 374.943, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 35.516, "avgWallClockTime": 14.621, "shortestQuery": 4.944}, {"testName": "trim_numbers", "wallClockTime": 80.253, "clientTime": 73.384, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 29.661, "avgWallClockTime": 13.375, "shortestQuery": 2.615}, {"testName": "string_sort", "wallClockTime": 1112.151, "clientTime": 1018.321, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 35.086, "avgWallClockTime": 13.239, "shortestQuery": 0.604}, {"testName": "and_function", "wallClockTime": 26.176, "clientTime": 23.934, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 22.025, "avgWallClockTime": 13.088, "shortestQuery": 1.909}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.349, "clientTime": 4.424, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.424, "avgWallClockTime": 12.348, "shortestQuery": 4.424}, {"testName": "constant_column_comparison", "wallClockTime": 223.619, "clientTime": 204.802, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.549, "avgWallClockTime": 10.648, "shortestQuery": 3.9}, {"testName": "json_extract_rapidjson", "wallClockTime": 136.77, "clientTime": 125.224, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.351, "avgWallClockTime": 10.52, "shortestQuery": 3.58}, {"testName": "bloom_filter", "wallClockTime": 9.952, "clientTime": 8.941, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.941, "avgWallClockTime": 9.951, "shortestQuery": 8.941}, {"testName": "url_hits", "wallClockTime": 194.216, "clientTime": 185.138, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.663, "avgWallClockTime": 9.71, "shortestQuery": 5.878}, {"testName": "array_reduce", "wallClockTime": 58.148, "clientTime": 53.172, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.525, "avgWallClockTime": 9.691, "shortestQuery": 3.884}, {"testName": "joins_in_memory", "wallClockTime": 327.482, "clientTime": 447.864, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 21.981, "avgWallClockTime": 9.631, "shortestQuery": 17.329}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 616.624, "clientTime": 565.146, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 27.482, "avgWallClockTime": 9.342, "shortestQuery": 0.86}, {"testName": "base64_hits", "wallClockTime": 109.735, "clientTime": 100.605, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.6, "avgWallClockTime": 9.144, "shortestQuery": 0.84}, {"testName": "if_array_string", "wallClockTime": 53.302, "clientTime": 48.798, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 20.649, "avgWallClockTime": 8.883, "shortestQuery": 4.209}, {"testName": "string_join", "wallClockTime": 26.199, "clientTime": 19.803, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.328, "avgWallClockTime": 8.732, "shortestQuery": 4.455}, {"testName": "sum_map", "wallClockTime": 34.374, "clientTime": 29.352, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.491, "avgWallClockTime": 8.593, "shortestQuery": 1.361}, {"testName": "logical_functions_large", "wallClockTime": 85.513, "clientTime": 78.245, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.353, "avgWallClockTime": 8.551, "shortestQuery": 3.841}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 212.599, "clientTime": 194.382, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 38.365, "avgWallClockTime": 8.176, "shortestQuery": 0.883}, {"testName": "visit_param_extract_raw", "wallClockTime": 23.815, "clientTime": 21.694, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.318, "avgWallClockTime": 7.938, "shortestQuery": 2.063}, {"testName": "column_column_comparison", "wallClockTime": 142.379, "clientTime": 130.57, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.784, "avgWallClockTime": 7.493, "shortestQuery": 5.296}, {"testName": "math", "wallClockTime": 445.362, "clientTime": 408.118, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.371, "avgWallClockTime": 7.422, "shortestQuery": 2.279}, {"testName": "round_down", "wallClockTime": 35.353, "clientTime": 32.304, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.56, "avgWallClockTime": 7.07, "shortestQuery": 1.284}, {"testName": "random_printable_ascii", "wallClockTime": 49.036, "clientTime": 44.892, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.169, "avgWallClockTime": 7.005, "shortestQuery": 2.957}, {"testName": "array_join", "wallClockTime": 41.861, "clientTime": 38.333, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.024, "avgWallClockTime": 6.976, "shortestQuery": 2.256}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.932, "clientTime": 0.024, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.932, "shortestQuery": 0.0}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.921, "clientTime": 0.021, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.921, "shortestQuery": 0.0}, {"testName": "cpu_synthetic", "wallClockTime": 325.186, "clientTime": 311.054, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 43.305, "avgWallClockTime": 6.918, "shortestQuery": 1.061}, {"testName": "right", "wallClockTime": 13.807, "clientTime": 12.569, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.553, "avgWallClockTime": 6.903, "shortestQuery": 6.015}, {"testName": "ngram_distance", "wallClockTime": 109.586, "clientTime": 100.342, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.155, "avgWallClockTime": 6.849, "shortestQuery": 4.01}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.795, "clientTime": 27.173, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.179, "avgWallClockTime": 6.758, "shortestQuery": 0.592}, {"testName": "sort", "wallClockTime": 67.542, "clientTime": 60.855, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.043, "avgWallClockTime": 6.754, "shortestQuery": 3.598}, {"testName": "collations", "wallClockTime": 13.453, "clientTime": 12.26, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 11.149, "avgWallClockTime": 6.726, "shortestQuery": 1.11}, {"testName": "uniq", "wallClockTime": 513.982, "clientTime": 470.758, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 44.894, "avgWallClockTime": 6.424, "shortestQuery": 0.9}, {"testName": "string_set", "wallClockTime": 43.211, "clientTime": 35.377, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.751, "avgWallClockTime": 6.172, "shortestQuery": 3.11}, {"testName": "base64", "wallClockTime": 50.19, "clientTime": 45.869, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.964, "avgWallClockTime": 5.576, "shortestQuery": 1.987}, {"testName": "json_extract_simdjson", "wallClockTime": 71.763, "clientTime": 65.746, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.321, "avgWallClockTime": 5.52, "shortestQuery": 2.819}, {"testName": "merge_tree_huge_pk", "wallClockTime": 21.958, "clientTime": 1.715, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.243, "avgWallClockTime": 5.489, "shortestQuery": 1.243}, {"testName": "website", "wallClockTime": 383.887, "clientTime": 357.564, "total": 73.0, "ignoredQueries": 18.0, "longestQuery": 37.995, "avgWallClockTime": 5.258, "shortestQuery": 0.673}, {"testName": "read_hits_with_aio", "wallClockTime": 19.984, "clientTime": 18.203, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 6.114, "avgWallClockTime": 4.995, "shortestQuery": 2.828}, {"testName": "order_by_single_column", "wallClockTime": 33.883, "clientTime": 30.966, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.543, "avgWallClockTime": 4.84, "shortestQuery": 1.312}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.316, "clientTime": 7.457, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.75, "avgWallClockTime": 4.657, "shortestQuery": 1.706}, {"testName": "range", "wallClockTime": 9.203, "clientTime": 8.333, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.741, "avgWallClockTime": 4.601, "shortestQuery": 2.592}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.288, "clientTime": 30.834, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.31, "avgWallClockTime": 4.41, "shortestQuery": 0.899}, {"testName": "codecs_int_insert", "wallClockTime": 91.389, "clientTime": 81.03, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.888, "avgWallClockTime": 4.351, "shortestQuery": 1.221}, {"testName": "entropy", "wallClockTime": 37.854, "clientTime": 34.586, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.672, "avgWallClockTime": 4.206, "shortestQuery": 0.741}, {"testName": "order_by_read_in_order", "wallClockTime": 20.359, "clientTime": 18.293, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 9.143, "avgWallClockTime": 4.071, "shortestQuery": 1.456}, {"testName": "linear_regression", "wallClockTime": 20.133, "clientTime": 18.307, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.573, "avgWallClockTime": 4.026, "shortestQuery": 0.782}, {"testName": "scalar", "wallClockTime": 4.022, "clientTime": 1.374, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.374, "avgWallClockTime": 4.021, "shortestQuery": 1.374}, {"testName": "trim_whitespace", "wallClockTime": 24.004, "clientTime": 11.642, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.393, "avgWallClockTime": 4.0, "shortestQuery": 0.999}, {"testName": "set_hits", "wallClockTime": 23.042, "clientTime": 21.009, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.232, "avgWallClockTime": 3.84, "shortestQuery": 0.982}, {"testName": "array_auc", "wallClockTime": 3.644, "clientTime": 3.226, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.226, "avgWallClockTime": 3.644, "shortestQuery": 3.226}, {"testName": "functions_geo", "wallClockTime": 20.323, "clientTime": 18.551, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.758, "avgWallClockTime": 3.387, "shortestQuery": 1.724}, {"testName": "set_index", "wallClockTime": 15.759, "clientTime": 4.566, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.158, "avgWallClockTime": 3.151, "shortestQuery": 0.686}, {"testName": "if_array_num", "wallClockTime": 17.505, "clientTime": 15.956, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.489, "avgWallClockTime": 2.917, "shortestQuery": 1.825}, {"testName": "decimal_aggregates", "wallClockTime": 57.633, "clientTime": 52.553, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.435, "avgWallClockTime": 2.744, "shortestQuery": 0.843}, {"testName": "bitCount", "wallClockTime": 16.346, "clientTime": 14.885, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.707, "avgWallClockTime": 2.724, "shortestQuery": 1.665}, {"testName": "h3", "wallClockTime": 2.595, "clientTime": 2.281, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.281, "avgWallClockTime": 2.595, "shortestQuery": 2.281}, {"testName": "date_time_64", "wallClockTime": 42.571, "clientTime": 31.706, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.955, "avgWallClockTime": 2.365, "shortestQuery": 0.562}, {"testName": "least_greatest_hits", "wallClockTime": 6.51, "clientTime": 5.888, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.513, "avgWallClockTime": 2.17, "shortestQuery": 2.165}, {"testName": "empty_string_deserialization", "wallClockTime": 2.137, "clientTime": 0.43, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.137, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.595, "clientTime": 6.853, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.749, "avgWallClockTime": 1.898, "shortestQuery": 1.67}, {"testName": "merge_table_streams", "wallClockTime": 1.814, "clientTime": 1.448, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.448, "avgWallClockTime": 1.814, "shortestQuery": 1.448}, {"testName": "jit_large_requests", "wallClockTime": 3.583, "clientTime": 1.528, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.983, "avgWallClockTime": 1.791, "shortestQuery": 0.983}, {"testName": "order_by_decimals", "wallClockTime": 8.539, "clientTime": 7.733, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.319, "avgWallClockTime": 1.707, "shortestQuery": 0.824}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.623, "clientTime": 1.369, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.369, "avgWallClockTime": 1.623, "shortestQuery": 1.369}, {"testName": "array_element", "wallClockTime": 4.428, "clientTime": 3.98, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.471, "avgWallClockTime": 1.475, "shortestQuery": 1.071}, {"testName": "int_parsing", "wallClockTime": 101.969, "clientTime": 93.36, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.053, "avgWallClockTime": 1.228, "shortestQuery": 0.618}, {"testName": "basename", "wallClockTime": 2.232, "clientTime": 1.948, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.039, "avgWallClockTime": 1.116, "shortestQuery": 0.908}, {"testName": "if_string_hits", "wallClockTime": 4.2, "clientTime": 3.746, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.025, "avgWallClockTime": 1.049, "shortestQuery": 1.033}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.833, "clientTime": 1.576, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.952, "avgWallClockTime": 0.916, "shortestQuery": 0.624}, {"testName": "concat_hits", "wallClockTime": 23.71, "clientTime": 21.657, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.813, "avgWallClockTime": 0.911, "shortestQuery": 1.166}, {"testName": "great_circle_dist", "wallClockTime": 1.747, "clientTime": 1.506, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.974, "avgWallClockTime": 0.873, "shortestQuery": 0.974}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.473, "clientTime": 37.312, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.751, "avgWallClockTime": 0.853, "shortestQuery": 2.059}, {"testName": "information_value", "wallClockTime": 1.7, "clientTime": 1.457, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.924, "avgWallClockTime": 0.85, "shortestQuery": 0.924}, {"testName": "jit_small_requests", "wallClockTime": 2.35, "clientTime": 1.973, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.286, "avgWallClockTime": 0.783, "shortestQuery": 1.286}, {"testName": "codecs_float_insert", "wallClockTime": 11.243, "clientTime": 9.357, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.951, "avgWallClockTime": 0.749, "shortestQuery": 0.582}, {"testName": "count", "wallClockTime": 0.729, "clientTime": 0.014, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.728, "shortestQuery": 0.0}, {"testName": "slices_hits", "wallClockTime": 1.447, "clientTime": 1.222, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.97, "avgWallClockTime": 0.723, "shortestQuery": 0.97}, {"testName": "analyze_array_tuples", "wallClockTime": 0.67, "clientTime": 0.511, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.67, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.463, "clientTime": 3.082, "total": 6.0, "ignoredQueries": 2.0, "longestQuery": 0.652, "avgWallClockTime": 0.577, "shortestQuery": 0.558}, {"testName": "complex_array_creation", "wallClockTime": 1.145, "clientTime": 0.95, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.572, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.511, "clientTime": 3.121, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.503, "avgWallClockTime": 0.501, "shortestQuery": 1.021}, {"testName": "date_parsing", "wallClockTime": 0.487, "clientTime": 0.353, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.486, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.699, "clientTime": 3.293, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.753, "avgWallClockTime": 0.462, "shortestQuery": 0.618}, {"testName": "early_constant_folding", "wallClockTime": 0.423, "clientTime": 0.29, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.423, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.408, "clientTime": 0.273, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.407, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.736, "clientTime": 0.562, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.368, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.8, "clientTime": 6.104, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.31, "avgWallClockTime": 0.357, "shortestQuery": 0.655}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.377, "clientTime": 1.159, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.344, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.662, "clientTime": 3.337, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.31, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.643, "clientTime": 4.117, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.268, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.044, "clientTime": 0.862, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.261, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 0.999, "clientTime": 0.817, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.249, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.374, "clientTime": 0.242, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.187, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.807, "clientTime": 2.478, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.187, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": [0.0001], "and_function": [0.0001, 0.0019], "array_auc": [0.0067], "array_element": [0.0006, -0.0017, 0.0008], "array_fill": [0.0056, 0.0059, 0.0085, -0.0065, 0.0035, 0.0085], "array_join": [-0.0037, -0.0027, 0.0019, -0.0058, 0.0001, -0.0016], "array_reduce": [-0.0006, 0.0004, 0.0002, -0.0166, -0.0059, -0.001], "base64": [-0.0025, 0.0002, -0.0001, 0.0037, -0.0041, -0.0035, -0.0016, -0.0072, -0.0004], "base64_hits": [-0.0008, 0.0001, 0.0233, -0.015, -0.0005, 0.0, 0.0014, 0.0026, 0.0006, -0.0018, -0.0199, -0.0135], "basename": [-0.0017, -0.0007], "bitCount": [0.001, 0.0001, 0.0004, 0.0009, 0.0015, -0.0014], "bit_operations_fixed_string": [-0.0003, -0.0003, 0.0001, 0.0003], "bit_operations_fixed_string_numbers": [0.0001, 0.0004], "bloom_filter": [0.0015], "bounding_ratio": [-0.0003, 0.0], "cidr": [-0.0013, -0.0007], "codecs_float_insert": [0.0001, -0.0008, -0.0004, -0.0008, -0.0003, -0.0008, -0.0009, -0.0013, -0.0014, 0.0005, -0.0003, -0.0001, -0.0021, 0.0029, 0.0002], "codecs_float_select": [0.0003, 0.0, 0.0002, -0.0005, 0.0001, -0.0002, -0.0004, -0.0006, -0.0005, 0.0001, 0.0, -0.0003, 0.0001, -0.0002, -0.0004], "codecs_int_insert": [-0.0026, -0.0096, 0.0019, 0.002, -0.0089, 0.0053, -0.0072, -0.0008, -0.0118, 0.0076, 0.011, -0.0006, -0.004, -0.0098, 0.0031, -0.0082, -0.0039, 0.0052, -0.0082, 0.0049, 0.006], "codecs_int_select": [-0.0004, 0.0002, -0.0001, 0.0001, -0.0001, 0.0001, -0.0006, 0.0, -0.0004, -0.0007, 0.0001, -0.0003, -0.0002, -0.0004, -0.001, 0.0003, -0.0001, -0.0001, 0.0, 0.0005, 0.0], "collations": [0.0129, 0.0001], "column_column_comparison": [0.0001, 0.0009, 0.0049, 0.0, 0.0011, 0.005, -0.0003, 0.0003, -0.0029, 0.0001, -0.0011, 0.0029, -0.0001, 0.0, -0.0017, -0.0004, 0.0115, 0.0003, 0.0012], "complex_array_creation": [0.0001, 0.0001], "concat_hits": [0.0003, 0.0004, 0.0003, 0.0007, 0.0001, -0.0005, -0.0001, -0.002, 0.0007, -0.0042, -0.0015, -0.0026, -0.0004, -0.0003, -0.0002, -0.0001, -0.0002, 0.0013, 0.0012, -0.0019, 0.0004, 0.0012, 0.0014, -0.0011, -0.0008, -0.0005], "conditional": [-0.0001, -0.0015, -0.0004, -0.0003, 0.0, -0.0006, -0.0002, 0.0], "consistent_hashes": [0.0001, 0.0006, 0.0001, -0.0004, 0.0001, 0.0, 0.0001], "constant_column_comparison": [-0.0043, -0.0033, 0.0002, -0.0004, -0.0026, -0.0012, 0.0033, 0.0003, 0.0024, 0.0028, 0.001, 0.0018, 0.0, -0.0014, -0.0008, -0.0037, -0.0002, 0.0055, 0.0022, -0.0073, 0.0036], "constant_column_search": [-0.0007, -0.001, -0.0018, 0.0044, -0.0586, -0.0224, -0.0015, -0.0007, -0.001, 0.0056, 0.0051, -0.0558, 0.0035, 0.0035, -0.0041, 0.001, -0.0088, -0.0002, -0.0916, 0.004, -0.0863, 0.0045, -0.0008, 0.0061, 0.0, 0.0024, -0.0013, 0.0015], "count": [-0.0001], "cpu_synthetic": [0.0024, -0.0037, -0.0017, 0.0044, -0.0122, 0.0004, -0.0012, -0.0001, -0.0134, -0.0008, 0.0001, -0.0001, 0.0017, -0.0019, -0.0005, -0.0036, 0.0615, 0.0005, -0.0037, 0.0011, 0.002, 0.0065, -0.0033, -0.0001, -0.0007, -0.0025, 0.0067, -0.0015, 0.0064, -0.0025, -0.0056, 0.0009, 0.0001, -0.0004, 0.0004, -0.0004, 0.0, 0.0, 0.0, 0.0, 0.0009, 0.0, -0.0013, -0.0005, 0.0006], "date_parsing": [-0.0034], "date_time_64": [0.0009, -0.0006, 0.0002, 0.0008, 0.0008, 0.0005, -0.0005, -0.0065, -0.0007, -0.0001, 0.0007, 0.0008, 0.0014, -0.0005, -0.0012, 0.002, 0.0006, 0.0007], "decimal_aggregates": [-0.0008, -0.0002, 0.0001, -0.0016, 0.0017, 0.0005, -0.0004, 0.0004, -0.0001, 0.0016, -0.0002, -0.0013, -0.0049, 0.001, -0.0011, 0.0003, -0.0009, 0.0046, 0.0003, -0.0002, 0.0001], "distributed_aggregation": [0.0019, 0.0003, 0.0009, -0.0026], "early_constant_folding": [0.0], "empty_string_deserialization": [0.0004], "empty_string_serialization": [-0.0677], "entropy": [0.0003, -0.0009, -0.0001, -0.0007, 0.0003, 0.0005, 0.0019, 0.0088, -0.0008], "first_significant_subdomain": [0.0022], "fixed_string16": [-0.0001], "format_date_time": [0.0005, 0.0003, -0.0008, -0.0008, -0.0003, 0.0003], "functions_coding": [0.0, -0.0003, -0.0006, 0.0], "functions_geo": [-0.0001, -0.0002, 0.0029, -0.0017, 0.0012, -0.0014], "general_purpose_hashes": [-0.0002, 0.0161, 0.0093, -0.0006, 0.0061, -0.0008, 0.0016, 0.0053, 0.0019, -0.0519, -0.003, 0.0032, -0.0105, 0.0268, -0.002, -0.011, -0.007, 0.0043, -0.0075, 0.0158, 0.0052, 0.0079, -0.0103, -0.0066, -0.0045, -0.0241, -0.0075, -0.0041, 0.0083, -0.0034, -0.0001, -0.0063, -0.0006, 0.0101, 0.0014, 0.0135, 0.0002, 0.0104, -0.0008, 0.0001, 0.0004, -0.0062, 0.0026, 0.0035, -0.0028, -0.0073, -0.0105, 0.0024, -0.0036, -0.003, 0.001, 0.0089, -0.0091, 0.0066, 0.0396, 0.0092, -0.0054, -0.0074, -0.0033, 0.0232, -0.0008, 0.0185, -0.0178, -0.0061, 0.0055, 0.0244, 0.0027, 0.033, 0.0225, 0.0156, 0.0441, 0.058, 0.0373, 0.013, 0.0307, 0.0326, 0.0319, 0.0291], "general_purpose_hashes_on_UUID": [0.0005, -0.0005, 0.0018, 0.0, -0.0002, -0.0001, -0.0011, -0.0002, 0.001, -0.0013, -0.0004, -0.0001, -0.0004, 0.0003, 0.0, -0.0003, -0.0002, 0.0, -0.0019, -0.0002, 0.0007, 0.002, 0.002, -0.0014, 0.0045, 0.0023, 0.002, -0.0135, -0.0116, 0.0107, 0.0015, 0.0008, 0.0038, 0.0035, -0.0057, 0.002, 0.0142, 0.0151, -0.0095, -0.0002, 0.0083, -0.0026, -0.0181, 0.0028, 0.0024, 0.0031, -0.0079, 0.0059, 0.0061, 0.0049, -0.0039, -0.0037, -0.0037, -0.0116, -0.0072, -0.0076, 0.0088, 0.0001, 0.0026, -0.0007, 0.0023, 0.0056, -0.0122, 0.0017, 0.0009, 0.0056], "generate_table_function": [0.0001, -0.0003, -0.0001, -0.0004, 0.0001, 0.0001, 0.0001, 0.001, 0.002, -0.0001, -0.0003, 0.0, -0.0001, 0.0008, -0.0001, -0.0003, 0.0002, 0.0001, 0.0004], "great_circle_dist": [0.0018, 0.0003], "group_array_moving_sum": [-0.0057, 0.0067, -0.0012, -0.0073, 0.0186, 0.0032, 0.0285, 0.0012, 0.0029, 0.0109, -0.0005, -0.0089], "h3": [0.0013], "if_array_num": [-0.0004, -0.0001, -0.0003, -0.0023, -0.0016, 0.0006], "if_array_string": [-0.003, 0.007, 0.0028, 0.0018, -0.0019, -0.0507], "if_string_const": [0.0002, -0.0001, -0.0001, 0.0], "if_string_hits": [-0.0001, 0.0007, 0.0002, -0.0032], "information_value": [0.0001, 0.0], "inserts_arrays_lowcardinality": [-0.0015, 0.001], "int_parsing": [-0.001, -0.0006, -0.0004, -0.0005, 0.0002, -0.0003, -0.0004, -0.0003, -0.0004, 0.0002, -0.0008, 0.0007, -0.0005, 0.0002, 0.0002, 0.0014, 0.0, 0.0014, -0.0004, -0.0002, -0.0005, -0.0015, -0.0005, -0.0002, -0.0006, 0.002, -0.0005, -0.0008, -0.0006, 0.0, 0.0, -0.0001, -0.0002, -0.0002, -0.0002, -0.0003, 0.0001, -0.0002, -0.0004, -0.0002, -0.0005, -0.0002, 0.0002, -0.0007, -0.0002, -0.0004, 0.0001, -0.0003, -0.0003, -0.0005, -0.0002, -0.0015, -0.0002, 0.0002, -0.0014, -0.001, -0.0007, -0.0004, -0.0056, 0.0018, -0.0006, -0.001, -0.0004, -0.0002, -0.0013, 0.0002, 0.0, 0.0002, -0.0005, 0.001, -0.0003, -0.0004, -0.0002, -0.0013, -0.0004, -0.0002, 0.0009, 0.0017, 0.0, -0.0015, -0.0003, -0.0003, -0.0004], "jit_large_requests": [0.0, 0.0], "jit_small_requests": [-0.0002, -0.0004, -0.0005], "joins_in_memory": [-0.0003, 0.0, -0.0001, -0.0003, 0.0, 0.0004, 0.0026, 0.0017, -0.0025, 0.0085, 0.0072, -0.0121, 0.0125, 0.0, 0.0042, 0.0013, 0.0071, 0.0019, 0.0024, 0.0039, -0.0085], "joins_in_memory_pmj": [0.0, 0.0003, 0.0004, 0.0, 0.0006, 0.001, 0.0013, 0.0006, -0.0015, 0.0027, 0.0002, 0.0018], "json_extract_rapidjson": [0.0001, 0.0095, 0.0144, 0.0094, -0.017, 0.0042, -0.0003, -0.0017, -0.0054, -0.04, -0.0106, 0.0023, -0.0002], "json_extract_simdjson": [0.004, 0.0054, 0.0002, 0.0013, 0.0051, -0.0012, -0.0078, 0.0006, -0.0048, 0.0024, -0.0122, 0.004, -0.0039], "least_greatest_hits": [0.0, 0.0014, -0.0008], "linear_regression": [-0.0042, 0.0021, -0.0091, -0.0151, 0.002], "logical_functions_large": [0.0008, -0.0012, -0.0059, -0.0013, -0.0039, -0.0037, -0.0004, 0.004, -0.0028, -0.0038], "materialized_view_parallel_insert": [-0.0105], "math": [0.0004, -0.0002, 0.0008, -0.0009, -0.0002, -0.0006, 0.0014, 0.0, 0.0021, 0.0015, 0.0002, 0.0007, 0.0014, 0.0016, 0.0032, -0.0023, -0.0009, 0.0024, -0.0045, 0.0019, 0.0031, -0.0002, -0.0011, 0.0007, 0.0054, 0.0008, 0.0042, -0.007, 0.0054, -0.0197, 0.0013, 0.0036, 0.0089, 0.0014, -0.0083, -0.0112, 0.0019, 0.0032, -0.0032, 0.0466, 0.009, 0.035, 0.005, 0.0021, -0.0042, 0.0032, 0.0013, -0.0005, 0.0052, -0.005, -0.0069, -0.0002, -0.0002, -0.0016, -0.0002, 0.0002, 0.0022, 0.0029, -0.004, 0.0017], "merge_table_streams": [0.0001], "merge_tree_huge_pk": [0.0001, -0.001, -0.0004, 0.0], "merge_tree_many_partitions": [-0.0001], "merge_tree_many_partitions_2": [-0.0001], "merge_tree_simple_select": [0.0001], "mingroupby-orderbylimit1": [0.0066, -0.0008, 0.0001, -0.0004, -0.0024, -0.0016, 0.0064, -0.0013], "ngram_distance": [0.0001, -0.0019, 0.0005, 0.0009, 0.0036, 0.0008, -0.0006, -0.0003, 0.0013, 0.0025, 0.001, -0.0003, 0.0013, 0.0013, 0.004, -0.0007], "order_by_decimals": [0.0005, -0.0007, -0.0005, 0.0017, 0.0001], "order_by_read_in_order": [-0.0004, -0.0099, 0.0069, 0.0001, -0.0021], "order_by_single_column": [0.0006, 0.0027, -0.0013, -0.0003, -0.001, -0.0073, 0.0065], "parallel_insert": [0.0141], "pre_limit_no_sorting": [0.0004], "prewhere": [0.0003], "random_printable_ascii": [0.0026, -0.0085, -0.0006, -0.0053, -0.0175, -0.0013, 0.0018], "range": [-0.0022, -0.0006], "read_hits_with_aio": [0.0011, 0.0023, 0.005, 0.0008], "right": [-0.0001, -0.0027], "round_down": [0.0029, 0.0005, -0.0004, 0.0018, -0.0004], "round_methods": [0.0004, 0.0, -0.0002, 0.0002, -0.0002, -0.0002, 0.0, 0.0001, -0.0002, -0.0006, 0.0004, 0.0, -0.0005, 0.0001, 0.0], "scalar": [0.0028], "set_hits": [0.0002, 0.0006, -0.0004, -0.0003, -0.0012, 0.0009], "set_index": [0.0011, 0.0001, -0.0012, 0.0005, -0.0025], "simple_join_query": [0.0042, -0.0151, -0.0111, 0.0146], "slices_hits": [0.0002, -0.0011], "sort": [-0.0006, -0.0005, -0.0018, -0.0037, 0.001, 0.0003, 0.0032, 0.0089, 0.0088, -0.0009], "string_join": [0.0045, 0.0054, -0.0014], "string_set": [0.0022, 0.0066, 0.0019, 0.0061, -0.0028, 0.0016, -0.0016], "string_sort": [-0.0001, -0.0005, -0.0001, 0.0005, -0.0068, -0.0001, 0.0079, 0.0146, -0.0021, -0.0007, 0.0002, 0.0204, -0.0017, -0.0033, -0.0004, 0.0004, 0.0025, -0.0001, -0.0004, 0.0, 0.0019, 0.0105, 0.0025, -0.0056, -0.0016, -0.017, -0.0062, 0.0062, 0.0006, -0.0114, -0.0069, 0.0318, 0.0, 0.007, -0.0016, -0.0476, -0.0036, 0.0246, -0.0054, 0.005, 0.0071, 0.0512, -0.0002, -0.0015, 0.0007, 0.0016, 0.0013, -0.0055, -0.0034, 0.0118, -0.0005, 0.0039, -0.0028, -0.0058, -0.0018, 0.0249, -0.001, 0.0223, -0.0032, 0.01, -0.0019, 0.0141, 0.0043, 0.014, -0.0019, -0.0104, 0.0006, 0.0113, 0.0025, 0.0392, -0.0015, 0.0029, -0.0006, 0.0309, 0.0045, -0.0028, 0.0087, 0.0412, -0.001, -0.0149, 0.0017, 0.0243, -0.001, 0.0049], "sum_map": [-0.0004, -0.0134, 0.0009, 0.0093], "synthetic_hardware_benchmark": [0.0007, 0.0, 0.0016, 0.0005, -0.0046, 0.0019, 0.0004, 0.0075, 0.0006, -0.0047, -0.0007, -0.0015, -0.0013, 0.0001, 0.0023, 0.0076, -0.0003, -0.0006, 0.0003, -0.0009, -0.0011, 0.005, -0.0013, 0.0205, 0.0052, 0.0318], "trim_numbers": [-0.004, 0.0013, -0.0344, -0.0019, -0.0094, 0.003], "trim_urls": [-0.0057, -0.0011, -0.0933, 0.0049, -0.0138, 0.0116], "trim_whitespace": [0.0025, -0.0012, 0.0031, -0.0008, 0.0009, -0.0007], "uniq": [-0.0005, -0.0005, -0.0003, -0.0007, 0.0002, 0.0006, 0.0001, 0.0002, 0.0004, 0.0191, -0.0007, 0.0005, -0.0006, 0.0002, 0.0, -0.0001, -0.0013, -0.0083, 0.0019, 0.001, -0.0026, 0.0069, 0.0111, 0.0007, 0.0013, 0.0008, -0.0063, -0.0045, 0.0256, -0.0062, -0.0014, -0.0094, -0.0006, 0.0018, 0.0009, 0.0008, -0.0005, -0.0003, -0.0012, -0.001, 0.0005, -0.0016, 0.0008, -0.0001, 0.0012, 0.0004, 0.0014, -0.0001, 0.0, 0.0019, -0.0004, 0.0004, 0.0005, -0.0007, 0.0005, -0.0001, 0.0006, -0.0037, 0.0007, -0.0009, -0.0005, -0.0009, -0.0005, 0.0003, -0.0006, 0.0059, -0.007, -0.0004, 0.0006, 0.001, 0.0003, -0.0005, 0.0018, 0.003, 0.0019, -0.0027, 0.0124, -0.0002, 0.0028, 0.0027], "url_hits": [-0.0053, 0.0385, 0.0017, -0.0028, -0.0001, -0.0114, -0.0007, 0.0031, -0.0001, -0.004, 0.0051, 0.0046, 0.0072, 0.0017, 0.0026, -0.0003, 0.0101, -0.0026, 0.0027], "vectorize_aggregation_combinators": [-0.0065, -0.0001, 0.0, 0.007, -0.0041], "visit_param_extract_raw": [0.0005, -0.0199, 0.0052], "website": [-0.0073, 0.0025, 0.0076, 0.0022, -0.0003, -0.0025, -0.0059, 0.0004, 0.0001, 0.0008, 0.0, 0.0005, -0.0005, 0.0012, -0.0001, 0.0013, 0.0017, -0.0018, 0.0006, 0.0004, 0.0024, 0.0073, 0.0045, -0.0032, -0.0048, -0.0004, -0.0011, 0.0, -0.002, 0.0056, -0.0053, -0.0131, -0.0005, -0.0002, -0.0009, 0.0109, 0.0018, -0.001, 0.0001, 0.0093, 0.0055, 0.001, 0.0009, 0.0006, 0.0002, 0.0269, -0.0018, 0.0018, 0.0048, -0.0026, -0.0006, 0.0, -0.0022, -0.0003, 0.001, -0.0024, -0.0077, -0.0021, 0.0, -0.0001, 0.0002, 0.0001, 0.0185, 0.0048, 0.0001, -0.0001, 0.0, -0.0003, -0.0011, -0.0009, 0.0001, -0.0001]}, "reportErrors": []}
