{"commits": {"leftCommit": {"commit": "faeab5f6496e4875ae9b66a97a60229bbca8acdf", "merge": "73f978cb 2d08c8e4", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 22:47:12 2020 +0300", "info": "Merge pull request #10370 from amosbird/clang-10\nclang-10 fix"}, "rightCommit": {"commit": "ba7047e9ca98fb8b8fdb685d7f907ebc9b386738 (pr/merge)", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 21:14:23 2020 +0000", "info": "Fix error\nReal tested commit is:\nMerge a0d56997de1e736f6b2b09797be5e7b4e73adbe7 into 8c2839d3c9fcb671492356b12af3366ff0601c91", "merge": "8c2839d3 a0d56997"}}, "changes": [{"oldTime": 0.1979, "newTime": 0.2429, "relativeDifference": 0.227, "quantiles": [0.142, 0.161, 0.205, 0.222], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.1435, "newTime": 0.121, "relativeDifference": -0.157, "quantiles": [0.0, 0.054, 0.119, 0.136], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}], "unstableQueries": [{"oldTime": 0.0892, "newTime": 0.0762, "relativeDifference": -0.146, "quantiles": [0.011, 0.044, 0.24, 0.306], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.098, "newTime": 0.1018, "relativeDifference": 0.038, "quantiles": [0.034, 0.038, 0.191, 0.202], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.059, "newTime": 0.0591, "relativeDifference": 0.001, "quantiles": [0.001, 0.046, 0.189, 0.211], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0436, "newTime": 0.0444, "relativeDifference": 0.018, "quantiles": [0.0, 0.009, 0.187, 0.195], "testName": "int_parsing", "query": "SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionDepth)) SETTINGS max_threads = 1"}, {"oldTime": 0.167, "newTime": 0.1612, "relativeDifference": -0.035, "quantiles": [0.004, 0.03, 0.16, 0.171], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_T64 (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.052, "newTime": 0.0561, "relativeDifference": 0.078, "quantiles": [0.006, 0.056, 0.152, 0.189], "testName": "int_parsing", "query": "SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionWidth)) SETTINGS max_threads = 1"}, {"oldTime": 0.1207, "newTime": 0.1152, "relativeDifference": -0.046, "quantiles": [0.008, 0.057, 0.151, 0.169], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1033, "newTime": 0.1008, "relativeDifference": -0.025, "quantiles": [0.024, 0.037, 0.133, 0.147], "testName": "trim_whitespace", "query": "SELECT replaceRegexpAll(value, \\'^ *| *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.2489, "newTime": 0.267, "relativeDifference": 0.072, "quantiles": [0.072, 0.101, 0.13, 0.172], "testName": "json_extract_simdjson", "query": "SELECT \\'simdjson-8\\', count() FROM zeros(1000000) WHERE NOT ignore(JSONExtractInt(materialize(\\'{\"sparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}, \"nparam\":8495, \"fparam\":{\"nested_1\":91.15,\"nested_2\":[334, 89.05, 1000.01]}, \"bparam\":false}\\'), \\'nparam\\'))"}, {"oldTime": 0.5544, "newTime": 0.5538, "relativeDifference": -0.002, "quantiles": [0.001, 0.022, 0.129, 0.136], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash2_64(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.0932, "newTime": 0.0851, "relativeDifference": -0.087, "quantiles": [0.029, 0.047, 0.128, 0.147], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.1221, "newTime": 0.1229, "relativeDifference": 0.006, "quantiles": [0.002, 0.009, 0.122, 0.153], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.2009, "newTime": 0.1992, "relativeDifference": -0.009, "quantiles": [0.003, 0.068, 0.121, 0.13], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_LZ4 (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.3936, "newTime": 0.3879, "relativeDifference": -0.015, "quantiles": [0.002, 0.006, 0.116, 0.121], "testName": "constant_column_comparison", "query": "SELECT count() FROM hits_100m_single WHERE PageCharset < \\'\\' SETTINGS max_threads = 2"}, {"oldTime": 0.7877, "newTime": 0.773, "relativeDifference": -0.019, "quantiles": [0.003, 0.03, 0.112, 0.122], "testName": "empty_string_serialization", "query": "INSERT INTO empty_strings SELECT \\'\\' FROM zeros(100000000);"}, {"oldTime": 0.1306, "newTime": 0.1194, "relativeDifference": -0.086, "quantiles": [0.006, 0.05, 0.109, 0.12], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0631, "newTime": 0.0619, "relativeDifference": -0.02, "quantiles": [0.0, 0.019, 0.104, 0.131], "testName": "int_parsing", "query": "SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionHeight)) SETTINGS max_threads = 1"}, {"oldTime": 0.1435, "newTime": 0.139, "relativeDifference": -0.032, "quantiles": [0.03, 0.034, 0.101, 0.112], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_T64 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0283, "newTime": 0.0301, "relativeDifference": 0.063, "quantiles": [0.023, 0.038, 0.1, 0.103], "testName": "codecs_float_insert", "query": "INSERT INTO codec_seq_Float64_ZSTD (n) SELECT number/pi() FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1"}, {"oldTime": 0.6164, "newTime": 0.6081, "relativeDifference": -0.014, "quantiles": [0.003, 0.046, 0.1, 0.105], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash3_128(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.8503, "newTime": 0.8746, "relativeDifference": 0.028, "quantiles": [0.001, 0.028, 0.093, 0.123], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.144, "newTime": 0.1339, "relativeDifference": -0.071, "quantiles": [0.005, 0.022, 0.091, 0.108], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.6959, "newTime": 0.7788, "relativeDifference": 0.119, "quantiles": [0.008, 0.055, 0.089, 0.106], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.1958, "newTime": 0.1927, "relativeDifference": -0.016, "quantiles": [0.001, 0.016, 0.086, 0.152], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_1111111_key_value\\n         group by key format Null;\\n    "}, {"oldTime": 0.1213, "newTime": 0.1192, "relativeDifference": -0.018, "quantiles": [0.01, 0.024, 0.085, 0.118], "testName": "cpu_synthetic", "query": "SELECT uniqExact(UserID) FROM hits_10m_single"}, {"oldTime": 0.0545, "newTime": 0.057, "relativeDifference": 0.045, "quantiles": [0.003, 0.032, 0.084, 0.12], "testName": "base64_hits", "query": "SELECT count() FROM hits_100m_single WHERE tryBase64Decode(base64Encode(MobilePhoneModel)) != MobilePhoneModel"}, {"oldTime": 0.0815, "newTime": 0.0797, "relativeDifference": -0.023, "quantiles": [0.015, 0.034, 0.082, 0.102], "testName": "distributed_aggregation", "query": "select count() from (select sipHash64(zero) from zeros_mt(100000000) union all select sipHash64(zero) from zeros_mt(100000000))"}, {"oldTime": 0.1212, "newTime": 0.1124, "relativeDifference": -0.073, "quantiles": [0.006, 0.028, 0.079, 0.104], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0489, "newTime": 0.0509, "relativeDifference": 0.04, "quantiles": [0.002, 0.024, 0.067, 0.126], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], []][number % 2 + 2])"}, {"oldTime": 0.0322, "newTime": 0.0326, "relativeDifference": 0.012, "quantiles": [0.003, 0.007, 0.02, 0.348], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 9.0, "changedPerf": 1.0, "total": 10.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 4.0, "changedPerf": 0.0, "total": 4.0}, {"testName": "int_parsing", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "general_purpose_hashes", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "visit_param_extract_raw", "unstable": 1.0, "changedPerf": 1.0, "total": 2.0}, {"testName": "website", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "array_element", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "base64_hits", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "trim_whitespace", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "json_extract_simdjson", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "codecs_float_insert", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "distributed_aggregation", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "empty_string_serialization", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "constant_column_comparison", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "materialized_view_parallel_insert", "wallClockTime": 28.75, "clientTime": 25.743, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.743, "avgWallClockTime": 28.75, "shortestQuery": 25.743}, {"testName": "parallel_insert", "wallClockTime": 28.691, "clientTime": 25.789, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.789, "avgWallClockTime": 28.69, "shortestQuery": 25.789}, {"testName": "simple_join_query", "wallClockTime": 79.251, "clientTime": 51.585, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.04, "avgWallClockTime": 19.812, "shortestQuery": 12.785}, {"testName": "general_purpose_hashes", "wallClockTime": 1447.994, "clientTime": 1326.697, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.661, "avgWallClockTime": 18.564, "shortestQuery": 3.48}, {"testName": "empty_string_serialization", "wallClockTime": 18.229, "clientTime": 16.614, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.614, "avgWallClockTime": 18.229, "shortestQuery": 16.614}, {"testName": "trim_urls", "wallClockTime": 106.42, "clientTime": 97.4, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 42.372, "avgWallClockTime": 17.736, "shortestQuery": 8.119}, {"testName": "array_fill", "wallClockTime": 103.232, "clientTime": 94.469, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.338, "avgWallClockTime": 17.205, "shortestQuery": 7.26}, {"testName": "group_array_moving_sum", "wallClockTime": 200.478, "clientTime": 148.242, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.173, "avgWallClockTime": 16.706, "shortestQuery": 6.777}, {"testName": "prewhere", "wallClockTime": 16.614, "clientTime": 15.11, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.11, "avgWallClockTime": 16.614, "shortestQuery": 15.11}, {"testName": "first_significant_subdomain", "wallClockTime": 15.941, "clientTime": 14.509, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.509, "avgWallClockTime": 15.94, "shortestQuery": 14.509}, {"testName": "constant_column_search", "wallClockTime": 406.162, "clientTime": 371.621, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 35.1, "avgWallClockTime": 14.505, "shortestQuery": 4.895}, {"testName": "and_function", "wallClockTime": 26.777, "clientTime": 24.455, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 22.423, "avgWallClockTime": 13.388, "shortestQuery": 2.032}, {"testName": "trim_numbers", "wallClockTime": 79.879, "clientTime": 73.106, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 30.124, "avgWallClockTime": 13.313, "shortestQuery": 2.557}, {"testName": "string_sort", "wallClockTime": 1104.098, "clientTime": 1013.052, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 34.781, "avgWallClockTime": 13.144, "shortestQuery": 0.589}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.073, "clientTime": 4.386, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.386, "avgWallClockTime": 12.072, "shortestQuery": 4.386}, {"testName": "constant_column_comparison", "wallClockTime": 221.25, "clientTime": 202.708, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.434, "avgWallClockTime": 10.535, "shortestQuery": 3.848}, {"testName": "json_extract_rapidjson", "wallClockTime": 133.742, "clientTime": 122.458, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.325, "avgWallClockTime": 10.287, "shortestQuery": 3.537}, {"testName": "bloom_filter", "wallClockTime": 9.815, "clientTime": 8.821, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.821, "avgWallClockTime": 9.814, "shortestQuery": 8.821}, {"testName": "url_hits", "wallClockTime": 191.615, "clientTime": 182.773, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 21.97, "avgWallClockTime": 9.58, "shortestQuery": 5.889}, {"testName": "joins_in_memory", "wallClockTime": 324.655, "clientTime": 444.783, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 21.447, "avgWallClockTime": 9.548, "shortestQuery": 17.259}, {"testName": "array_reduce", "wallClockTime": 56.872, "clientTime": 52.017, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.262, "avgWallClockTime": 9.478, "shortestQuery": 3.765}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 612.526, "clientTime": 561.694, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 27.937, "avgWallClockTime": 9.28, "shortestQuery": 0.874}, {"testName": "base64_hits", "wallClockTime": 108.935, "clientTime": 99.722, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.622, "avgWallClockTime": 9.077, "shortestQuery": 0.83}, {"testName": "sum_map", "wallClockTime": 34.988, "clientTime": 29.784, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.527, "avgWallClockTime": 8.746, "shortestQuery": 1.386}, {"testName": "if_array_string", "wallClockTime": 51.585, "clientTime": 47.213, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 19.278, "avgWallClockTime": 8.597, "shortestQuery": 4.149}, {"testName": "logical_functions_large", "wallClockTime": 85.796, "clientTime": 78.522, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.34, "avgWallClockTime": 8.579, "shortestQuery": 3.845}, {"testName": "string_join", "wallClockTime": 25.621, "clientTime": 19.402, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.156, "avgWallClockTime": 8.54, "shortestQuery": 4.365}, {"testName": "visit_param_extract_raw", "wallClockTime": 25.326, "clientTime": 23.183, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 16.287, "avgWallClockTime": 8.442, "shortestQuery": 2.055}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 209.823, "clientTime": 192.134, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 37.388, "avgWallClockTime": 8.07, "shortestQuery": 0.891}, {"testName": "column_column_comparison", "wallClockTime": 141.799, "clientTime": 129.965, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.383, "avgWallClockTime": 7.463, "shortestQuery": 5.207}, {"testName": "math", "wallClockTime": 442.254, "clientTime": 405.371, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.639, "avgWallClockTime": 7.37, "shortestQuery": 2.268}, {"testName": "round_down", "wallClockTime": 35.767, "clientTime": 32.691, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.987, "avgWallClockTime": 7.153, "shortestQuery": 1.296}, {"testName": "right", "wallClockTime": 13.931, "clientTime": 12.684, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.63, "avgWallClockTime": 6.965, "shortestQuery": 6.053}, {"testName": "array_join", "wallClockTime": 41.609, "clientTime": 38.007, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 8.976, "avgWallClockTime": 6.934, "shortestQuery": 2.266}, {"testName": "random_printable_ascii", "wallClockTime": 48.527, "clientTime": 44.206, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.033, "avgWallClockTime": 6.932, "shortestQuery": 2.985}, {"testName": "cpu_synthetic", "wallClockTime": 322.925, "clientTime": 309.176, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.234, "avgWallClockTime": 6.87, "shortestQuery": 1.042}, {"testName": "ngram_distance", "wallClockTime": 109.514, "clientTime": 100.31, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.012, "avgWallClockTime": 6.844, "shortestQuery": 4.065}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.551, "clientTime": 26.92, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.179, "avgWallClockTime": 6.71, "shortestQuery": 0.588}, {"testName": "sort", "wallClockTime": 67.004, "clientTime": 60.419, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 12.978, "avgWallClockTime": 6.7, "shortestQuery": 3.587}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.516, "clientTime": 0.028, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.515, "shortestQuery": 0.0}, {"testName": "collations", "wallClockTime": 12.931, "clientTime": 11.762, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.626, "avgWallClockTime": 6.465, "shortestQuery": 1.136}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.368, "clientTime": 0.014, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.368, "shortestQuery": 0.0}, {"testName": "uniq", "wallClockTime": 508.307, "clientTime": 465.274, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.5, "avgWallClockTime": 6.353, "shortestQuery": 0.892}, {"testName": "string_set", "wallClockTime": 42.721, "clientTime": 35.025, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.828, "avgWallClockTime": 6.103, "shortestQuery": 3.049}, {"testName": "base64", "wallClockTime": 49.834, "clientTime": 45.536, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.823, "avgWallClockTime": 5.537, "shortestQuery": 2.021}, {"testName": "json_extract_simdjson", "wallClockTime": 71.348, "clientTime": 65.328, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.11, "avgWallClockTime": 5.488, "shortestQuery": 2.704}, {"testName": "merge_tree_huge_pk", "wallClockTime": 21.885, "clientTime": 1.843, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.336, "avgWallClockTime": 5.471, "shortestQuery": 1.336}, {"testName": "website", "wallClockTime": 380.247, "clientTime": 353.727, "total": 73.0, "ignoredQueries": 18.0, "longestQuery": 38.089, "avgWallClockTime": 5.208, "shortestQuery": 0.687}, {"testName": "read_hits_with_aio", "wallClockTime": 19.534, "clientTime": 17.802, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.849, "avgWallClockTime": 4.883, "shortestQuery": 2.764}, {"testName": "order_by_single_column", "wallClockTime": 33.479, "clientTime": 30.637, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.679, "avgWallClockTime": 4.782, "shortestQuery": 1.209}, {"testName": "range", "wallClockTime": 9.456, "clientTime": 8.576, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.845, "avgWallClockTime": 4.728, "shortestQuery": 2.731}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.419, "clientTime": 7.345, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.686, "avgWallClockTime": 4.709, "shortestQuery": 1.659}, {"testName": "codecs_int_insert", "wallClockTime": 93.59, "clientTime": 80.495, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.526, "avgWallClockTime": 4.456, "shortestQuery": 1.301}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.02, "clientTime": 30.574, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.433, "avgWallClockTime": 4.377, "shortestQuery": 0.799}, {"testName": "entropy", "wallClockTime": 37.717, "clientTime": 34.416, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.658, "avgWallClockTime": 4.19, "shortestQuery": 0.737}, {"testName": "trim_whitespace", "wallClockTime": 24.249, "clientTime": 11.681, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.389, "avgWallClockTime": 4.041, "shortestQuery": 0.941}, {"testName": "linear_regression", "wallClockTime": 20.157, "clientTime": 18.317, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.548, "avgWallClockTime": 4.031, "shortestQuery": 0.725}, {"testName": "scalar", "wallClockTime": 3.96, "clientTime": 1.376, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.376, "avgWallClockTime": 3.96, "shortestQuery": 1.376}, {"testName": "order_by_read_in_order", "wallClockTime": 19.79, "clientTime": 17.758, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 9.01, "avgWallClockTime": 3.958, "shortestQuery": 1.43}, {"testName": "set_hits", "wallClockTime": 22.844, "clientTime": 20.821, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.106, "avgWallClockTime": 3.807, "shortestQuery": 0.991}, {"testName": "array_auc", "wallClockTime": 3.609, "clientTime": 3.195, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.195, "avgWallClockTime": 3.608, "shortestQuery": 3.195}, {"testName": "functions_geo", "wallClockTime": 20.359, "clientTime": 18.564, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.657, "avgWallClockTime": 3.393, "shortestQuery": 1.737}, {"testName": "set_index", "wallClockTime": 15.635, "clientTime": 4.608, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.135, "avgWallClockTime": 3.127, "shortestQuery": 0.653}, {"testName": "if_array_num", "wallClockTime": 17.522, "clientTime": 15.961, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.512, "avgWallClockTime": 2.92, "shortestQuery": 1.843}, {"testName": "bitCount", "wallClockTime": 16.586, "clientTime": 15.093, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.711, "avgWallClockTime": 2.764, "shortestQuery": 1.684}, {"testName": "decimal_aggregates", "wallClockTime": 56.727, "clientTime": 51.777, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.366, "avgWallClockTime": 2.701, "shortestQuery": 0.869}, {"testName": "h3", "wallClockTime": 2.598, "clientTime": 2.285, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.285, "avgWallClockTime": 2.598, "shortestQuery": 2.285}, {"testName": "date_time_64", "wallClockTime": 42.823, "clientTime": 31.963, "total": 18.0, "ignoredQueries": 5.0, "longestQuery": 7.308, "avgWallClockTime": 2.379, "shortestQuery": 0.558}, {"testName": "empty_string_deserialization", "wallClockTime": 2.225, "clientTime": 0.407, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.224, "shortestQuery": 0.0}, {"testName": "least_greatest_hits", "wallClockTime": 6.42, "clientTime": 5.804, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.487, "avgWallClockTime": 2.14, "shortestQuery": 2.095}, {"testName": "distributed_aggregation", "wallClockTime": 7.627, "clientTime": 6.888, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.778, "avgWallClockTime": 1.906, "shortestQuery": 1.685}, {"testName": "jit_large_requests", "wallClockTime": 3.516, "clientTime": 1.509, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.961, "avgWallClockTime": 1.758, "shortestQuery": 0.961}, {"testName": "merge_table_streams", "wallClockTime": 1.747, "clientTime": 1.389, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.389, "avgWallClockTime": 1.746, "shortestQuery": 1.389}, {"testName": "order_by_decimals", "wallClockTime": 8.547, "clientTime": 7.74, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.327, "avgWallClockTime": 1.709, "shortestQuery": 0.813}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.641, "clientTime": 1.393, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.393, "avgWallClockTime": 1.641, "shortestQuery": 1.393}, {"testName": "array_element", "wallClockTime": 4.506, "clientTime": 4.043, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.491, "avgWallClockTime": 1.502, "shortestQuery": 1.072}, {"testName": "int_parsing", "wallClockTime": 102.28, "clientTime": 93.69, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.026, "avgWallClockTime": 1.232, "shortestQuery": 0.612}, {"testName": "basename", "wallClockTime": 2.231, "clientTime": 1.943, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.046, "avgWallClockTime": 1.115, "shortestQuery": 0.897}, {"testName": "if_string_hits", "wallClockTime": 4.25, "clientTime": 3.803, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.055, "avgWallClockTime": 1.062, "shortestQuery": 1.045}, {"testName": "concat_hits", "wallClockTime": 23.731, "clientTime": 21.648, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.772, "avgWallClockTime": 0.912, "shortestQuery": 1.168}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.817, "clientTime": 1.565, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.944, "avgWallClockTime": 0.908, "shortestQuery": 0.62}, {"testName": "great_circle_dist", "wallClockTime": 1.753, "clientTime": 1.51, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.968, "avgWallClockTime": 0.876, "shortestQuery": 0.968}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.492, "clientTime": 37.368, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.734, "avgWallClockTime": 0.853, "shortestQuery": 2.066}, {"testName": "information_value", "wallClockTime": 1.696, "clientTime": 1.452, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.916, "avgWallClockTime": 0.847, "shortestQuery": 0.916}, {"testName": "jit_small_requests", "wallClockTime": 2.351, "clientTime": 1.98, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.279, "avgWallClockTime": 0.783, "shortestQuery": 1.279}, {"testName": "count", "wallClockTime": 0.762, "clientTime": 0.017, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.762, "shortestQuery": 0.0}, {"testName": "codecs_float_insert", "wallClockTime": 11.012, "clientTime": 9.198, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.953, "avgWallClockTime": 0.734, "shortestQuery": 0.572}, {"testName": "slices_hits", "wallClockTime": 1.442, "clientTime": 1.216, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.945, "avgWallClockTime": 0.721, "shortestQuery": 0.945}, {"testName": "analyze_array_tuples", "wallClockTime": 0.647, "clientTime": 0.491, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.647, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.504, "clientTime": 3.119, "total": 6.0, "ignoredQueries": 2.0, "longestQuery": 0.662, "avgWallClockTime": 0.583, "shortestQuery": 0.564}, {"testName": "complex_array_creation", "wallClockTime": 1.162, "clientTime": 0.971, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.58, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.474, "clientTime": 3.089, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.492, "avgWallClockTime": 0.496, "shortestQuery": 1.001}, {"testName": "date_parsing", "wallClockTime": 0.48, "clientTime": 0.339, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.479, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.703, "clientTime": 3.299, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.717, "avgWallClockTime": 0.462, "shortestQuery": 0.62}, {"testName": "early_constant_folding", "wallClockTime": 0.421, "clientTime": 0.288, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.421, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.398, "clientTime": 0.26, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.398, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.766, "clientTime": 6.081, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.261, "avgWallClockTime": 0.356, "shortestQuery": 0.653}, {"testName": "cidr", "wallClockTime": 0.709, "clientTime": 0.55, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.354, "shortestQuery": 0.0}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.333, "clientTime": 1.115, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.333, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.718, "clientTime": 3.368, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.314, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.739, "clientTime": 4.228, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.273, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.038, "clientTime": 0.855, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.259, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 0.987, "clientTime": 0.808, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.246, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.77, "clientTime": 2.442, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.184, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.357, "clientTime": 0.233, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.178, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "reportErrors": []}
