{"commits": {"leftCommit": {"commit": "73f978cb0f8e897aa6dbff9f4634e846d5f64f9e", "author": "Ivan Blinkov <github@blinkov.ru>", "date": "Mon Apr 20 20:37:57 2020 +0300", "info": "Update build.py"}, "rightCommit": {"commit": "faeab5f6496e4875ae9b66a97a60229bbca8acdf", "merge": "73f978cb 2d08c8e4", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Mon Apr 20 22:47:12 2020 +0300", "info": "Merge pull request #10370 from amosbird/clang-10\nclang-10 fix"}}, "changes": [{"oldTime": 0.9338, "newTime": 0.7922, "relativeDifference": -0.152, "quantiles": [0.092, 0.113, 0.141, 0.143], "testName": "joins_in_memory", "query": "SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64 WHERE i32 = 200042"}], "unstableQueries": [{"oldTime": 0.0984, "newTime": 0.098, "relativeDifference": -0.005, "quantiles": [0.002, 0.039, 0.256, 0.263], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0645, "newTime": 0.0538, "relativeDifference": -0.166, "quantiles": [0.005, 0.16, 0.239, 0.277], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1106, "newTime": 0.125, "relativeDifference": 0.13, "quantiles": [0.035, 0.094, 0.171, 0.184], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.86, "newTime": 0.9651, "relativeDifference": 0.122, "quantiles": [0.046, 0.073, 0.167, 0.2], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.1174, "newTime": 0.1192, "relativeDifference": 0.015, "quantiles": [0.007, 0.021, 0.13, 0.191], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.9195, "newTime": 0.7946, "relativeDifference": -0.136, "quantiles": [0.098, 0.116, 0.128, 0.132], "testName": "joins_in_memory", "query": "SELECT COUNT() FROM ints l LEFT JOIN ints r ON l.i64 = r.i64 WHERE i32 = 200042"}, {"oldTime": 0.9532, "newTime": 0.8235, "relativeDifference": -0.137, "quantiles": [0.092, 0.111, 0.128, 0.133], "testName": "joins_in_memory", "query": "SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64 WHERE i32 IN(42, 100042, 200042, 300042, 400042)"}, {"oldTime": 0.1278, "newTime": 0.1328, "relativeDifference": 0.039, "quantiles": [0.001, 0.062, 0.125, 0.14], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1133, "newTime": 0.1157, "relativeDifference": 0.021, "quantiles": [0.0, 0.038, 0.121, 0.162], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0986, "newTime": 0.1057, "relativeDifference": 0.072, "quantiles": [0.012, 0.067, 0.114, 0.133], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.0527, "newTime": 0.0536, "relativeDifference": 0.017, "quantiles": [0.0, 0.014, 0.113, 0.128], "testName": "base64_hits", "query": "SELECT count() FROM hits_100m_single WHERE base64Decode(base64Encode(MobilePhoneModel)) != MobilePhoneModel"}, {"oldTime": 0.1462, "newTime": 0.1413, "relativeDifference": -0.034, "quantiles": [0.009, 0.033, 0.112, 0.143], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1312, "newTime": 0.1401, "relativeDifference": 0.067, "quantiles": [0.019, 0.039, 0.11, 0.14], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.5036, "newTime": 0.4446, "relativeDifference": -0.118, "quantiles": [0.037, 0.058, 0.102, 0.111], "testName": "math", "query": "SELECT count() FROM numbers(100000000) WHERE NOT ignore(exp10(toFloat64(number)))"}, {"oldTime": 0.1203, "newTime": 0.1227, "relativeDifference": 0.019, "quantiles": [0.017, 0.032, 0.101, 0.121], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 1.0894, "newTime": 0.9673, "relativeDifference": -0.113, "quantiles": [0.06, 0.076, 0.099, 0.106], "testName": "joins_in_memory", "query": "SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64,i32,i16,i8 WHERE i32 = 200042"}, {"oldTime": 0.1833, "newTime": 0.201, "relativeDifference": 0.096, "quantiles": [0.017, 0.064, 0.098, 0.108], "testName": "general_purpose_hashes_on_UUID", "query": "SELECT count() from zeros_mt(1000000000) where not ignore(farmHash64(materialize(toUUID(\\'61f0c404-5cb3-11e7-907b-a6006ad3dba0\\'))))"}, {"oldTime": 0.1713, "newTime": 0.1763, "relativeDifference": 0.029, "quantiles": [0.02, 0.03, 0.094, 0.106], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_LZ4 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1428, "newTime": 0.1364, "relativeDifference": -0.045, "quantiles": [0.006, 0.044, 0.093, 0.121], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_T64 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0338, "newTime": 0.0362, "relativeDifference": 0.071, "quantiles": [0.024, 0.063, 0.091, 0.106], "testName": "linear_regression", "query": "SELECT stochasticLinearRegression(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.0446, "newTime": 0.0437, "relativeDifference": -0.021, "quantiles": [0.016, 0.035, 0.089, 0.102], "testName": "jit_large_requests", "query": "\\n        SELECT\\n            COUNT()\\n        FROM\\n            jit_test\\n        WHERE\\n            NOT ignore(a / b + c / d + e / f + g / h + i / j)\\n        SETTINGS\\n            compile_expressions = 0;\\n    "}, {"oldTime": 0.0325, "newTime": 0.0372, "relativeDifference": 0.144, "quantiles": [0.024, 0.043, 0.086, 0.121], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15)(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.085, "newTime": 0.0898, "relativeDifference": 0.056, "quantiles": [0.03, 0.049, 0.08, 0.103], "testName": "string_sort", "query": "SELECT PageCharset, MobilePhoneModel FROM hits_100m_single ORDER BY PageCharset, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.0297, "newTime": 0.03, "relativeDifference": 0.01, "quantiles": [0.004, 0.012, 0.078, 0.107], "testName": "codecs_float_insert", "query": "INSERT INTO codec_mon_Float64_NONE (n) SELECT number+sin(number) FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1"}, {"oldTime": 0.0329, "newTime": 0.0333, "relativeDifference": 0.012, "quantiles": [0.0, 0.018, 0.043, 0.417], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 10.0, "changedPerf": 0.0, "total": 10.0}, {"testName": "joins_in_memory", "unstable": 3.0, "changedPerf": 1.0, "total": 4.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "linear_regression", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "math", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "base64_hits", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "codecs_float_insert", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "jit_large_requests", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "general_purpose_hashes_on_UUID", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 29.43, "clientTime": 26.423, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.423, "avgWallClockTime": 29.43, "shortestQuery": 26.423}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 29.305, "clientTime": 26.296, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 26.296, "avgWallClockTime": 29.305, "shortestQuery": 26.296}, {"testName": "simple_join_query", "wallClockTime": 80.144, "clientTime": 51.743, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.164, "avgWallClockTime": 20.035, "shortestQuery": 12.791}, {"testName": "general_purpose_hashes", "wallClockTime": 1464.677, "clientTime": 1342.489, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.616, "avgWallClockTime": 18.777, "shortestQuery": 3.402}, {"testName": "empty_string_serialization", "wallClockTime": 18.125, "clientTime": 16.56, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.56, "avgWallClockTime": 18.125, "shortestQuery": 16.56}, {"testName": "trim_urls", "wallClockTime": 108.101, "clientTime": 98.846, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 43.478, "avgWallClockTime": 18.016, "shortestQuery": 8.265}, {"testName": "array_fill", "wallClockTime": 104.304, "clientTime": 95.399, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.342, "avgWallClockTime": 17.384, "shortestQuery": 7.374}, {"testName": "group_array_moving_sum", "wallClockTime": 206.965, "clientTime": 154.261, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.852, "avgWallClockTime": 17.247, "shortestQuery": 6.904}, {"testName": "prewhere", "wallClockTime": 16.48, "clientTime": 15.025, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.025, "avgWallClockTime": 16.479, "shortestQuery": 15.025}, {"testName": "first_significant_subdomain", "wallClockTime": 15.599, "clientTime": 14.17, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.17, "avgWallClockTime": 15.598, "shortestQuery": 14.17}, {"testName": "constant_column_search", "wallClockTime": 412.276, "clientTime": 377.29, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 36.129, "avgWallClockTime": 14.724, "shortestQuery": 4.836}, {"testName": "trim_numbers", "wallClockTime": 80.814, "clientTime": 73.968, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 30.007, "avgWallClockTime": 13.469, "shortestQuery": 2.556}, {"testName": "string_sort", "wallClockTime": 1111.275, "clientTime": 1018.471, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 35.386, "avgWallClockTime": 13.229, "shortestQuery": 0.593}, {"testName": "and_function", "wallClockTime": 26.199, "clientTime": 23.987, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 22.081, "avgWallClockTime": 13.099, "shortestQuery": 1.905}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.17, "clientTime": 4.351, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.351, "avgWallClockTime": 12.17, "shortestQuery": 4.351}, {"testName": "constant_column_comparison", "wallClockTime": 221.086, "clientTime": 202.589, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.37, "avgWallClockTime": 10.527, "shortestQuery": 3.783}, {"testName": "json_extract_rapidjson", "wallClockTime": 135.496, "clientTime": 124.198, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.17, "avgWallClockTime": 10.422, "shortestQuery": 3.563}, {"testName": "joins_in_memory", "wallClockTime": 340.438, "clientTime": 469.484, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 22.744, "avgWallClockTime": 10.012, "shortestQuery": 18.09}, {"testName": "bloom_filter", "wallClockTime": 9.868, "clientTime": 8.883, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.883, "avgWallClockTime": 9.868, "shortestQuery": 8.883}, {"testName": "url_hits", "wallClockTime": 193.939, "clientTime": 184.817, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.1, "avgWallClockTime": 9.696, "shortestQuery": 5.85}, {"testName": "array_reduce", "wallClockTime": 57.718, "clientTime": 52.725, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.448, "avgWallClockTime": 9.619, "shortestQuery": 3.969}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 615.079, "clientTime": 564.275, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 28.154, "avgWallClockTime": 9.319, "shortestQuery": 0.888}, {"testName": "base64_hits", "wallClockTime": 110.181, "clientTime": 100.698, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.623, "avgWallClockTime": 9.181, "shortestQuery": 0.825}, {"testName": "if_array_string", "wallClockTime": 53.242, "clientTime": 48.084, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 20.073, "avgWallClockTime": 8.873, "shortestQuery": 4.076}, {"testName": "sum_map", "wallClockTime": 34.857, "clientTime": 29.89, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.592, "avgWallClockTime": 8.714, "shortestQuery": 1.357}, {"testName": "string_join", "wallClockTime": 25.928, "clientTime": 19.653, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.346, "avgWallClockTime": 8.642, "shortestQuery": 4.374}, {"testName": "logical_functions_large", "wallClockTime": 85.026, "clientTime": 77.838, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.274, "avgWallClockTime": 8.502, "shortestQuery": 3.824}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 212.196, "clientTime": 194.362, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 38.562, "avgWallClockTime": 8.161, "shortestQuery": 0.894}, {"testName": "visit_param_extract_raw", "wallClockTime": 24.021, "clientTime": 21.898, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.522, "avgWallClockTime": 8.006, "shortestQuery": 2.025}, {"testName": "column_column_comparison", "wallClockTime": 142.391, "clientTime": 130.473, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.554, "avgWallClockTime": 7.494, "shortestQuery": 5.307}, {"testName": "math", "wallClockTime": 442.092, "clientTime": 405.075, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.153, "avgWallClockTime": 7.368, "shortestQuery": 2.266}, {"testName": "round_down", "wallClockTime": 35.598, "clientTime": 32.505, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.738, "avgWallClockTime": 7.119, "shortestQuery": 1.27}, {"testName": "right", "wallClockTime": 13.956, "clientTime": 12.679, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.655, "avgWallClockTime": 6.978, "shortestQuery": 6.023}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.974, "clientTime": 0.018, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.973, "shortestQuery": 0.0}, {"testName": "random_printable_ascii", "wallClockTime": 48.496, "clientTime": 44.337, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 14.965, "avgWallClockTime": 6.927, "shortestQuery": 2.965}, {"testName": "cpu_synthetic", "wallClockTime": 324.505, "clientTime": 310.185, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.104, "avgWallClockTime": 6.904, "shortestQuery": 1.038}, {"testName": "array_join", "wallClockTime": 41.284, "clientTime": 37.709, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 8.841, "avgWallClockTime": 6.88, "shortestQuery": 2.257}, {"testName": "ngram_distance", "wallClockTime": 109.693, "clientTime": 100.423, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.137, "avgWallClockTime": 6.855, "shortestQuery": 4.081}, {"testName": "sort", "wallClockTime": 67.429, "clientTime": 60.8, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.013, "avgWallClockTime": 6.742, "shortestQuery": 3.583}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.581, "clientTime": 26.98, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.033, "avgWallClockTime": 6.716, "shortestQuery": 0.585}, {"testName": "collations", "wallClockTime": 13.255, "clientTime": 12.025, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.875, "avgWallClockTime": 6.627, "shortestQuery": 1.15}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.622, "clientTime": 0.025, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.622, "shortestQuery": 0.0}, {"testName": "uniq", "wallClockTime": 511.129, "clientTime": 468.105, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.592, "avgWallClockTime": 6.389, "shortestQuery": 0.882}, {"testName": "string_set", "wallClockTime": 42.95, "clientTime": 35.218, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.639, "avgWallClockTime": 6.135, "shortestQuery": 3.114}, {"testName": "json_extract_simdjson", "wallClockTime": 72.017, "clientTime": 66.004, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.51, "avgWallClockTime": 5.539, "shortestQuery": 2.792}, {"testName": "base64", "wallClockTime": 49.712, "clientTime": 45.483, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.812, "avgWallClockTime": 5.523, "shortestQuery": 1.987}, {"testName": "merge_tree_huge_pk", "wallClockTime": 21.785, "clientTime": 1.749, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.255, "avgWallClockTime": 5.446, "shortestQuery": 1.255}, {"testName": "website", "wallClockTime": 383.639, "clientTime": 357.111, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.848, "avgWallClockTime": 5.255, "shortestQuery": 0.568}, {"testName": "read_hits_with_aio", "wallClockTime": 19.817, "clientTime": 18.067, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 6.061, "avgWallClockTime": 4.954, "shortestQuery": 2.859}, {"testName": "order_by_single_column", "wallClockTime": 33.745, "clientTime": 30.84, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.599, "avgWallClockTime": 4.82, "shortestQuery": 1.228}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.553, "clientTime": 7.542, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.819, "avgWallClockTime": 4.776, "shortestQuery": 1.723}, {"testName": "range", "wallClockTime": 9.062, "clientTime": 8.212, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.624, "avgWallClockTime": 4.531, "shortestQuery": 2.588}, {"testName": "codecs_int_insert", "wallClockTime": 91.339, "clientTime": 80.511, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.66, "avgWallClockTime": 4.349, "shortestQuery": 1.325}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 34.749, "clientTime": 30.431, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.318, "avgWallClockTime": 4.343, "shortestQuery": 0.826}, {"testName": "entropy", "wallClockTime": 37.907, "clientTime": 34.578, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.829, "avgWallClockTime": 4.211, "shortestQuery": 0.747}, {"testName": "linear_regression", "wallClockTime": 20.507, "clientTime": 18.659, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.871, "avgWallClockTime": 4.101, "shortestQuery": 0.798}, {"testName": "trim_whitespace", "wallClockTime": 24.033, "clientTime": 11.968, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.409, "avgWallClockTime": 4.005, "shortestQuery": 0.972}, {"testName": "scalar", "wallClockTime": 3.966, "clientTime": 1.377, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.377, "avgWallClockTime": 3.966, "shortestQuery": 1.377}, {"testName": "order_by_read_in_order", "wallClockTime": 19.584, "clientTime": 17.516, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.844, "avgWallClockTime": 3.916, "shortestQuery": 1.445}, {"testName": "set_hits", "wallClockTime": 23.07, "clientTime": 21.039, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.143, "avgWallClockTime": 3.844, "shortestQuery": 0.991}, {"testName": "array_auc", "wallClockTime": 3.658, "clientTime": 3.237, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.237, "avgWallClockTime": 3.657, "shortestQuery": 3.237}, {"testName": "functions_geo", "wallClockTime": 20.429, "clientTime": 18.611, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.76, "avgWallClockTime": 3.404, "shortestQuery": 1.71}, {"testName": "set_index", "wallClockTime": 16.085, "clientTime": 4.775, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.309, "avgWallClockTime": 3.216, "shortestQuery": 0.669}, {"testName": "if_array_num", "wallClockTime": 17.672, "clientTime": 16.088, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.496, "avgWallClockTime": 2.945, "shortestQuery": 1.838}, {"testName": "decimal_aggregates", "wallClockTime": 57.483, "clientTime": 52.477, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.442, "avgWallClockTime": 2.737, "shortestQuery": 0.866}, {"testName": "bitCount", "wallClockTime": 16.298, "clientTime": 14.84, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.679, "avgWallClockTime": 2.716, "shortestQuery": 1.667}, {"testName": "h3", "wallClockTime": 2.651, "clientTime": 2.331, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.331, "avgWallClockTime": 2.651, "shortestQuery": 2.331}, {"testName": "date_time_64", "wallClockTime": 43.075, "clientTime": 32.133, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 7.19, "avgWallClockTime": 2.393, "shortestQuery": 0.592}, {"testName": "least_greatest_hits", "wallClockTime": 6.57, "clientTime": 5.919, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.535, "avgWallClockTime": 2.19, "shortestQuery": 2.165}, {"testName": "empty_string_deserialization", "wallClockTime": 1.987, "clientTime": 0.377, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 1.986, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.639, "clientTime": 6.891, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.778, "avgWallClockTime": 1.909, "shortestQuery": 1.676}, {"testName": "merge_table_streams", "wallClockTime": 1.797, "clientTime": 1.441, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.441, "avgWallClockTime": 1.797, "shortestQuery": 1.441}, {"testName": "jit_large_requests", "wallClockTime": 3.583, "clientTime": 1.532, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.975, "avgWallClockTime": 1.791, "shortestQuery": 0.975}, {"testName": "order_by_decimals", "wallClockTime": 8.46, "clientTime": 7.663, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.308, "avgWallClockTime": 1.692, "shortestQuery": 0.809}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.645, "clientTime": 1.399, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.399, "avgWallClockTime": 1.644, "shortestQuery": 1.399}, {"testName": "array_element", "wallClockTime": 4.411, "clientTime": 3.941, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.433, "avgWallClockTime": 1.47, "shortestQuery": 1.087}, {"testName": "int_parsing", "wallClockTime": 101.822, "clientTime": 93.203, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.07, "avgWallClockTime": 1.226, "shortestQuery": 0.618}, {"testName": "basename", "wallClockTime": 2.212, "clientTime": 1.912, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.034, "avgWallClockTime": 1.105, "shortestQuery": 0.877}, {"testName": "if_string_hits", "wallClockTime": 4.188, "clientTime": 3.751, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.032, "avgWallClockTime": 1.047, "shortestQuery": 1.04}, {"testName": "concat_hits", "wallClockTime": 23.616, "clientTime": 21.544, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.783, "avgWallClockTime": 0.908, "shortestQuery": 1.148}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.816, "clientTime": 1.566, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.944, "avgWallClockTime": 0.907, "shortestQuery": 0.622}, {"testName": "great_circle_dist", "wallClockTime": 1.783, "clientTime": 1.533, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.98, "avgWallClockTime": 0.891, "shortestQuery": 0.98}, {"testName": "information_value", "wallClockTime": 1.738, "clientTime": 1.488, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.951, "avgWallClockTime": 0.869, "shortestQuery": 0.951}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.552, "clientTime": 37.489, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.744, "avgWallClockTime": 0.856, "shortestQuery": 2.082}, {"testName": "jit_small_requests", "wallClockTime": 2.322, "clientTime": 1.954, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.267, "avgWallClockTime": 0.774, "shortestQuery": 1.267}, {"testName": "codecs_float_insert", "wallClockTime": 11.211, "clientTime": 9.355, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.967, "avgWallClockTime": 0.747, "shortestQuery": 0.566}, {"testName": "count", "wallClockTime": 0.743, "clientTime": 0.018, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.742, "shortestQuery": 0.0}, {"testName": "slices_hits", "wallClockTime": 1.452, "clientTime": 1.22, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.955, "avgWallClockTime": 0.726, "shortestQuery": 0.955}, {"testName": "analyze_array_tuples", "wallClockTime": 0.668, "clientTime": 0.509, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.667, "shortestQuery": 0.0}, {"testName": "complex_array_creation", "wallClockTime": 1.162, "clientTime": 0.968, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.58, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.474, "clientTime": 3.091, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.654, "avgWallClockTime": 0.578, "shortestQuery": 0.631}, {"testName": "consistent_hashes", "wallClockTime": 3.477, "clientTime": 3.094, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.5, "avgWallClockTime": 0.496, "shortestQuery": 1.009}, {"testName": "date_parsing", "wallClockTime": 0.473, "clientTime": 0.325, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.472, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.703, "clientTime": 3.287, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.722, "avgWallClockTime": 0.462, "shortestQuery": 0.626}, {"testName": "early_constant_folding", "wallClockTime": 0.429, "clientTime": 0.29, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.428, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.397, "clientTime": 0.265, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.397, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.76, "clientTime": 0.595, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.379, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.749, "clientTime": 6.055, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.271, "avgWallClockTime": 0.355, "shortestQuery": 0.654}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.3, "clientTime": 1.092, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.324, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.741, "clientTime": 3.389, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.316, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.08, "clientTime": 0.885, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.27, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.635, "clientTime": 4.119, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.268, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.045, "clientTime": 0.862, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.261, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.778, "clientTime": 2.447, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.185, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.364, "clientTime": 0.238, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.181, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": [-0.0004], "and_function": [-0.0002, 0.0004], "array_auc": [0.007], "array_element": [-0.001, 0.0001, -0.0026], "array_fill": [0.0037, 0.0202, 0.0036, 0.0317, 0.0365, 0.0446], "array_join": [-0.0021, -0.0058, 0.0033, -0.0005, 0.0041, -0.0006], "array_reduce": [0.011, 0.0027, 0.021, 0.0245, -0.0091, 0.0029], "base64": [-0.0012, -0.0019, 0.0009, -0.0008, 0.0021, 0.0018, -0.0009, 0.0078, 0.0078], "base64_hits": [-0.0001, 0.0014, 0.0126, -0.0153, 0.0009, 0.0007, 0.0186, -0.0024, -0.0002, -0.0016, 0.0211, -0.0048], "basename": [0.0006, 0.0005], "bitCount": [0.0021, 0.0054, 0.004, 0.0018, 0.001, -0.0015], "bit_operations_fixed_string": [0.0002, -0.0005, -0.0007, -0.0003], "bit_operations_fixed_string_numbers": [0.0006, 0.0002], "bloom_filter": [-0.0058], "bounding_ratio": [0.0003, 0.0009], "cidr": [-0.0018, -0.0011], "codecs_float_insert": [0.0, -0.0014, 0.0005, 0.0003, -0.0012, -0.0002, 0.0005, 0.0003, -0.0006, -0.0003, -0.0003, 0.0, 0.0008, -0.0003, 0.0008], "codecs_float_select": [-0.0004, 0.0003, -0.0007, -0.0007, -0.0004, -0.0003, -0.0001, -0.0002, 0.0002, 0.0001, 0.0001, -0.0001, -0.0003, 0.0002, 0.0002], "codecs_int_insert": [0.005, -0.0023, -0.0091, 0.0076, 0.0089, 0.0015, 0.0102, 0.0024, 0.0119, 0.0041, 0.0024, -0.0008, -0.0049, 0.0047, 0.0018, -0.0107, 0.0075, 0.005, 0.0144, -0.0064, -0.0063], "codecs_int_select": [-0.0002, 0.0008, 0.0008, 0.0001, 0.0001, -0.0002, 0.0001, 0.0005, -0.0001, 0.0003, 0.0, 0.0006, 0.0001, -0.0001, 0.0003, 0.0002, 0.0003, 0.0002, -0.0001, 0.0003, -0.0001], "collations": [-0.004, 0.0004], "column_column_comparison": [-0.0002, 0.005, -0.0056, 0.0001, -0.0041, 0.005, 0.0, -0.0028, 0.0001, -0.0001, -0.0231, 0.0, 0.0001, -0.0002, 0.004, -0.0053, 0.0146, 0.0, -0.0044], "complex_array_creation": [0.0001, 0.0008], "concat_hits": [0.0001, -0.0001, 0.0, 0.0, 0.0008, 0.0001, 0.0005, 0.0001, 0.0007, -0.0014, -0.0021, -0.0002, -0.0044, 0.0, -0.0001, 0.0, -0.0001, -0.0027, -0.0017, 0.0013, 0.0005, 0.0009, -0.0026, -0.0013, 0.002, -0.0029], "conditional": [0.0002, -0.0001, 0.0001, -0.0003, -0.0003, 0.0, 0.0004, -0.0001], "consistent_hashes": [-0.0002, 0.001, 0.001, 0.0003, 0.0, -0.0003, 0.0], "constant_column_comparison": [0.0053, 0.0111, 0.0062, -0.0003, 0.0007, -0.0004, 0.0013, 0.0041, 0.0059, 0.0002, -0.0022, -0.0034, -0.002, 0.0078, 0.0089, 0.0098, 0.0078, 0.0129, -0.0014, 0.0064, 0.0024], "constant_column_search": [-0.0005, -0.0013, 0.0002, 0.0087, 0.0073, 0.004, -0.0036, 0.0014, 0.0018, 0.015, -0.0183, 0.0113, -0.0001, -0.004, -0.004, -0.0049, -0.0092, 0.0051, 0.0057, 0.0023, 0.0036, 0.0016, 0.0, 0.0023, -0.0067, 0.0009, -0.0086, 0.0006], "count": [0.0004], "cpu_synthetic": [0.0017, 0.0, -0.0062, -0.0095, -0.0095, -0.0015, -0.001, 0.0032, 0.0062, -0.0002, -0.0015, 0.0006, -0.0047, 0.0067, 0.002, 0.002, 0.0356, -0.0098, 0.0147, 0.0012, -0.0027, 0.0115, 0.0218, 0.0003, -0.0002, -0.0042, -0.0059, -0.0011, -0.0005, 0.0055, 0.0129, 0.0071, 0.0001, 0.0003, -0.0002, -0.0003, 0.0001, -0.0003, -0.0005, 0.0011, 0.0004, -0.0001, 0.0022, 0.0034, 0.0067], "date_parsing": [-0.0005], "date_time_64": [0.0007, -0.0013, -0.0005, 0.0, 0.0007, 0.0001, -0.0018, 0.0001, 0.0012, 0.0, 0.0019, -0.0114, 0.0007, -0.0004, -0.0016, -0.004, 0.0009, -0.0006], "decimal_aggregates": [-0.0002, 0.0001, 0.0001, 0.0002, 0.003, 0.0022, 0.0004, 0.0004, 0.001, -0.0012, 0.0022, 0.0045, -0.0032, 0.0, -0.0004, 0.0008, 0.0031, -0.0011, -0.0004, 0.0004, 0.0003], "distributed_aggregation": [-0.003, -0.0054, 0.0007, 0.001], "early_constant_folding": [0.0], "empty_string_deserialization": [0.0003], "empty_string_serialization": [-0.0178], "entropy": [0.0004, 0.0005, -0.0004, -0.0005, 0.0, 0.0008, -0.0001, -0.0212, -0.0009], "first_significant_subdomain": [0.0131], "fixed_string16": [0.0008], "format_date_time": [0.0003, 0.0, -0.0003, -0.0012, -0.0005, 0.0004], "functions_coding": [-0.0001, -0.0003, 0.0006, 0.0002], "functions_geo": [-0.0005, -0.0004, 0.0085, -0.0004, -0.0029, 0.0], "general_purpose_hashes": [-0.0337, 0.0005, -0.0593, 0.0019, 0.0562, -0.0398, -0.0111, 0.017, -0.0094, -0.0081, -0.0247, 0.0377, 0.0014, 0.0079, 0.0303, -0.0136, 0.0103, -0.0154, -0.0035, 0.0064, 0.0019, -0.0497, -0.0006, 0.0198, 0.004, 0.0075, -0.0083, 0.0037, -0.0025, 0.0055, 0.0094, 0.004, 0.0078, 0.0153, 0.0004, -0.0178, -0.0004, -0.001, -0.002, 0.0014, 0.0089, -0.0015, -0.0052, 0.0098, -0.0006, 0.0091, 0.005, -0.0005, -0.0015, -0.001, 0.0113, 0.0025, 0.0025, -0.0068, 0.0053, 0.0406, -0.0094, 0.0169, 0.0127, 0.0176, 0.0077, 0.0138, 0.003, -0.0103, 0.0119, 0.0062, -0.0154, -0.0253, 0.0043, 0.0145, -0.0307, -0.0237, -0.0033, -0.0127, -0.0025, -0.0164, -0.017, -0.005], "general_purpose_hashes_on_UUID": [-0.0002, 0.0006, -0.0003, -0.0002, 0.0003, 0.0008, 0.0002, 0.0001, 0.0004, 0.0, 0.0, -0.0001, -0.0022, 0.001, -0.0002, -0.0003, 0.0007, 0.0005, 0.0003, 0.0001, 0.0, -0.0003, -0.0079, 0.0123, 0.021, 0.0311, 0.0164, -0.0066, -0.0961, -0.1142, -0.0402, -0.0023, -0.0001, 0.0053, -0.0254, -0.0049, -0.0126, 0.0218, 0.0191, -0.0128, -0.0049, 0.0078, -0.0106, 0.0091, 0.0028, -0.0014, 0.0101, 0.0177, -0.0021, -0.0021, -0.0283, -0.0309, -0.0036, -0.012, 0.0115, 0.0054, -0.0025, 0.0121, -0.0103, 0.0018, 0.0128, 0.0131, -0.0175, -0.0048, 0.0054, -0.0015], "generate_table_function": [-0.0001, -0.0002, 0.0001, 0.0001, -0.0001, 0.0003, -0.0001, -0.0002, -0.0006, 0.0003, 0.0001, -0.0002, 0.0001, 0.0001, -0.0002, -0.0003, 0.0002, 0.0003, -0.0004], "great_circle_dist": [0.0015, 0.0008], "group_array_moving_sum": [-0.0177, 0.0018, -0.0019, 0.0159, -0.0178, 0.0001, 0.0043, 0.0017, -0.0206, 0.0011, -0.0229, 0.0035], "h3": [-0.0025], "if_array_num": [0.0011, -0.0005, -0.0025, 0.0017, -0.0021, 0.0004], "if_array_string": [-0.0031, 0.004, -0.0009, -0.0071, -0.0037, 0.1051], "if_string_const": [-0.0001, 0.0003, -0.0004, 0.0007], "if_string_hits": [0.0002, 0.0004, 0.0005, 0.0004], "information_value": [0.001, -0.0004], "inserts_arrays_lowcardinality": [-0.0025, 0.0031], "int_parsing": [-0.0001, -0.0004, -0.0002, 0.0008, -0.0003, -0.0009, 0.0001, -0.0004, -0.0004, -0.0006, -0.0011, 0.0001, 0.0006, 0.001, -0.0003, 0.0038, -0.0005, -0.001, -0.0005, -0.0005, -0.0007, 0.0003, -0.0008, -0.0005, -0.0002, -0.0021, -0.0003, 0.0004, -0.0002, -0.0006, -0.0004, -0.0004, -0.0006, -0.0006, -0.0001, -0.0004, -0.0007, -0.0007, -0.0008, 0.0002, 0.0004, -0.0004, -0.0016, -0.0002, -0.0005, -0.0003, -0.0005, 0.0, -0.0002, -0.0004, 0.0, 0.0016, 0.0, -0.0006, 0.0004, -0.0011, -0.0002, -0.0002, 0.0015, 0.0, 0.0001, 0.0, 0.0001, -0.0005, 0.0006, -0.0003, 0.0001, 0.0, -0.0002, -0.0008, -0.0005, -0.0005, -0.0004, 0.0019, -0.0007, -0.0007, 0.002, 0.0015, -0.0008, -0.0004, -0.0003, -0.0003, -0.0007], "jit_large_requests": [-0.0009, 0.0009], "jit_small_requests": [-0.0003, 0.0011, 0.0006], "joins_in_memory": [-0.0002, -0.0002, 0.0003, 0.0, -0.0002, 0.0027, 0.0099, 0.0023, 0.043, -0.0454, -0.0665, -0.0355, -0.0578, -0.1249, -0.1416, -0.1297, -0.1221, -0.0341, -0.0596, -0.045, -0.0213], "joins_in_memory_pmj": [0.0008, 0.0003, 0.0003, 0.0001, 0.0, -0.0027, -0.0008, -0.0041, -0.0001, 0.0008, -0.0006, -0.0024], "json_extract_rapidjson": [0.0036, 0.0065, 0.0269, 0.0168, 0.0294, -0.0009, 0.0054, 0.0073, 0.0046, 0.0229, 0.0077, 0.0093, -0.0013], "json_extract_simdjson": [0.0036, 0.0006, 0.0, -0.0092, -0.0026, 0.0023, -0.0009, 0.0015, 0.0001, 0.001, -0.0024, -0.0027, 0.0], "least_greatest_hits": [0.0002, 0.0013, -0.0014], "linear_regression": [0.0024, 0.0047, 0.0009, 0.0145, -0.0006], "logical_functions_large": [0.0209, -0.001, -0.0097, 0.0005, 0.0032, 0.0019, -0.0046, 0.0008, 0.0011, 0.0011], "materialized_view_parallel_insert": [-0.004], "math": [0.0003, 0.0008, -0.0003, 0.0006, -0.0001, 0.0009, -0.0011, -0.0017, 0.0002, -0.0001, -0.0001, 0.0013, 0.0054, -0.0005, -0.002, 0.0047, 0.0013, 0.0022, 0.0019, 0.003, 0.0046, 0.0022, -0.0012, 0.001, 0.0279, -0.0272, 0.0239, 0.0219, -0.0283, 0.0302, 0.013, 0.0155, -0.0168, 0.0021, 0.005, -0.0029, 0.0022, -0.0099, -0.0037, -0.0413, -0.019, -0.059, -0.0001, 0.0364, -0.0532, -0.0031, 0.0025, 0.0085, 0.0016, -0.0017, 0.0032, 0.0022, 0.0009, -0.0003, 0.0018, 0.0015, 0.0067, -0.0008, -0.0003, -0.0031], "merge_table_streams": [0.0002], "merge_tree_huge_pk": [-0.0001, -0.001, 0.0, -0.0001], "merge_tree_many_partitions": [0.0002], "merge_tree_many_partitions_2": [0.0026], "merge_tree_simple_select": [-0.0002], "mingroupby-orderbylimit1": [-0.0011, 0.0013, 0.0004, 0.0004, -0.0004, -0.0092, 0.0014, -0.0122], "ngram_distance": [-0.0065, -0.0073, -0.0067, 0.0076, 0.0081, -0.0008, 0.001, 0.0001, 0.0004, -0.0011, -0.0008, -0.0008, 0.0018, 0.0033, -0.0004, 0.0004], "order_by_decimals": [-0.0002, 0.0008, -0.0006, 0.001, 0.0005], "order_by_read_in_order": [0.0015, -0.0018, -0.0065, -0.0019, -0.0016], "order_by_single_column": [0.003, -0.0002, -0.0004, -0.0009, 0.0025, 0.0002, 0.0014], "parallel_insert": [0.0015], "pre_limit_no_sorting": [0.0002], "prewhere": [-0.0057], "random_printable_ascii": [0.0001, -0.0032, -0.0004, 0.0004, -0.038, -0.0019, -0.0129], "range": [0.0053, -0.0015], "read_hits_with_aio": [-0.0008, 0.0001, 0.0018, -0.0037], "right": [-0.0081, -0.0024], "round_down": [-0.0495, -0.0013, -0.0008, 0.0004, 0.0008], "round_methods": [0.0006, 0.0006, 0.0003, 0.0009, 0.0006, 0.0001, -0.0001, 0.0, 0.0, 0.0002, 0.0004, 0.0003, 0.0006, 0.0, 0.0001], "scalar": [-0.0002], "set_hits": [-0.0007, 0.0006, -0.0011, -0.002, -0.0008, -0.0024], "set_index": [0.0003, -0.0003, -0.0124, -0.0002, -0.0013], "simple_join_query": [-0.0098, 0.0143, -0.022, -0.0069], "slices_hits": [-0.0004, -0.0012], "sort": [0.0005, 0.0016, -0.0004, 0.0046, -0.0017, 0.0012, -0.0035, -0.0048, -0.0026, 0.0033], "string_join": [-0.008, -0.0015, 0.0033], "string_set": [-0.0017, -0.0015, -0.003, 0.0009, -0.0001, 0.0052, -0.0015], "string_sort": [0.0, 0.0063, 0.0001, 0.0003, -0.0004, 0.0067, -0.0017, 0.0466, -0.0066, -0.0052, -0.0022, 0.0143, -0.003, 0.0051, 0.0, -0.0006, 0.0048, -0.0121, -0.0001, -0.0043, 0.0001, -0.0152, -0.0005, -0.0055, -0.0006, 0.0033, 0.0045, -0.0191, 0.0023, -0.0079, -0.0019, 0.0492, 0.0081, 0.0077, 0.001, 0.0117, 0.0023, 0.0105, 0.0079, 0.0376, 0.0166, 0.0448, 0.0005, -0.0002, 0.0019, -0.0041, 0.0009, 0.0003, 0.0006, -0.0357, 0.0003, -0.004, -0.0011, -0.0114, 0.003, -0.0154, 0.0024, -0.0145, -0.0001, -0.0104, -0.0029, -0.0292, 0.0049, -0.0136, -0.0031, 0.0486, 0.0024, 0.0132, 0.0144, 0.0195, 0.0002, -0.0067, 0.0025, 0.0274, 0.0045, 0.0112, -0.0046, -0.0024, 0.0074, -0.0181, -0.003, 0.0286, 0.002, 0.0167], "sum_map": [0.0004, -0.0111, 0.0014, -0.0003], "synthetic_hardware_benchmark": [0.0006, -0.0003, -0.0026, -0.0008, 0.0001, -0.0003, -0.006, -0.0023, 0.006, -0.0348, -0.0004, 0.0004, -0.002, 0.0004, -0.0031, -0.0219, 0.0014, -0.0012, 0.0012, -0.0033, -0.0005, 0.0097, 0.0001, -0.0385, -0.0104, 0.0103], "trim_numbers": [-0.0016, -0.0023, 0.022, -0.0018, -0.0046, 0.0], "trim_urls": [0.0027, -0.0139, -0.0198, -0.006, 0.0023, 0.0013], "trim_whitespace": [-0.004, -0.0055, -0.0001, -0.0014, 0.0017, -0.0008], "uniq": [0.0002, 0.0006, 0.0006, 0.0001, -0.0001, -0.0002, 0.0, 0.001, 0.0017, 0.0284, 0.0004, -0.0005, -0.0005, -0.0004, 0.0001, 0.0002, -0.0016, 0.0006, -0.0012, 0.0094, -0.0033, -0.0011, -0.0023, -0.003, -0.0013, 0.0014, 0.0025, -0.0043, -0.0535, -0.007, -0.0027, -0.0045, 0.001, 0.0, 0.0009, 0.0005, -0.0005, -0.0005, -0.0011, 0.0001, 0.0002, -0.0005, -0.0014, -0.0015, 0.0008, -0.0017, -0.0002, 0.0006, -0.0001, 0.0043, -0.0008, -0.0001, -0.0006, -0.0005, -0.0013, 0.0017, 0.0031, 0.0074, -0.0018, 0.0001, 0.0001, 0.0005, -0.0003, 0.0005, -0.0013, 0.0011, -0.0025, 0.0013, 0.0017, -0.0037, -0.0003, -0.0069, 0.0057, 0.0176, 0.0023, -0.0028, 0.0012, 0.0015, 0.0026, -0.0016], "url_hits": [-0.0225, -0.0061, 0.0034, -0.0047, -0.0077, 0.0052, 0.0004, 0.0055, -0.0021, -0.0008, -0.0062, 0.0076, 0.0008, 0.0, 0.0054, -0.0034, 0.0085, -0.009, -0.0008], "vectorize_aggregation_combinators": [-0.0029, 0.0016, -0.0001, 0.0017, -0.0005], "visit_param_extract_raw": [-0.0009, 0.0066, 0.0009], "website": [-0.0067, 0.0021, 0.0181, 0.0033, -0.0003, -0.0053, -0.0017, -0.0011, 0.0011, -0.0001, 0.0012, -0.0004, 0.0006, -0.0014, 0.0, -0.0004, 0.0014, 0.0003, -0.0014, 0.0, 0.0022, 0.0213, -0.0028, -0.0047, -0.0009, -0.0066, 0.0014, -0.0009, -0.0024, -0.0023, 0.0009, -0.0022, -0.0003, -0.0039, -0.0001, -0.0127, -0.0055, 0.0003, 0.0008, -0.0056, -0.0077, 0.0003, -0.0038, -0.0038, -0.0007, -0.0028, -0.0013, 0.0018, -0.0056, -0.0023, 0.0, 0.0, 0.0042, -0.0001, 0.0006, -0.0054, -0.0049, -0.0001, -0.0002, -0.0001, -0.0003, -0.0003, -0.0301, 0.0006, 0.0004, 0.0004, -0.0002, -0.0003, -0.0006, 0.0002, -0.0007, 0.0002]}, "reportErrors": []}
