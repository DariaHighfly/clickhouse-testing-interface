{"commits": {"leftCommit": {"commit": "0afd36193387fcb7e8d57a1a8d0160d1859a5f91", "author": "alesapin <alesapin@gmail.com>", "date": "Mon Apr 20 17:19:55 2020 +0300", "info": "Fix subprocess call in clickhouse-test"}, "rightCommit": {"commit": "47a7c0baf416055d9d753d36cb98544992ec93c5 (pr/merge)", "author": "Alexander Kuzmenkov <36882414+akuzm@users.noreply.github.com>", "date": "Mon Apr 20 18:32:41 2020 +0300", "info": "Update test.py\nReal tested commit is:\nMerge 672c952d39786fa1a97865e2df01baec8bd762ba into 9d83a9dc3d6d762d306295a81d9ee33997ffa369", "merge": "9d83a9dc 672c952d"}}, "changes": [], "unstableQueries": [{"oldTime": 0.023, "newTime": 0.0308, "relativeDifference": 0.339, "quantiles": [0.051, 0.369, 0.613, 0.678], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         group by key format Null;\\n    "}, {"oldTime": 0.0328, "newTime": 0.0491, "relativeDifference": 0.496, "quantiles": [0.44, 0.475, 0.585, 0.6], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0824, "newTime": 0.0871, "relativeDifference": 0.057, "quantiles": [0.056, 0.086, 0.253, 0.304], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0964, "newTime": 0.12, "relativeDifference": 0.244, "quantiles": [0.003, 0.062, 0.245, 0.257], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.5612, "newTime": 0.5817, "relativeDifference": 0.036, "quantiles": [0.001, 0.136, 0.211, 0.217], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash2_64(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.0544, "newTime": 0.0649, "relativeDifference": 0.193, "quantiles": [0.02, 0.051, 0.208, 0.257], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1165, "newTime": 0.1133, "relativeDifference": -0.028, "quantiles": [0.007, 0.054, 0.13, 0.163], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1413, "newTime": 0.1572, "relativeDifference": 0.112, "quantiles": [0.035, 0.062, 0.121, 0.143], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1299, "newTime": 0.1388, "relativeDifference": 0.068, "quantiles": [0.014, 0.049, 0.121, 0.169], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0843, "newTime": 0.0856, "relativeDifference": 0.015, "quantiles": [0.005, 0.095, 0.121, 0.132], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0886, "newTime": 0.0847, "relativeDifference": -0.045, "quantiles": [0.008, 0.048, 0.12, 0.126], "testName": "string_sort", "query": "SELECT PageCharset, MobilePhoneModel FROM hits_100m_single ORDER BY PageCharset, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.1087, "newTime": 0.1158, "relativeDifference": 0.065, "quantiles": [0.017, 0.024, 0.114, 0.159], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1301, "newTime": 0.1277, "relativeDifference": -0.019, "quantiles": [0.018, 0.055, 0.111, 0.122], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.9395, "newTime": 0.946, "relativeDifference": 0.006, "quantiles": [0.006, 0.022, 0.111, 0.168], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.1711, "newTime": 0.1485, "relativeDifference": -0.133, "quantiles": [0.0, 0.032, 0.11, 0.13], "testName": "website", "query": "SELECT sum(ResolutionWidth), sum(ResolutionWidth + 1), sum(ResolutionWidth + 2), sum(ResolutionWidth + 3), sum(ResolutionWidth + 4), sum(ResolutionWidth + 5), sum(ResolutionWidth + 6), sum(ResolutionWidth + 7), sum(ResolutionWidth + 8), sum(ResolutionWidth + 9), sum(ResolutionWidth + 10), sum(ResolutionWidth + 11), sum(ResolutionWidth + 12), sum(ResolutionWidth + 13), sum(ResolutionWidth + 14), sum(ResolutionWidth + 15), sum(ResolutionWidth + 16), sum(ResolutionWidth + 17), sum(ResolutionWidth + 18), sum(ResolutionWidth + 19), sum(ResolutionWidth + 20), sum(ResolutionWidth + 21), sum(ResolutionWidth + 22), sum(ResolutionWidth + 23), sum(ResolutionWidth + 24), sum(ResolutionWidth + 25), sum(ResolutionWidth + 26), sum(ResolutionWidth + 27), sum(ResolutionWidth + 28), sum(ResolutionWidth + 29), sum(ResolutionWidth + 30), sum(ResolutionWidth + 31), sum(ResolutionWidth + 32), sum(ResolutionWidth + 33), sum(ResolutionWidth + 34), sum(ResolutionWidth + 35), sum(ResolutionWidth + 36), sum(ResolutionWidth + 37), sum(ResolutionWidth + 38), sum(ResolutionWidth + 39), sum(ResolutionWidth + 40), sum(ResolutionWidth + 41), sum(ResolutionWidth + 42), sum(ResolutionWidth + 43), sum(ResolutionWidth + 44), sum(ResolutionWidth + 45), sum(ResolutionWidth + 46), sum(ResolutionWidth + 47), sum(ResolutionWidth + 48), sum(ResolutionWidth + 49), sum(ResolutionWidth + 50), sum(ResolutionWidth + 51), sum(ResolutionWidth + 52), sum(ResolutionWidth + 53), sum(ResolutionWidth + 54), sum(ResolutionWidth + 55), sum(ResolutionWidth + 56), sum(ResolutionWidth + 57), sum(ResolutionWidth + 58), sum(ResolutionWidth + 59), sum(ResolutionWidth + 60), sum(ResolutionWidth + 61), sum(ResolutionWidth + 62), sum(ResolutionWidth + 63), sum(ResolutionWidth + 64), sum(ResolutionWidth + 65), sum(ResolutionWidth + 66), sum(ResolutionWidth + 67), sum(ResolutionWidth + 68), sum(ResolutionWidth + 69), sum(ResolutionWidth + 70), sum(ResolutionWidth + 71), sum(ResolutionWidth + 72), sum(ResolutionWidth + 73), sum(ResolutionWidth + 74), sum(ResolutionWidth + 75), sum(ResolutionWidth + 76), sum(ResolutionWidth + 77), sum(ResolutionWidth + 78), sum(ResolutionWidth + 79), sum(ResolutionWidth + 80), sum(ResolutionWidth + 81), sum(ResolutionWidth + 82), sum(ResolutionWidth + 83), sum(ResolutionWidth + 84), sum(ResolutionWidth + 85), sum(ResolutionWidth + 86), sum(ResolutionWidth + 87), sum(ResolutionWidth + 88), sum(ResolutionWidth + 89) FROM hits_10m_single"}, {"oldTime": 0.6506, "newTime": 0.6865, "relativeDifference": 0.055, "quantiles": [0.006, 0.03, 0.108, 0.12], "testName": "random_printable_ascii", "query": "SELECT count() FROM zeros(1000000) WHERE NOT ignore(randomPrintableASCII(rand() % 1000))"}, {"oldTime": 0.0297, "newTime": 0.0314, "relativeDifference": 0.057, "quantiles": [0.016, 0.042, 0.108, 0.131], "testName": "set_index", "query": "SELECT count() FROM test_in WHERE a IN (SELECT rand(1) FROM numbers(100000)) SETTINGS max_rows_to_read = 1, read_overflow_mode = \\'break\\'"}, {"oldTime": 0.0661, "newTime": 0.07, "relativeDifference": 0.059, "quantiles": [0.02, 0.056, 0.101, 0.15], "testName": "trim_whitespace", "query": "SELECT replaceRegexpOne(value, \\' *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.691, "newTime": 0.7272, "relativeDifference": 0.052, "quantiles": [0.014, 0.041, 0.099, 0.109], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash2_32(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.1991, "newTime": 0.2016, "relativeDifference": 0.012, "quantiles": [0.0, 0.012, 0.09, 0.148], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_1111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0824, "newTime": 0.0767, "relativeDifference": -0.07, "quantiles": [0.02, 0.047, 0.09, 0.101], "testName": "distributed_aggregation", "query": "select count() from (select sipHash64(zero) from zeros_mt(100000000) union all select sipHash64(zero) from zeros_mt(100000000))"}, {"oldTime": 0.5476, "newTime": 0.5922, "relativeDifference": 0.081, "quantiles": [0.03, 0.061, 0.089, 0.127], "testName": "general_purpose_hashes", "query": "SELECT count() from zeros(1000000) where not ignore(murmurHash3_128(materialize(\\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\\')))"}, {"oldTime": 0.1719, "newTime": 0.1758, "relativeDifference": 0.022, "quantiles": [0.022, 0.038, 0.085, 0.1], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Gorilla (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1126, "newTime": 0.1193, "relativeDifference": 0.059, "quantiles": [0.008, 0.03, 0.081, 0.114], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0339, "newTime": 0.0361, "relativeDifference": 0.064, "quantiles": [0.005, 0.026, 0.079, 0.106], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15)(Age, Income, ParamPrice, Robotness, RefererHash) FROM test.hits FORMAT Null"}, {"oldTime": 0.0307, "newTime": 0.0321, "relativeDifference": 0.045, "quantiles": [0.002, 0.022, 0.078, 0.101], "testName": "website", "query": "SELECT Title, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(Title) GROUP BY Title ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0985, "newTime": 0.1021, "relativeDifference": 0.036, "quantiles": [0.035, 0.038, 0.078, 0.1], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.1284, "newTime": 0.1251, "relativeDifference": -0.026, "quantiles": [0.003, 0.015, 0.072, 0.107], "testName": "website", "query": "SELECT uniq(SearchPhrase) FROM hits_100m_single FORMAT Null"}, {"oldTime": 0.111, "newTime": 0.1155, "relativeDifference": 0.04, "quantiles": [0.002, 0.039, 0.062, 0.117], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0647, "newTime": 0.0625, "relativeDifference": -0.035, "quantiles": [0.023, 0.031, 0.049, 0.1], "testName": "pre_limit_no_sorting", "query": "SELECT sum(number) FROM (select number from system.numbers_mt limit 1000000000)"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 9.0, "changedPerf": 0.0, "total": 9.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 5.0, "changedPerf": 0.0, "total": 5.0}, {"testName": "website", "unstable": 4.0, "changedPerf": 0.0, "total": 4.0}, {"testName": "general_purpose_hashes", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "set_index", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "trim_whitespace", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "random_printable_ascii", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "distributed_aggregation", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "linear_regression", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "pre_limit_no_sorting", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 28.945, "clientTime": 25.967, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.967, "avgWallClockTime": 28.944, "shortestQuery": 25.967}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 28.643, "clientTime": 25.711, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.711, "avgWallClockTime": 28.642, "shortestQuery": 25.711}, {"testName": "simple_join_query", "wallClockTime": 80.074, "clientTime": 51.902, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.243, "avgWallClockTime": 20.018, "shortestQuery": 12.771}, {"testName": "general_purpose_hashes", "wallClockTime": 1451.687, "clientTime": 1330.352, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.555, "avgWallClockTime": 18.611, "shortestQuery": 3.511}, {"testName": "trim_urls", "wallClockTime": 107.141, "clientTime": 98.112, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 43.217, "avgWallClockTime": 17.856, "shortestQuery": 8.118}, {"testName": "empty_string_serialization", "wallClockTime": 17.673, "clientTime": 16.17, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.17, "avgWallClockTime": 17.673, "shortestQuery": 16.17}, {"testName": "array_fill", "wallClockTime": 103.833, "clientTime": 95.134, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.4, "avgWallClockTime": 17.305, "shortestQuery": 7.202}, {"testName": "prewhere", "wallClockTime": 16.772, "clientTime": 15.291, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.291, "avgWallClockTime": 16.771, "shortestQuery": 15.291}, {"testName": "group_array_moving_sum", "wallClockTime": 201.121, "clientTime": 148.263, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.207, "avgWallClockTime": 16.76, "shortestQuery": 6.655}, {"testName": "first_significant_subdomain", "wallClockTime": 15.717, "clientTime": 14.301, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.301, "avgWallClockTime": 15.717, "shortestQuery": 14.301}, {"testName": "constant_column_search", "wallClockTime": 406.478, "clientTime": 372.036, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 36.304, "avgWallClockTime": 14.517, "shortestQuery": 4.758}, {"testName": "trim_numbers", "wallClockTime": 80.088, "clientTime": 73.335, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 29.762, "avgWallClockTime": 13.347, "shortestQuery": 2.564}, {"testName": "string_sort", "wallClockTime": 1102.318, "clientTime": 1010.561, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 34.931, "avgWallClockTime": 13.122, "shortestQuery": 0.593}, {"testName": "and_function", "wallClockTime": 25.989, "clientTime": 23.742, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 21.795, "avgWallClockTime": 12.994, "shortestQuery": 1.947}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.252, "clientTime": 4.351, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.351, "avgWallClockTime": 12.251, "shortestQuery": 4.351}, {"testName": "constant_column_comparison", "wallClockTime": 220.384, "clientTime": 201.943, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.264, "avgWallClockTime": 10.494, "shortestQuery": 3.66}, {"testName": "json_extract_rapidjson", "wallClockTime": 134.237, "clientTime": 122.979, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.111, "avgWallClockTime": 10.325, "shortestQuery": 3.504}, {"testName": "bloom_filter", "wallClockTime": 9.878, "clientTime": 8.891, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.891, "avgWallClockTime": 9.878, "shortestQuery": 8.891}, {"testName": "joins_in_memory", "wallClockTime": 334.814, "clientTime": 463.523, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 22.627, "avgWallClockTime": 9.847, "shortestQuery": 17.295}, {"testName": "url_hits", "wallClockTime": 192.31, "clientTime": 183.092, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.777, "avgWallClockTime": 9.615, "shortestQuery": 5.855}, {"testName": "array_reduce", "wallClockTime": 56.549, "clientTime": 51.677, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.414, "avgWallClockTime": 9.424, "shortestQuery": 3.805}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 619.192, "clientTime": 567.588, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 29.349, "avgWallClockTime": 9.381, "shortestQuery": 0.857}, {"testName": "base64_hits", "wallClockTime": 108.625, "clientTime": 99.455, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.781, "avgWallClockTime": 9.052, "shortestQuery": 0.843}, {"testName": "if_array_string", "wallClockTime": 53.8, "clientTime": 49.419, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 21.246, "avgWallClockTime": 8.966, "shortestQuery": 4.182}, {"testName": "sum_map", "wallClockTime": 35.384, "clientTime": 30.328, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 14.081, "avgWallClockTime": 8.845, "shortestQuery": 1.374}, {"testName": "string_join", "wallClockTime": 25.833, "clientTime": 19.416, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.092, "avgWallClockTime": 8.611, "shortestQuery": 4.359}, {"testName": "logical_functions_large", "wallClockTime": 85.483, "clientTime": 78.302, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.482, "avgWallClockTime": 8.548, "shortestQuery": 3.843}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 216.9, "clientTime": 198.992, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 42.305, "avgWallClockTime": 8.342, "shortestQuery": 0.887}, {"testName": "visit_param_extract_raw", "wallClockTime": 23.834, "clientTime": 21.736, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.303, "avgWallClockTime": 7.944, "shortestQuery": 2.056}, {"testName": "column_column_comparison", "wallClockTime": 140.669, "clientTime": 128.839, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.273, "avgWallClockTime": 7.403, "shortestQuery": 5.14}, {"testName": "math", "wallClockTime": 444.211, "clientTime": 407.126, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.344, "avgWallClockTime": 7.403, "shortestQuery": 2.247}, {"testName": "round_down", "wallClockTime": 36.282, "clientTime": 33.187, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 26.453, "avgWallClockTime": 7.256, "shortestQuery": 1.278}, {"testName": "array_join", "wallClockTime": 42.205, "clientTime": 38.596, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.083, "avgWallClockTime": 7.034, "shortestQuery": 2.294}, {"testName": "random_printable_ascii", "wallClockTime": 48.951, "clientTime": 44.692, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.135, "avgWallClockTime": 6.993, "shortestQuery": 2.869}, {"testName": "sort", "wallClockTime": 69.503, "clientTime": 62.716, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.312, "avgWallClockTime": 6.95, "shortestQuery": 3.752}, {"testName": "right", "wallClockTime": 13.899, "clientTime": 12.655, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.697, "avgWallClockTime": 6.949, "shortestQuery": 5.958}, {"testName": "cpu_synthetic", "wallClockTime": 323.88, "clientTime": 309.478, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.688, "avgWallClockTime": 6.891, "shortestQuery": 0.999}, {"testName": "ngram_distance", "wallClockTime": 109.589, "clientTime": 100.355, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.047, "avgWallClockTime": 6.849, "shortestQuery": 4.152}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.37, "clientTime": 26.886, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.164, "avgWallClockTime": 6.673, "shortestQuery": 0.583}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.602, "clientTime": 0.025, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.602, "shortestQuery": 0.0}, {"testName": "collations", "wallClockTime": 13.009, "clientTime": 11.825, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.698, "avgWallClockTime": 6.504, "shortestQuery": 1.127}, {"testName": "uniq", "wallClockTime": 507.97, "clientTime": 464.864, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.562, "avgWallClockTime": 6.349, "shortestQuery": 0.882}, {"testName": "string_set", "wallClockTime": 42.851, "clientTime": 35.129, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.714, "avgWallClockTime": 6.121, "shortestQuery": 3.094}, {"testName": "merge_tree_simple_select", "wallClockTime": 5.791, "clientTime": 0.014, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 5.79, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 50.034, "clientTime": 45.745, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.967, "avgWallClockTime": 5.559, "shortestQuery": 1.986}, {"testName": "json_extract_simdjson", "wallClockTime": 71.491, "clientTime": 65.495, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.261, "avgWallClockTime": 5.499, "shortestQuery": 2.776}, {"testName": "website", "wallClockTime": 380.219, "clientTime": 353.773, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.796, "avgWallClockTime": 5.208, "shortestQuery": 0.567}, {"testName": "merge_tree_huge_pk", "wallClockTime": 20.303, "clientTime": 1.794, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.301, "avgWallClockTime": 5.075, "shortestQuery": 1.301}, {"testName": "read_hits_with_aio", "wallClockTime": 19.472, "clientTime": 17.745, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.833, "avgWallClockTime": 4.868, "shortestQuery": 2.691}, {"testName": "order_by_single_column", "wallClockTime": 32.754, "clientTime": 29.943, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.305, "avgWallClockTime": 4.679, "shortestQuery": 1.228}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.213, "clientTime": 7.347, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.697, "avgWallClockTime": 4.606, "shortestQuery": 1.65}, {"testName": "range", "wallClockTime": 8.999, "clientTime": 8.158, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.585, "avgWallClockTime": 4.499, "shortestQuery": 2.573}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.357, "clientTime": 30.895, "total": 8.0, "ignoredQueries": 0.0, "longestQuery": 9.404, "avgWallClockTime": 4.419, "shortestQuery": 0.625}, {"testName": "codecs_int_insert", "wallClockTime": 90.339, "clientTime": 80.208, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.607, "avgWallClockTime": 4.301, "shortestQuery": 1.305}, {"testName": "entropy", "wallClockTime": 37.804, "clientTime": 34.558, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.724, "avgWallClockTime": 4.2, "shortestQuery": 0.724}, {"testName": "trim_whitespace", "wallClockTime": 23.805, "clientTime": 11.599, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.304, "avgWallClockTime": 3.967, "shortestQuery": 0.966}, {"testName": "order_by_read_in_order", "wallClockTime": 19.798, "clientTime": 17.765, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.976, "avgWallClockTime": 3.959, "shortestQuery": 1.407}, {"testName": "scalar", "wallClockTime": 3.938, "clientTime": 1.354, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.354, "avgWallClockTime": 3.937, "shortestQuery": 1.354}, {"testName": "set_hits", "wallClockTime": 23.01, "clientTime": 20.998, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.219, "avgWallClockTime": 3.835, "shortestQuery": 1.016}, {"testName": "linear_regression", "wallClockTime": 18.967, "clientTime": 17.221, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.275, "avgWallClockTime": 3.793, "shortestQuery": 0.723}, {"testName": "array_auc", "wallClockTime": 3.732, "clientTime": 3.312, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.312, "avgWallClockTime": 3.732, "shortestQuery": 3.312}, {"testName": "functions_geo", "wallClockTime": 20.245, "clientTime": 18.446, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.66, "avgWallClockTime": 3.374, "shortestQuery": 1.699}, {"testName": "set_index", "wallClockTime": 15.717, "clientTime": 4.764, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.33, "avgWallClockTime": 3.143, "shortestQuery": 0.681}, {"testName": "if_array_num", "wallClockTime": 18.034, "clientTime": 16.428, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.606, "avgWallClockTime": 3.005, "shortestQuery": 1.926}, {"testName": "decimal_aggregates", "wallClockTime": 57.438, "clientTime": 52.362, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.439, "avgWallClockTime": 2.735, "shortestQuery": 0.864}, {"testName": "bitCount", "wallClockTime": 16.123, "clientTime": 14.688, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.623, "avgWallClockTime": 2.687, "shortestQuery": 1.656}, {"testName": "h3", "wallClockTime": 2.639, "clientTime": 2.32, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.32, "avgWallClockTime": 2.638, "shortestQuery": 2.32}, {"testName": "date_time_64", "wallClockTime": 42.794, "clientTime": 31.809, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.994, "avgWallClockTime": 2.377, "shortestQuery": 0.577}, {"testName": "least_greatest_hits", "wallClockTime": 6.674, "clientTime": 6.051, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.629, "avgWallClockTime": 2.224, "shortestQuery": 2.199}, {"testName": "empty_string_deserialization", "wallClockTime": 2.108, "clientTime": 0.395, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.108, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.691, "clientTime": 6.925, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.804, "avgWallClockTime": 1.922, "shortestQuery": 1.689}, {"testName": "jit_large_requests", "wallClockTime": 3.514, "clientTime": 1.489, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.947, "avgWallClockTime": 1.756, "shortestQuery": 0.947}, {"testName": "merge_table_streams", "wallClockTime": 1.728, "clientTime": 1.373, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.373, "avgWallClockTime": 1.728, "shortestQuery": 1.373}, {"testName": "order_by_decimals", "wallClockTime": 8.563, "clientTime": 7.737, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.315, "avgWallClockTime": 1.712, "shortestQuery": 0.816}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.67, "clientTime": 1.422, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.422, "avgWallClockTime": 1.669, "shortestQuery": 1.422}, {"testName": "array_element", "wallClockTime": 4.503, "clientTime": 4.029, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.478, "avgWallClockTime": 1.5, "shortestQuery": 1.089}, {"testName": "int_parsing", "wallClockTime": 101.07, "clientTime": 92.513, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 3.997, "avgWallClockTime": 1.217, "shortestQuery": 0.608}, {"testName": "basename", "wallClockTime": 2.264, "clientTime": 1.963, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.063, "avgWallClockTime": 1.131, "shortestQuery": 0.9}, {"testName": "if_string_hits", "wallClockTime": 4.258, "clientTime": 3.803, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.041, "avgWallClockTime": 1.064, "shortestQuery": 1.048}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.816, "clientTime": 1.56, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.947, "avgWallClockTime": 0.907, "shortestQuery": 0.612}, {"testName": "concat_hits", "wallClockTime": 23.387, "clientTime": 21.342, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.754, "avgWallClockTime": 0.899, "shortestQuery": 1.151}, {"testName": "great_circle_dist", "wallClockTime": 1.73, "clientTime": 1.489, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.958, "avgWallClockTime": 0.865, "shortestQuery": 0.958}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.533, "clientTime": 37.422, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.74, "avgWallClockTime": 0.855, "shortestQuery": 2.061}, {"testName": "information_value", "wallClockTime": 1.701, "clientTime": 1.457, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.93, "avgWallClockTime": 0.85, "shortestQuery": 0.93}, {"testName": "jit_small_requests", "wallClockTime": 2.31, "clientTime": 1.939, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.256, "avgWallClockTime": 0.769, "shortestQuery": 1.256}, {"testName": "codecs_float_insert", "wallClockTime": 11.101, "clientTime": 9.3, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.956, "avgWallClockTime": 0.74, "shortestQuery": 0.571}, {"testName": "count", "wallClockTime": 0.74, "clientTime": 0.024, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.74, "shortestQuery": 0.0}, {"testName": "slices_hits", "wallClockTime": 1.432, "clientTime": 1.207, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.949, "avgWallClockTime": 0.716, "shortestQuery": 0.949}, {"testName": "analyze_array_tuples", "wallClockTime": 0.666, "clientTime": 0.504, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.666, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.48, "clientTime": 3.1, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.651, "avgWallClockTime": 0.58, "shortestQuery": 0.629}, {"testName": "complex_array_creation", "wallClockTime": 1.147, "clientTime": 0.946, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.573, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.52, "clientTime": 3.11, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.503, "avgWallClockTime": 0.502, "shortestQuery": 1.003}, {"testName": "date_parsing", "wallClockTime": 0.477, "clientTime": 0.338, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.476, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.663, "clientTime": 3.267, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.72, "avgWallClockTime": 0.457, "shortestQuery": 0.61}, {"testName": "early_constant_folding", "wallClockTime": 0.412, "clientTime": 0.274, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.412, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.383, "clientTime": 0.25, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.382, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.759, "clientTime": 0.586, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.379, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.826, "clientTime": 6.146, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.305, "avgWallClockTime": 0.359, "shortestQuery": 0.659}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.31, "clientTime": 1.088, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.327, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.696, "clientTime": 3.34, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.313, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.575, "clientTime": 4.082, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.265, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.047, "clientTime": 0.861, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.261, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.004, "clientTime": 0.823, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.25, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.798, "clientTime": 2.477, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.186, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.334, "clientTime": 0.209, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.166, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "reportErrors": []}
