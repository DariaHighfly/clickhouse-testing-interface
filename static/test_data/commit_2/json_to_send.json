{"commits": {"leftCommit": {"commit": "82b0f31e370739218242f35eb7493b09da22abf1", "merge": "21cb5671 a0ce15be", "author": "Ilya Yatsishin <2159081+qoega@users.noreply.github.com>", "date": "Tue Apr 21 15:10:42 2020 +0300", "info": "Merge pull request #10335 from qoega/move_docker_to_docker\nMove integration tests docker files to docker/ directory."}, "rightCommit": {"commit": "bc2200530f7d8c25cb49d45117a25aaffe151318", "author": "alesapin <alesapin@gmail.com>", "date": "Tue Apr 21 15:19:02 2020 +0300", "info": "Fix PVS studio version"}}, "changes": [], "unstableQueries": [{"oldTime": 0.05, "newTime": 0.0331, "relativeDifference": -0.338, "quantiles": [0.018, 0.246, 0.38, 0.389], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.0605, "newTime": 0.0621, "relativeDifference": 0.026, "quantiles": [0.026, 0.044, 0.174, 0.304], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1135, "newTime": 0.113, "relativeDifference": -0.005, "quantiles": [0.004, 0.02, 0.16, 0.207], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.945, "newTime": 0.8201, "relativeDifference": -0.133, "quantiles": [0.001, 0.045, 0.158, 0.18], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.1124, "newTime": 0.114, "relativeDifference": 0.014, "quantiles": [0.014, 0.117, 0.152, 0.157], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1209, "newTime": 0.1217, "relativeDifference": 0.006, "quantiles": [0.001, 0.007, 0.141, 0.175], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.7311, "newTime": 0.7345, "relativeDifference": 0.004, "quantiles": [0.004, 0.083, 0.138, 0.154], "testName": "empty_string_serialization", "query": "INSERT INTO empty_strings SELECT \\'\\' FROM zeros(100000000);"}, {"oldTime": 0.1178, "newTime": 0.1188, "relativeDifference": 0.008, "quantiles": [0.008, 0.055, 0.137, 0.147], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1303, "newTime": 0.127, "relativeDifference": -0.026, "quantiles": [0.0, 0.048, 0.126, 0.134], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0276, "newTime": 0.0274, "relativeDifference": -0.008, "quantiles": [0.005, 0.091, 0.116, 0.123], "testName": "codecs_float_insert", "query": "INSERT INTO codec_seq_Float64_ZSTD (n) SELECT number/pi() FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1"}, {"oldTime": 0.1365, "newTime": 0.1459, "relativeDifference": 0.068, "quantiles": [0.006, 0.067, 0.114, 0.139], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1023, "newTime": 0.107, "relativeDifference": 0.045, "quantiles": [0.013, 0.054, 0.111, 0.117], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.0829, "newTime": 0.0751, "relativeDifference": -0.095, "quantiles": [0.017, 0.062, 0.109, 0.183], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.25, "newTime": 0.2578, "relativeDifference": 0.031, "quantiles": [0.011, 0.031, 0.109, 0.128], "testName": "linear_regression", "query": "SELECT stochasticLinearRegressionState(0.0001, 0, 15, \\'Momentum\\')(Age, Income, ParamPrice, Robotness, RefererHash) FROM hits_100m_single FORMAT Null"}, {"oldTime": 0.1682, "newTime": 0.1846, "relativeDifference": 0.097, "quantiles": [0.003, 0.044, 0.104, 0.117], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_LZ4 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1171, "newTime": 0.1191, "relativeDifference": 0.017, "quantiles": [0.008, 0.051, 0.1, 0.125], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.065, "newTime": 0.0669, "relativeDifference": 0.029, "quantiles": [0.002, 0.022, 0.096, 0.104], "testName": "pre_limit_no_sorting", "query": "SELECT sum(number) FROM (select number from system.numbers_mt limit 1000000000)"}, {"oldTime": 0.6537, "newTime": 0.6587, "relativeDifference": 0.007, "quantiles": [0.007, 0.041, 0.095, 0.128], "testName": "random_printable_ascii", "query": "SELECT count() FROM zeros(1000000) WHERE NOT ignore(randomPrintableASCII(rand() % 1000))"}, {"oldTime": 0.0683, "newTime": 0.0637, "relativeDifference": -0.068, "quantiles": [0.019, 0.063, 0.093, 0.102], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], [2]][number % 2 + 2])"}, {"oldTime": 0.0443, "newTime": 0.0438, "relativeDifference": -0.012, "quantiles": [0.011, 0.05, 0.091, 0.118], "testName": "jit_large_requests", "query": "\\n        SELECT\\n            COUNT()\\n        FROM\\n            jit_test\\n        WHERE\\n            NOT ignore(a / b + c / d + e / f + g / h + i / j)\\n        SETTINGS\\n            compile_expressions = 0;\\n    "}, {"oldTime": 0.1287, "newTime": 0.1298, "relativeDifference": 0.008, "quantiles": [0.008, 0.031, 0.091, 0.122], "testName": "order_by_read_in_order", "query": "SELECT * FROM hits_100m_single ORDER BY CounterID, EventDate LIMIT 100"}, {"oldTime": 0.0487, "newTime": 0.0506, "relativeDifference": 0.039, "quantiles": [0.012, 0.041, 0.085, 0.105], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], []][number % 2 + 2])"}, {"oldTime": 0.1503, "newTime": 0.1439, "relativeDifference": -0.043, "quantiles": [0.004, 0.038, 0.083, 0.101], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1065, "newTime": 0.1051, "relativeDifference": -0.014, "quantiles": [0.002, 0.02, 0.075, 0.112], "testName": "trim_whitespace", "query": "SELECT replaceRegexpAll(value, \\'^ *| *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.1051, "newTime": 0.1127, "relativeDifference": 0.072, "quantiles": [0.005, 0.032, 0.075, 0.105], "testName": "string_sort", "query": "SELECT SearchPhrase, MobilePhoneModel FROM hits_100m_single ORDER BY SearchPhrase, MobilePhoneModel LIMIT 10"}, {"oldTime": 0.1551, "newTime": 0.1595, "relativeDifference": 0.028, "quantiles": [0.006, 0.031, 0.075, 0.13], "testName": "website", "query": "SELECT TraficSourceID, SearchEngineID, AdvEngineID, ((SearchEngineID = 0 AND AdvEngineID = 0) ? Referer : \\'\\') AS Src, URL AS Dst, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT Refresh GROUP BY TraficSourceID, SearchEngineID, AdvEngineID, Src, Dst ORDER BY PageViews DESC LIMIT 1000"}, {"oldTime": 0.0293, "newTime": 0.0286, "relativeDifference": -0.024, "quantiles": [0.014, 0.026, 0.05, 0.16], "testName": "generate_table_function", "query": "SELECT sum(NOT ignore(*)) FROM (SELECT * FROM generateRandom(\\'i Array(Nullable(UUID))\\', 0, 10, 10) LIMIT 10000000);"}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 9.0, "changedPerf": 0.0, "total": 9.0}, {"testName": "website", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "array_element", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "string_sort", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "trim_whitespace", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "random_printable_ascii", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "generate_table_function", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "codecs_float_insert", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "linear_regression", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "jit_large_requests", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "pre_limit_no_sorting", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "order_by_read_in_order", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "empty_string_serialization", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 28.899, "clientTime": 25.919, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.919, "avgWallClockTime": 28.899, "shortestQuery": 25.919}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 28.866, "clientTime": 25.905, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.905, "avgWallClockTime": 28.865, "shortestQuery": 25.905}, {"testName": "simple_join_query", "wallClockTime": 78.52, "clientTime": 51.026, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 12.856, "avgWallClockTime": 19.629, "shortestQuery": 12.599}, {"testName": "general_purpose_hashes", "wallClockTime": 1460.133, "clientTime": 1338.763, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.454, "avgWallClockTime": 18.719, "shortestQuery": 3.338}, {"testName": "trim_urls", "wallClockTime": 105.357, "clientTime": 96.491, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 41.015, "avgWallClockTime": 17.559, "shortestQuery": 8.309}, {"testName": "array_fill", "wallClockTime": 104.338, "clientTime": 95.547, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.593, "avgWallClockTime": 17.389, "shortestQuery": 7.391}, {"testName": "empty_string_serialization", "wallClockTime": 17.306, "clientTime": 15.787, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.787, "avgWallClockTime": 17.305, "shortestQuery": 15.787}, {"testName": "group_array_moving_sum", "wallClockTime": 203.785, "clientTime": 150.519, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 20.274, "avgWallClockTime": 16.982, "shortestQuery": 6.794}, {"testName": "prewhere", "wallClockTime": 16.566, "clientTime": 15.093, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 15.093, "avgWallClockTime": 16.565, "shortestQuery": 15.093}, {"testName": "first_significant_subdomain", "wallClockTime": 15.944, "clientTime": 14.492, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.492, "avgWallClockTime": 15.944, "shortestQuery": 14.492}, {"testName": "constant_column_search", "wallClockTime": 403.618, "clientTime": 369.531, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 34.322, "avgWallClockTime": 14.414, "shortestQuery": 4.888}, {"testName": "trim_numbers", "wallClockTime": 81.69, "clientTime": 74.805, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 31.083, "avgWallClockTime": 13.615, "shortestQuery": 2.617}, {"testName": "string_sort", "wallClockTime": 1108.879, "clientTime": 1016.536, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 34.755, "avgWallClockTime": 13.2, "shortestQuery": 0.586}, {"testName": "and_function", "wallClockTime": 24.997, "clientTime": 22.831, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 20.912, "avgWallClockTime": 12.498, "shortestQuery": 1.919}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.25, "clientTime": 4.448, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.448, "avgWallClockTime": 12.25, "shortestQuery": 4.448}, {"testName": "constant_column_comparison", "wallClockTime": 222.898, "clientTime": 204.179, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.434, "avgWallClockTime": 10.614, "shortestQuery": 3.727}, {"testName": "json_extract_rapidjson", "wallClockTime": 136.232, "clientTime": 124.844, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.267, "avgWallClockTime": 10.479, "shortestQuery": 3.601}, {"testName": "array_reduce", "wallClockTime": 60.503, "clientTime": 55.276, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 14.393, "avgWallClockTime": 10.083, "shortestQuery": 3.955}, {"testName": "bloom_filter", "wallClockTime": 9.865, "clientTime": 8.89, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.89, "avgWallClockTime": 9.864, "shortestQuery": 8.89}, {"testName": "joins_in_memory", "wallClockTime": 334.6, "clientTime": 461.28, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 22.153, "avgWallClockTime": 9.841, "shortestQuery": 17.169}, {"testName": "url_hits", "wallClockTime": 195.238, "clientTime": 186.098, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 23.165, "avgWallClockTime": 9.761, "shortestQuery": 6.048}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 618.952, "clientTime": 567.045, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 27.879, "avgWallClockTime": 9.378, "shortestQuery": 0.905}, {"testName": "base64_hits", "wallClockTime": 108.833, "clientTime": 99.69, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.343, "avgWallClockTime": 9.069, "shortestQuery": 0.82}, {"testName": "if_array_string", "wallClockTime": 53.254, "clientTime": 48.759, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 20.754, "avgWallClockTime": 8.875, "shortestQuery": 4.115}, {"testName": "sum_map", "wallClockTime": 34.67, "clientTime": 29.672, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.573, "avgWallClockTime": 8.667, "shortestQuery": 1.374}, {"testName": "logical_functions_large", "wallClockTime": 86.573, "clientTime": 79.238, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.432, "avgWallClockTime": 8.657, "shortestQuery": 3.831}, {"testName": "string_join", "wallClockTime": 25.795, "clientTime": 19.467, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.051, "avgWallClockTime": 8.598, "shortestQuery": 4.392}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 213.252, "clientTime": 195.358, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 38.577, "avgWallClockTime": 8.201, "shortestQuery": 0.884}, {"testName": "visit_param_extract_raw", "wallClockTime": 24.076, "clientTime": 22.045, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 15.584, "avgWallClockTime": 8.025, "shortestQuery": 2.069}, {"testName": "column_column_comparison", "wallClockTime": 142.765, "clientTime": 130.794, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.965, "avgWallClockTime": 7.513, "shortestQuery": 5.42}, {"testName": "math", "wallClockTime": 444.481, "clientTime": 407.378, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.295, "avgWallClockTime": 7.408, "shortestQuery": 2.245}, {"testName": "round_down", "wallClockTime": 36.13, "clientTime": 33.026, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 26.228, "avgWallClockTime": 7.226, "shortestQuery": 1.281}, {"testName": "sort", "wallClockTime": 71.698, "clientTime": 64.767, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.699, "avgWallClockTime": 7.169, "shortestQuery": 3.94}, {"testName": "array_join", "wallClockTime": 42.306, "clientTime": 38.679, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.097, "avgWallClockTime": 7.05, "shortestQuery": 2.256}, {"testName": "random_printable_ascii", "wallClockTime": 49.247, "clientTime": 45.054, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.188, "avgWallClockTime": 7.035, "shortestQuery": 3.125}, {"testName": "right", "wallClockTime": 13.972, "clientTime": 12.708, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.621, "avgWallClockTime": 6.986, "shortestQuery": 6.087}, {"testName": "cpu_synthetic", "wallClockTime": 324.96, "clientTime": 311.152, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 43.586, "avgWallClockTime": 6.914, "shortestQuery": 1.093}, {"testName": "ngram_distance", "wallClockTime": 109.725, "clientTime": 100.495, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.078, "avgWallClockTime": 6.857, "shortestQuery": 4.002}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.734, "clientTime": 27.043, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.254, "avgWallClockTime": 6.746, "shortestQuery": 0.597}, {"testName": "collations", "wallClockTime": 13.2, "clientTime": 12.026, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.853, "avgWallClockTime": 6.599, "shortestQuery": 1.172}, {"testName": "merge_tree_many_partitions", "wallClockTime": 6.513, "clientTime": 0.021, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.513, "shortestQuery": 0.0}, {"testName": "uniq", "wallClockTime": 509.26, "clientTime": 465.887, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.551, "avgWallClockTime": 6.365, "shortestQuery": 0.9}, {"testName": "string_set", "wallClockTime": 42.766, "clientTime": 34.89, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.592, "avgWallClockTime": 6.109, "shortestQuery": 3.092}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.058, "clientTime": 0.014, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.058, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 50.488, "clientTime": 46.172, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 9.013, "avgWallClockTime": 5.609, "shortestQuery": 1.971}, {"testName": "json_extract_simdjson", "wallClockTime": 71.251, "clientTime": 65.281, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.244, "avgWallClockTime": 5.48, "shortestQuery": 2.836}, {"testName": "website", "wallClockTime": 379.119, "clientTime": 353.105, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.531, "avgWallClockTime": 5.193, "shortestQuery": 0.557}, {"testName": "read_hits_with_aio", "wallClockTime": 19.939, "clientTime": 18.173, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 6.029, "avgWallClockTime": 4.984, "shortestQuery": 2.831}, {"testName": "range", "wallClockTime": 9.635, "clientTime": 8.736, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.143, "avgWallClockTime": 4.817, "shortestQuery": 2.593}, {"testName": "order_by_single_column", "wallClockTime": 33.031, "clientTime": 30.21, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.413, "avgWallClockTime": 4.718, "shortestQuery": 1.222}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.344, "clientTime": 7.406, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.726, "avgWallClockTime": 4.671, "shortestQuery": 1.679}, {"testName": "merge_tree_huge_pk", "wallClockTime": 18.224, "clientTime": 1.637, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.223, "avgWallClockTime": 4.556, "shortestQuery": 1.223}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.54, "clientTime": 31.107, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.569, "avgWallClockTime": 4.442, "shortestQuery": 0.938}, {"testName": "codecs_int_insert", "wallClockTime": 92.222, "clientTime": 81.067, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.606, "avgWallClockTime": 4.391, "shortestQuery": 1.273}, {"testName": "entropy", "wallClockTime": 37.888, "clientTime": 34.58, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.77, "avgWallClockTime": 4.209, "shortestQuery": 0.739}, {"testName": "scalar", "wallClockTime": 4.018, "clientTime": 1.408, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.408, "avgWallClockTime": 4.018, "shortestQuery": 1.408}, {"testName": "trim_whitespace", "wallClockTime": 23.649, "clientTime": 11.609, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.371, "avgWallClockTime": 3.941, "shortestQuery": 0.953}, {"testName": "order_by_read_in_order", "wallClockTime": 19.61, "clientTime": 17.654, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.841, "avgWallClockTime": 3.922, "shortestQuery": 1.377}, {"testName": "linear_regression", "wallClockTime": 19.588, "clientTime": 17.814, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.643, "avgWallClockTime": 3.917, "shortestQuery": 0.749}, {"testName": "set_hits", "wallClockTime": 22.982, "clientTime": 20.947, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.162, "avgWallClockTime": 3.83, "shortestQuery": 1.004}, {"testName": "array_auc", "wallClockTime": 3.706, "clientTime": 3.289, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.289, "avgWallClockTime": 3.706, "shortestQuery": 3.289}, {"testName": "functions_geo", "wallClockTime": 20.071, "clientTime": 18.296, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.423, "avgWallClockTime": 3.345, "shortestQuery": 1.693}, {"testName": "set_index", "wallClockTime": 15.586, "clientTime": 4.575, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.187, "avgWallClockTime": 3.117, "shortestQuery": 0.672}, {"testName": "if_array_num", "wallClockTime": 17.63, "clientTime": 16.052, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.581, "avgWallClockTime": 2.938, "shortestQuery": 1.822}, {"testName": "decimal_aggregates", "wallClockTime": 57.398, "clientTime": 52.384, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.429, "avgWallClockTime": 2.733, "shortestQuery": 0.851}, {"testName": "bitCount", "wallClockTime": 16.367, "clientTime": 14.915, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.681, "avgWallClockTime": 2.727, "shortestQuery": 1.683}, {"testName": "h3", "wallClockTime": 2.591, "clientTime": 2.281, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.281, "avgWallClockTime": 2.591, "shortestQuery": 2.281}, {"testName": "date_time_64", "wallClockTime": 41.945, "clientTime": 31.105, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.801, "avgWallClockTime": 2.33, "shortestQuery": 0.564}, {"testName": "least_greatest_hits", "wallClockTime": 6.705, "clientTime": 6.029, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.579, "avgWallClockTime": 2.234, "shortestQuery": 2.221}, {"testName": "empty_string_deserialization", "wallClockTime": 1.955, "clientTime": 0.376, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 1.955, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.643, "clientTime": 6.881, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.792, "avgWallClockTime": 1.91, "shortestQuery": 1.687}, {"testName": "jit_large_requests", "wallClockTime": 3.578, "clientTime": 1.517, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.973, "avgWallClockTime": 1.789, "shortestQuery": 0.973}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.752, "clientTime": 1.493, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.493, "avgWallClockTime": 1.751, "shortestQuery": 1.493}, {"testName": "merge_table_streams", "wallClockTime": 1.741, "clientTime": 1.39, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.39, "avgWallClockTime": 1.741, "shortestQuery": 1.39}, {"testName": "order_by_decimals", "wallClockTime": 8.49, "clientTime": 7.688, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.293, "avgWallClockTime": 1.697, "shortestQuery": 0.806}, {"testName": "array_element", "wallClockTime": 4.49, "clientTime": 4.015, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.464, "avgWallClockTime": 1.496, "shortestQuery": 1.089}, {"testName": "int_parsing", "wallClockTime": 102.033, "clientTime": 93.362, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.075, "avgWallClockTime": 1.229, "shortestQuery": 0.622}, {"testName": "basename", "wallClockTime": 2.198, "clientTime": 1.908, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.032, "avgWallClockTime": 1.098, "shortestQuery": 0.875}, {"testName": "if_string_hits", "wallClockTime": 4.15, "clientTime": 3.708, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 2.016, "avgWallClockTime": 1.037, "shortestQuery": 1.027}, {"testName": "concat_hits", "wallClockTime": 23.762, "clientTime": 21.696, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.772, "avgWallClockTime": 0.913, "shortestQuery": 1.17}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.819, "clientTime": 1.564, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.937, "avgWallClockTime": 0.909, "shortestQuery": 0.626}, {"testName": "joins_in_memory_pmj", "wallClockTime": 21.051, "clientTime": 38.372, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.765, "avgWallClockTime": 0.877, "shortestQuery": 2.138}, {"testName": "information_value", "wallClockTime": 1.746, "clientTime": 1.497, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.939, "avgWallClockTime": 0.873, "shortestQuery": 0.939}, {"testName": "great_circle_dist", "wallClockTime": 1.73, "clientTime": 1.486, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.945, "avgWallClockTime": 0.865, "shortestQuery": 0.945}, {"testName": "jit_small_requests", "wallClockTime": 2.338, "clientTime": 1.965, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.287, "avgWallClockTime": 0.779, "shortestQuery": 1.287}, {"testName": "codecs_float_insert", "wallClockTime": 11.185, "clientTime": 9.32, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.959, "avgWallClockTime": 0.745, "shortestQuery": 0.577}, {"testName": "slices_hits", "wallClockTime": 1.482, "clientTime": 1.254, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.985, "avgWallClockTime": 0.74, "shortestQuery": 0.985}, {"testName": "count", "wallClockTime": 0.73, "clientTime": 0.013, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.73, "shortestQuery": 0.0}, {"testName": "analyze_array_tuples", "wallClockTime": 0.624, "clientTime": 0.466, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.624, "shortestQuery": 0.0}, {"testName": "complex_array_creation", "wallClockTime": 1.175, "clientTime": 0.981, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.587, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.511, "clientTime": 3.121, "total": 6.0, "ignoredQueries": 3.0, "longestQuery": 0.676, "avgWallClockTime": 0.585, "shortestQuery": 0.648}, {"testName": "date_parsing", "wallClockTime": 0.499, "clientTime": 0.354, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.499, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.447, "clientTime": 3.059, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.501, "avgWallClockTime": 0.492, "shortestQuery": 1.001}, {"testName": "conditional", "wallClockTime": 3.577, "clientTime": 3.172, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.7, "avgWallClockTime": 0.447, "shortestQuery": 0.591}, {"testName": "fixed_string16", "wallClockTime": 0.422, "clientTime": 0.282, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.421, "shortestQuery": 0.0}, {"testName": "early_constant_folding", "wallClockTime": 0.407, "clientTime": 0.275, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.407, "shortestQuery": 0.0}, {"testName": "cidr", "wallClockTime": 0.736, "clientTime": 0.574, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.368, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.786, "clientTime": 6.087, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.282, "avgWallClockTime": 0.357, "shortestQuery": 0.669}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.301, "clientTime": 1.089, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.325, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.701, "clientTime": 3.355, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.313, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.689, "clientTime": 4.172, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.27, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.043, "clientTime": 0.852, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.26, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.017, "clientTime": 0.837, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.254, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.789, "clientTime": 2.454, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.185, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.336, "clientTime": 0.211, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.167, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": {"difference": [0.0003], "newTime": [0.0209]}, "and_function": {"difference": [-0.0007, -0.0079], "newTime": [0.0864, 0.9432]}, "array_auc": {"difference": [-0.0102], "newTime": [0.1454]}, "array_element": {"difference": [-0.0023, -0.0046, 0.0019], "newTime": [0.0647, 0.0637, 0.0506]}, "array_fill": {"difference": [0.0015, 0.0013, -0.0005, 0.0252, 0.0144, 0.0216], "newTime": [0.4357, 0.334, 0.3659, 1.2148, 0.9488, 1.0588]}, "array_join": {"difference": [0.0007, 0.0035, -0.0004, 0.0012, -0.003, -0.0054], "newTime": [0.4132, 0.4131, 0.1013, 0.3162, 0.1964, 0.3137]}, "array_reduce": {"difference": [-0.0064, -0.0058, -0.0073, -0.0179, -0.0141, -0.0064], "newTime": [0.176, 0.2114, 0.4088, 0.5986, 0.436, 0.646]}, "base64": {"difference": [-0.0001, -0.0073, 0.0003, -0.0015, 0.0017, -0.0009, 0.0026, 0.0002, 0.0023], "newTime": [0.0883, 0.1856, 0.1323, 0.2004, 0.4096, 0.2351, 0.199, 0.4069, 0.231]}, "base64_hits": {"difference": [0.0002, 0.0009, -0.0112, -0.0038, 0.0013, 0.0019, 0.0326, -0.0048, -0.0026, 0.0022, 0.0622, -0.0191], "newTime": [0.0366, 0.0826, 0.4349, 0.4523, 0.0532, 0.136, 0.8001, 0.7796, 0.0507, 0.1356, 0.8168, 0.7759]}, "basename": {"difference": [0.0017, 0.0001], "newTime": [0.0405, 0.0472]}, "bitCount": {"difference": [-0.001, -0.0042, 0.0028, 0.0007, 0.0011, 0.0023], "newTime": [0.0757, 0.1404, 0.099, 0.1675, 0.0986, 0.0979]}, "bit_operations_fixed_string": {"difference": [0.0008, 0.0002, 0.001, 0.0], "newTime": [0.0121, 0.0106, 0.0128, 0.0122]}, "bit_operations_fixed_string_numbers": {"difference": [0.0005, -0.0003], "newTime": [0.0426, 0.028]}, "bloom_filter": {"difference": [-0.003], "newTime": [0.4023]}, "bounding_ratio": {"difference": [0.0002, -0.0001], "newTime": [0.0046, 0.0047]}, "cidr": {"difference": [0.0009, -0.0006], "newTime": [0.0106, 0.0141]}, "codecs_float_insert": {"difference": [-0.0012, 0.0006, 0.0009, -0.0005, -0.0001, -0.0009, 0.0008, 0.0002, 0.0001, -0.0001, 0.0001, 0.0002, 0.0002, -0.0002, -0.0002], "newTime": [0.0428, 0.0423, 0.0391, 0.0294, 0.0421, 0.0286, 0.03, 0.0161, 0.0154, 0.0283, 0.014, 0.0263, 0.0177, 0.0175, 0.0274]}, "codecs_float_select": {"difference": [-0.0001, 0.0001, -0.0001, -0.0001, -0.0002, -0.0002, 0.0, -0.0001, 0.0004, 0.0, 0.0001, -0.0001, -0.0004, 0.0003, 0.0], "newTime": [0.016, 0.0134, 0.006, 0.0045, 0.0126, 0.016, 0.0145, 0.004, 0.0046, 0.0128, 0.008, 0.0131, 0.0043, 0.0048, 0.0127]}, "codecs_int_insert": {"difference": [-0.0033, 0.0045, 0.0001, 0.0122, 0.0094, 0.0016, -0.0112, -0.0005, 0.0099, -0.0038, 0.0016, 0.001, -0.0064, 0.0045, -0.0103, 0.0016, 0.004, 0.0164, 0.002, 0.0094, 0.0018], "newTime": [0.127, 0.2288, 0.2148, 0.2165, 0.1459, 0.1799, 0.335, 0.113, 0.2526, 0.2538, 0.114, 0.1188, 0.1439, 0.1645, 0.1123, 0.0621, 0.18, 0.1846, 0.1191, 0.1517, 0.2728]}, "codecs_int_select": {"difference": [-0.0006, -0.0004, -0.0002, -0.0002, -0.0004, 0.0001, -0.0003, -0.0009, -0.0002, -0.0009, -0.0006, -0.0005, -0.0003, -0.0005, -0.0004, -0.0001, -0.0001, -0.0005, -0.0006, -0.0001, -0.0001], "newTime": [0.0042, 0.011, 0.0096, 0.011, 0.0041, 0.0109, 0.0153, 0.0038, 0.0161, 0.0143, 0.0042, 0.0042, 0.0082, 0.0044, 0.0047, 0.0055, 0.0082, 0.0115, 0.0046, 0.0108, 0.0154]}, "collations": {"difference": [0.0043, -0.0009], "newTime": [0.4833, 0.0514]}, "column_column_comparison": {"difference": [0.0, -0.0024, 0.0009, -0.0001, -0.0016, -0.0033, 0.0, 0.0032, -0.0049, -0.0002, -0.0003, -0.0019, 0.0001, -0.0001, -0.0015, -0.0037, 0.0126, 0.0001, 0.003], "newTime": [0.0011, 0.6079, 0.2455, 0.0012, 0.2514, 0.9063, 0.0013, 0.2835, 0.266, 0.0012, 0.6328, 0.2703, 0.0011, 0.0011, 0.6628, 0.252, 1.2355, 0.0013, 0.3141]}, "complex_array_creation": {"difference": [-0.0004, -0.0002], "newTime": [0.0226, 0.0204]}, "concat_hits": {"difference": [0.0009, 0.0001, -0.0003, 0.0004, -0.0014, -0.0003, -0.0002, 0.0001, 0.0012, -0.0031, 0.0, 0.0026, -0.0005, -0.0002, 0.0002, 0.0, 0.0003, -0.0003, 0.0003, -0.0005, 0.0005, -0.0005, -0.001, 0.0001, -0.0004, 0.0015], "newTime": [0.0159, 0.0153, 0.0125, 0.0113, 0.0155, 0.0165, 0.0115, 0.0532, 0.0705, 0.0572, 0.0616, 0.0708, 0.0781, 0.0154, 0.0152, 0.0122, 0.0104, 0.0528, 0.0166, 0.0685, 0.0114, 0.017, 0.0575, 0.0658, 0.0607, 0.0811]}, "conditional": {"difference": [0.0001, -0.0001, -0.0002, -0.0001, 0.0, 0.0, -0.0001, -0.0001], "newTime": [0.015, 0.0263, 0.0084, 0.0134, 0.0194, 0.0311, 0.0118, 0.0161]}, "consistent_hashes": {"difference": [0.0001, 0.0004, 0.0003, 0.0004, 0.0, -0.0001, 0.0], "newTime": [0.0042, 0.0683, 0.0456, 0.0059, 0.0048, 0.0047, 0.0049]}, "constant_column_comparison": {"difference": [0.0055, 0.0046, -0.001, -0.0029, 0.0018, -0.0008, -0.0035, 0.0046, -0.001, 0.0019, -0.0032, -0.0034, -0.0019, 0.0024, -0.0023, -0.0012, 0.0087, 0.0022, -0.002, -0.0026, 0.0038], "newTime": [0.4805, 0.506, 0.4994, 0.3945, 0.4569, 0.462, 0.4963, 0.5633, 0.5615, 0.1716, 0.2098, 0.2091, 0.1945, 0.2358, 0.2285, 0.5424, 0.6326, 0.6282, 0.537, 0.6097, 0.6577]}, "constant_column_search": {"difference": [-0.0016, -0.0016, 0.0064, -0.0035, 0.0066, 0.015, -0.0047, 0.0073, 0.0018, -0.0053, 0.0072, 0.0004, 0.0002, -0.0017, 0.0007, -0.0019, 0.0005, 0.0021, 0.005, 0.001, 0.0084, -0.0039, -0.0037, 0.0001, 0.0033, -0.0003, -0.0014, -0.0006], "newTime": [0.2207, 0.2249, 0.9045, 1.0455, 1.5567, 1.0831, 0.4658, 0.5813, 0.5227, 0.859, 0.6099, 0.9913, 0.4276, 0.3273, 0.346, 0.4977, 0.3807, 0.4712, 1.1716, 0.3772, 1.0822, 0.4346, 0.4694, 0.437, 0.3244, 0.2468, 0.325, 0.3831]}, "count": {"difference": [0.0], "newTime": [0.0005]}, "cpu_synthetic": {"difference": [-0.0014, 0.0033, 0.0125, 0.0015, -0.0355, 0.0002, -0.0005, 0.0039, 0.0006, -0.0013, -0.0002, 0.0001, 0.0014, -0.004, 0.003, 0.0018, 0.0087, 0.0054, 0.0045, -0.0007, -0.0008, -0.0045, 0.013, -0.0005, 0.0018, 0.001, -0.005, 0.0019, -0.0014, -0.0044, 0.0068, 0.0047, 0.0001, -0.0001, 0.0002, -0.0001, -0.0004, 0.0001, -0.0001, -0.0007, 0.0013, -0.0006, -0.0004, 0.0029, -0.0006], "newTime": [0.1744, 0.2636, 0.4766, 1.0789, 0.8727, 0.0484, 0.0655, 0.2748, 0.3422, 0.0661, 0.078, 0.1231, 0.4342, 0.2602, 0.2606, 0.283, 1.9863, 0.1247, 1.1286, 0.094, 0.1615, 0.463, 0.629, 0.1605, 0.2036, 0.3336, 0.848, 0.0545, 0.445, 0.4411, 0.4847, 0.107, 0.0182, 0.0216, 0.0179, 0.0241, 0.0189, 0.0176, 0.0175, 0.0692, 0.0741, 0.0697, 0.1162, 0.1224, 0.154]}, "date_parsing": {"difference": [0.0002], "newTime": [0.0154]}, "date_time_64": {"difference": [-0.0002, -0.0012, 0.0001, 0.0006, -0.0002, -0.0002, 0.0027, 0.0001, -0.0006, -0.0001, 0.0005, 0.002, 0.0004, 0.0007, -0.0003, 0.002, 0.0, -0.0007], "newTime": [0.0193, 0.0332, 0.0493, 0.0207, 0.025, 0.0257, 0.1162, 0.1369, 0.0607, 0.0684, 0.0685, 0.2124, 0.0185, 0.033, 0.1617, 0.3097, 0.0191, 0.0345]}, "decimal_aggregates": {"difference": [-0.0003, 0.0, 0.0001, 0.0021, -0.0012, 0.003, 0.0004, -0.0002, -0.0005, -0.0021, -0.0011, 0.0001, 0.0007, -0.0012, 0.0036, -0.0007, 0.0016, 0.0034, -0.0013, 0.0, 0.0001], "newTime": [0.0051, 0.0024, 0.0029, 0.2439, 0.1551, 0.1652, 0.0076, 0.004, 0.0046, 0.2464, 0.1551, 0.161, 0.241, 0.1488, 0.1605, 0.1627, 0.1577, 0.1611, 0.0836, 0.0386, 0.0663]}, "distributed_aggregation": {"difference": [-0.0004, 0.0, 0.0, 0.0031], "newTime": [0.0785, 0.0748, 0.0753, 0.0778]}, "early_constant_folding": {"difference": [-0.0002], "newTime": [0.0119]}, "empty_string_deserialization": {"difference": [-0.0004], "newTime": [0.0164]}, "empty_string_serialization": {"difference": [0.0034], "newTime": [0.7345]}, "entropy": {"difference": [0.0014, -0.0004, -0.0005, 0.0, 0.0003, -0.001, -0.0035, 0.0186, -0.001], "newTime": [0.0507, 0.0765, 0.0163, 0.0088, 0.0063, 0.0556, 0.6467, 0.6804, 0.0329]}, "first_significant_subdomain": {"difference": [0.0029], "newTime": [0.6605]}, "fixed_string16": {"difference": [0.0005], "newTime": [0.0118]}, "format_date_time": {"difference": [-0.0002, -0.0005, 0.0004, -0.0001, -0.0006, -0.0005], "newTime": [0.0245, 0.0181, 0.0301, 0.0286, 0.008, 0.0287]}, "functions_coding": {"difference": [0.0001, 0.0, -0.0003, -0.0004], "newTime": [0.0073, 0.0119, 0.0081, 0.01]}, "functions_geo": {"difference": [0.0, 0.0003, 0.0017, 0.0015, -0.0014, -0.0022], "newTime": [0.0767, 0.0825, 0.2472, 0.1498, 0.1262, 0.1462]}, "general_purpose_hashes": {"difference": [0.0031, -0.0105, -0.0062, 0.0269, 0.0088, 0.0152, 0.0019, -0.026, -0.0025, 0.007, -0.0017, 0.003, 0.0171, 0.0038, -0.001, -0.004, 0.0081, 0.0012, 0.0042, 0.0078, 0.0026, -0.0085, -0.0015, -0.0039, -0.006, 0.0182, 0.002, 0.0075, -0.002, -0.0018, 0.0001, -0.0115, 0.0008, 0.0034, 0.0, 0.0003, -0.0033, 0.0019, 0.0029, -0.001, -0.001, 0.0051, -0.0011, 0.0133, 0.0002, -0.0077, -0.0027, -0.0137, -0.0017, 0.003, 0.0014, -0.0036, 0.0399, 0.0007, -0.0035, 0.0636, -0.0063, -0.0177, 0.0155, -0.0013, 0.0195, 0.0056, 0.0164, 0.0213, 0.0191, 0.0024, 0.0059, 0.007, 0.0067, 0.0148, 0.0087, -0.0035, 0.0163, 0.025, 0.0162, 0.0141, 0.0189, 0.0083], "newTime": [0.5272, 1.4266, 0.5824, 1.0447, 0.5621, 1.0569, 0.3882, 1.3161, 0.3698, 1.3244, 0.7413, 1.2462, 0.5434, 1.1797, 0.5908, 1.1688, 0.8062, 1.6377, 0.6642, 1.4445, 0.8343, 1.6987, 0.5536, 1.1873, 0.6908, 1.3193, 0.2124, 0.5593, 0.2301, 0.397, 0.2195, 0.3924, 0.1569, 0.5103, 0.153, 0.4908, 0.2851, 0.4596, 0.2154, 0.4643, 0.2398, 0.4352, 0.3235, 0.6631, 0.2544, 0.5412, 0.322, 0.6209, 0.2211, 0.4539, 0.2771, 0.4983, 1.1889, 0.622, 0.5532, 1.3064, 1.2795, 0.5386, 0.7418, 0.5988, 0.6094, 0.8041, 0.6084, 0.6061, 0.5517, 1.3243, 1.2399, 1.241, 1.3735, 1.3705, 1.2376, 1.2309, 1.2723, 1.2445, 1.2278, 1.2468, 1.2454, 1.2551]}, "general_purpose_hashes_on_UUID": {"difference": [0.0001, 0.0003, 0.0003, 0.0, 0.0, 0.0, -0.0004, 0.0001, -0.0003, -0.0001, 0.0001, -0.0024, -0.0004, 0.0003, 0.0002, 0.0005, 0.0001, 0.0015, 0.0002, -0.0004, -0.0002, 0.0042, 0.0044, 0.0034, -0.0115, -0.0081, -0.0013, -0.0198, 0.0078, 0.0057, -0.0009, 0.0009, -0.0011, 0.0066, -0.015, -0.0014, 0.0234, -0.0017, -0.0002, -0.0053, -0.0079, -0.0008, 0.0197, 0.017, 0.0003, -0.0012, 0.0056, 0.0029, -0.0108, 0.0015, -0.0075, 0.0063, -0.0021, -0.0071, -0.0116, -0.0017, -0.0024, -0.0003, -0.0023, -0.0021, 0.0079, -0.0035, -0.0017, 0.0063, -0.0048, 0.0017], "newTime": [0.0409, 0.0419, 0.0475, 0.0463, 0.043, 0.0421, 0.0413, 0.0441, 0.0433, 0.0422, 0.0418, 0.0177, 0.0183, 0.0206, 0.0202, 0.0192, 0.019, 0.0198, 0.0198, 0.0194, 0.0188, 0.0231, 0.5938, 0.4364, 0.6517, 0.4949, 1.2676, 1.099, 1.2203, 1.0578, 0.879, 0.7118, 0.838, 0.6866, 0.735, 0.5852, 1.0461, 0.8603, 0.9921, 0.8227, 0.8602, 0.6949, 0.8823, 0.7126, 0.2421, 0.1771, 0.2704, 0.197, 0.4697, 0.4001, 0.4373, 0.4016, 0.338, 0.2659, 0.3174, 0.2668, 0.2902, 0.2341, 0.3835, 0.3238, 0.3798, 0.3122, 0.3145, 0.2599, 0.3323, 0.2854]}, "generate_table_function": {"difference": [0.0, -0.0001, -0.0001, 0.0004, -0.0001, 0.0002, -0.0002, -0.0007, 0.0006, 0.0, 0.0002, 0.0001, -0.0003, 0.0004, 0.0001, 0.0, -0.0001, -0.0002, 0.0005], "newTime": [0.0062, 0.0088, 0.0163, 0.0058, 0.0084, 0.023, 0.0167, 0.0286, 0.0577, 0.0052, 0.0044, 0.0068, 0.0152, 0.0139, 0.0158, 0.0058, 0.0066, 0.0105, 0.0106]}, "great_circle_dist": {"difference": [-0.0001, 0.0003], "newTime": [0.0425, 0.0241]}, "group_array_moving_sum": {"difference": [-0.0053, -0.013, 0.0122, -0.0117, 0.0083, 0.0215, 0.0147, 0.0029, 0.0099, 0.0069, -0.0022, 0.003], "newTime": [0.9187, 0.4237, 0.9272, 0.4288, 0.924, 0.435, 0.6222, 0.3192, 0.6293, 0.3247, 0.6213, 0.3144]}, "h3": {"difference": [-0.0007], "newTime": [0.1032]}, "if_array_num": {"difference": [-0.0013, 0.0002, -0.0006, 0.0001, 0.0025, -0.0007], "newTime": [0.0813, 0.0906, 0.113, 0.127, 0.1511, 0.1602]}, "if_array_string": {"difference": [0.0023, -0.0028, -0.0009, 0.0011, 0.0097, -0.1249], "newTime": [0.1883, 0.2685, 0.2211, 0.2557, 0.3457, 0.8201]}, "if_string_const": {"difference": [0.0002, 0.0, 0.0, 0.0001], "newTime": [0.0098, 0.0097, 0.0104, 0.0079]}, "if_string_hits": {"difference": [-0.0002, -0.0004, -0.0007, -0.0001], "newTime": [0.012, 0.0169, 0.0463, 0.0901]}, "information_value": {"difference": [0.0, -0.0004], "newTime": [0.042, 0.0239]}, "inserts_arrays_lowcardinality": {"difference": [0.0003, -0.0002], "newTime": [0.0765, 0.26]}, "int_parsing": {"difference": [0.0005, -0.0001, 0.0003, -0.001, 0.0005, 0.0005, 0.0004, 0.0005, 0.0, 0.0031, -0.0002, -0.0001, -0.0001, 0.0008, -0.0001, 0.001, 0.0004, -0.0009, 0.0003, -0.0001, 0.0, -0.0006, 0.0009, 0.0001, 0.0002, 0.001, 0.0001, 0.0001, 0.0005, 0.0003, 0.0009, 0.0003, -0.0004, 0.0004, -0.0002, 0.0002, -0.0001, 0.0, 0.0, -0.0004, -0.0002, -0.0003, 0.0019, 0.0001, 0.0001, 0.0003, 0.0003, 0.0003, 0.0002, -0.0004, -0.0006, 0.0011, -0.0001, 0.0008, -0.0001, 0.0004, -0.0004, 0.0001, 0.0023, 0.0001, 0.0017, -0.0011, 0.0003, 0.0003, 0.0001, 0.0006, 0.0004, 0.0001, 0.0005, 0.0005, -0.0002, 0.0004, 0.0002, -0.0031, 0.0007, -0.0001, 0.0055, -0.0007, 0.0008, 0.0018, 0.0007, -0.0003, 0.0004], "newTime": [0.0285, 0.0363, 0.035, 0.0777, 0.0508, 0.0497, 0.0643, 0.0286, 0.0334, 0.059, 0.0565, 0.0589, 0.071, 0.0772, 0.036, 0.1146, 0.066, 0.0634, 0.0346, 0.0316, 0.0335, 0.0886, 0.0303, 0.0282, 0.0438, 0.0708, 0.0331, 0.0477, 0.0357, 0.0289, 0.0289, 0.0313, 0.0307, 0.0357, 0.028, 0.0297, 0.0289, 0.032, 0.0286, 0.0525, 0.0589, 0.0305, 0.0757, 0.0288, 0.0286, 0.0373, 0.0359, 0.0299, 0.039, 0.0334, 0.0553, 0.174, 0.0304, 0.0603, 0.0738, 0.0624, 0.0365, 0.0352, 0.0508, 0.0506, 0.0826, 0.0819, 0.0339, 0.0358, 0.0514, 0.0621, 0.0329, 0.032, 0.0322, 0.0495, 0.0298, 0.0294, 0.0416, 0.1836, 0.0375, 0.0404, 0.1474, 0.1414, 0.0509, 0.0552, 0.0591, 0.0283, 0.0334]}, "jit_large_requests": {"difference": [-0.0005, 0.0001], "newTime": [0.0438, 0.0232]}, "jit_small_requests": {"difference": [0.0003, -0.0001, -0.0001], "newTime": [0.0173, 0.058, 0.0125]}, "joins_in_memory": {"difference": [-0.0002, 0.0001, 0.0, 0.0001, 0.0, 0.0003, 0.0084, -0.0006, -0.0032, 0.0004, 0.0034, 0.0008, -0.0009, 0.0025, 0.0058, 0.0012, -0.0032, 0.0014, 0.0101, 0.0005, -0.0012], "newTime": [0.0024, 0.0024, 0.0025, 0.0041, 0.0018, 0.8495, 0.8524, 0.8778, 1.0091, 0.8255, 0.8334, 0.8559, 0.9895, 0.8242, 0.8356, 0.8555, 1.0045, 0.7817, 0.7836, 0.8164, 0.9421]}, "joins_in_memory_pmj": {"difference": [0.0001, 0.0, 0.0004, -0.0001, 0.0019, -0.0014, -0.0002, 0.0002, -0.0006, -0.0008, -0.0003, 0.0], "newTime": [0.0035, 0.0031, 0.0041, 0.0043, 0.0964, 0.0962, 0.1067, 0.1248, 0.0964, 0.0971, 0.1056, 0.1248]}, "json_extract_rapidjson": {"difference": [0.0014, -0.0126, -0.0133, 0.0113, -0.0042, -0.0018, -0.0006, -0.0004, 0.0002, 0.0164, 0.0134, 0.0006, -0.0161], "newTime": [0.1648, 0.819, 0.561, 0.6015, 0.5802, 0.1613, 0.1634, 0.1647, 0.1636, 0.5822, 0.5864, 0.5618, 0.55]}, "json_extract_simdjson": {"difference": [0.0005, 0.0097, -0.0007, 0.0047, -0.0058, 0.0009, 0.0054, -0.0041, 0.0009, 0.0028, -0.0006, -0.0015, 0.0024], "newTime": [0.1282, 0.5597, 0.2459, 0.284, 0.25, 0.1293, 0.133, 0.1253, 0.1306, 0.244, 0.2575, 0.2353, 0.2383]}, "least_greatest_hits": {"difference": [-0.0007, -0.002, 0.0025], "newTime": [0.0093, 0.1592, 0.0998]}, "linear_regression": {"difference": [0.0008, 0.001, 0.0078, 0.0265, 0.0003], "newTime": [0.0346, 0.035, 0.2578, 0.401, 0.094]}, "logical_functions_large": {"difference": [-0.0034, 0.0006, -0.0033, -0.0011, 0.0078, 0.0022, 0.0015, 0.0021, 0.0005, -0.0009], "newTime": [0.2644, 0.1916, 0.9259, 0.2195, 0.4202, 0.3428, 0.3594, 0.3697, 0.3379, 0.173]}, "materialized_view_parallel_insert": {"difference": [0.0049], "newTime": [1.1794]}, "math": {"difference": [0.0008, 0.0002, -0.0008, 0.0017, 0.0002, -0.0014, -0.001, -0.0015, -0.002, 0.0034, -0.0006, 0.0005, 0.0036, 0.0039, 0.0021, -0.0013, 0.0007, -0.0012, -0.0033, 0.0012, 0.0025, 0.0, -0.0008, -0.0001, -0.0031, 0.0102, 0.0069, 0.0062, 0.0, -0.0003, 0.0006, 0.0008, 0.0074, 0.0001, -0.0002, 0.0002, -0.0035, 0.0006, 0.0092, 0.0024, 0.0156, -0.0005, 0.0081, 0.0002, 0.0065, -0.0025, 0.0027, -0.0027, 0.0014, 0.0007, 0.0033, 0.0033, -0.0012, -0.001, 0.0027, 0.0012, -0.0006, 0.0036, 0.0001, -0.0002], "newTime": [0.1033, 0.1043, 0.1015, 0.1787, 0.1779, 0.1774, 0.1559, 0.1605, 0.1619, 0.1474, 0.1479, 0.1513, 0.1948, 0.1979, 0.1973, 0.1569, 0.1604, 0.1603, 0.3374, 0.3417, 0.345, 0.1106, 0.1136, 0.118, 0.4963, 0.5783, 0.5578, 0.555, 0.6274, 0.6211, 0.371, 0.4213, 0.4467, 0.3681, 0.4682, 0.4119, 0.2428, 0.1688, 0.24, 0.4025, 0.5186, 0.477, 0.3984, 0.4223, 0.4593, 0.2327, 0.1685, 0.2238, 0.8683, 0.8799, 0.8284, 0.2101, 0.1555, 0.2015, 0.2056, 0.2681, 0.263, 0.2172, 0.1603, 0.2087]}, "merge_table_streams": {"difference": [-0.0004], "newTime": [0.0628]}, "merge_tree_huge_pk": {"difference": [0.0002, 0.0004, -0.0007, 0.0], "newTime": [0.0025, 0.0553, 0.0096, 0.0047]}, "merge_tree_many_partitions": {"difference": [0.0], "newTime": [0.0009]}, "merge_tree_many_partitions_2": {"difference": [0.0044], "newTime": [0.2033]}, "merge_tree_simple_select": {"difference": [0.0], "newTime": [0.0006]}, "mingroupby-orderbylimit1": {"difference": [0.0045, 0.0007, 0.0013, -0.0169, 0.0008, 0.0005, -0.003, 0.0016], "newTime": [0.2005, 0.1968, 0.0232, 0.0331, 0.1217, 0.3114, 0.0888, 0.4342]}, "ngram_distance": {"difference": [0.0017, 0.0, -0.0002, -0.0015, -0.0009, -0.0008, 0.001, -0.0009, 0.0004, -0.0013, 0.001, -0.0014, 0.0045, -0.0045, 0.0, -0.0008], "newTime": [0.1832, 0.1819, 0.1818, 0.2009, 0.2535, 0.2006, 0.2009, 0.2001, 0.3476, 0.3629, 0.3623, 0.331, 0.3572, 0.4995, 0.3467, 0.3495]}, "order_by_decimals": {"difference": [-0.0026, -0.0009, 0.0002, 0.0007, 0.0003], "newTime": [0.1031, 0.0695, 0.0673, 0.0702, 0.0365]}, "order_by_read_in_order": {"difference": [0.0013, 0.0011, 0.0067, -0.0004, 0.0018], "newTime": [0.1299, 0.1298, 0.401, 0.0693, 0.0627]}, "order_by_single_column": {"difference": [0.0002, -0.0005, -0.0006, 0.0027, 0.001, 0.0061, 0.0007], "newTime": [0.1013, 0.055, 0.1166, 0.1371, 0.1823, 0.3529, 0.4275]}, "parallel_insert": {"difference": [0.0166], "newTime": [1.1825]}, "pre_limit_no_sorting": {"difference": [0.0019], "newTime": [0.0669]}, "prewhere": {"difference": [-0.0034], "newTime": [0.6849]}, "random_printable_ascii": {"difference": [-0.0097, 0.0036, -0.0001, -0.0001, 0.005, -0.0007, -0.0064], "newTime": [0.1806, 0.2091, 0.0189, 0.142, 0.6587, 0.1445, 0.6861]}, "range": {"difference": [0.0, 0.0001], "newTime": [0.2796, 0.1179]}, "read_hits_with_aio": {"difference": [-0.0011, -0.0003, -0.0005, 0.003], "newTime": [0.1272, 0.171, 0.2733, 0.2542]}, "right": {"difference": [-0.0033, -0.0043], "newTime": [0.2738, 0.2983]}, "round_down": {"difference": [-0.014, -0.0004, 0.0, 0.0001, -0.0014], "newTime": [1.1836, 0.061, 0.099, 0.0906, 0.0574]}, "round_methods": {"difference": [0.0001, -0.0002, -0.0002, -0.0001, -0.0001, -0.0002, -0.0001, -0.0003, 0.0001, 0.0003, -0.0002, -0.0001, -0.0002, 0.0003, 0.0001], "newTime": [0.0147, 0.0028, 0.0037, 0.0148, 0.003, 0.0035, 0.015, 0.0035, 0.0036, 0.0163, 0.0028, 0.004, 0.0138, 0.003, 0.0039]}, "scalar": {"difference": [0.0], "newTime": [0.0636]}, "set_hits": {"difference": [0.0001, -0.0004, -0.0012, 0.0008, 0.0008, -0.0002], "newTime": [0.0694, 0.0442, 0.2775, 0.0905, 0.3262, 0.1418]}, "set_index": {"difference": [-0.0004, 0.0001, -0.0005, 0.0007, 0.0012], "newTime": [0.0166, 0.0062, 0.0987, 0.0298, 0.0496]}, "simple_join_query": {"difference": [-0.0077, -0.0052, -0.0049, 0.0094], "newTime": [0.5778, 0.572, 0.5678, 0.5896]}, "slices_hits": {"difference": [0.0001, 0.001], "newTime": [0.0116, 0.0449]}, "sort": {"difference": [-0.0009, 0.001, 0.0081, 0.0051, -0.0021, 0.0052, 0.0017, -0.0036, -0.0013, -0.0018], "newTime": [0.2179, 0.2428, 0.297, 0.184, 0.1781, 0.2368, 0.2204, 0.566, 0.6195, 0.18]}, "string_join": {"difference": [0.0097, -0.0074, -0.0034], "newTime": [0.3693, 0.3136, 0.1973]}, "string_set": {"difference": [-0.0137, -0.0012, -0.0126, -0.0104, 0.003, 0.0028, -0.0029], "newTime": [0.2703, 0.2157, 0.3379, 0.2545, 0.159, 0.196, 0.1386]}, "string_sort": {"difference": [0.0003, 0.0049, -0.0004, -0.0016, -0.0043, 0.0059, -0.002, 0.056, -0.003, 0.0077, 0.001, 0.0112, 0.0008, 0.012, 0.0004, 0.0015, 0.0019, 0.0016, 0.0002, 0.0017, -0.0017, -0.0627, 0.0004, -0.0001, -0.0036, 0.0072, 0.0007, 0.0087, -0.0018, -0.0117, -0.0013, 0.0184, -0.002, 0.01, -0.0011, -0.002, -0.0013, -0.0386, 0.0026, 0.0528, -0.0037, 0.0532, 0.0004, 0.0064, 0.0076, -0.0074, 0.0012, 0.004, -0.0012, 0.0395, -0.0005, -0.0038, -0.0015, 0.0008, 0.0004, -0.0476, -0.0038, -0.0086, 0.0005, 0.0356, -0.0034, 0.0114, 0.0137, -0.0209, 0.0013, 0.0431, -0.0001, 0.0248, -0.0066, 0.0246, 0.0007, -0.0134, -0.0026, -0.0145, -0.0032, -0.0316, 0.015, 0.0134, -0.0035, -0.011, -0.0067, -0.0064, -0.0015, 0.0074], "newTime": [0.0265, 0.1481, 0.0269, 0.1438, 0.09, 0.4438, 0.2142, 1.1286, 0.1071, 0.5695, 0.2453, 1.0079, 0.2707, 0.9865, 0.0427, 0.2365, 0.0841, 0.4682, 0.0422, 0.237, 0.2314, 1.098, 0.1146, 0.6768, 0.2564, 1.0741, 0.2841, 1.0287, 0.157, 0.7974, 0.2056, 1.0438, 0.2145, 1.0486, 0.1593, 0.8116, 0.2382, 1.0687, 0.4713, 1.5816, 0.4593, 1.4941, 0.054, 0.29, 0.1127, 0.4938, 0.1202, 0.6192, 0.2489, 1.009, 0.0549, 0.2917, 0.2805, 1.032, 0.3056, 1.0147, 0.1876, 0.763, 0.2373, 0.9798, 0.2519, 0.9934, 0.4719, 1.5448, 0.2763, 1.0902, 0.1918, 0.7979, 0.5338, 1.5007, 0.2161, 0.7023, 0.2637, 0.8926, 0.276, 0.9294, 0.483, 1.396, 0.2879, 0.9798, 0.5436, 1.3692, 0.2184, 0.7283]}, "sum_map": {"difference": [-0.0016, 0.0031, 0.0013, 0.0195], "newTime": [0.0611, 0.6026, 0.0627, 0.6239]}, "synthetic_hardware_benchmark": {"difference": [-0.0003, -0.0005, 0.0015, 0.0002, 0.0023, 0.0014, 0.0002, 0.0022, -0.0046, -0.0019, 0.0002, 0.0003, -0.0003, 0.001, 0.0008, 0.001, 0.0054, 0.001, 0.0001, -0.0006, 0.0017, 0.0051, 0.0074, 0.094, 0.0089, -0.0142], "newTime": [0.0534, 0.0397, 0.0599, 0.041, 0.1726, 0.1521, 0.1357, 0.163, 0.1492, 0.7486, 0.1011, 0.0895, 0.0846, 0.0985, 0.0915, 0.4279, 0.2984, 0.3415, 0.2058, 0.0992, 0.172, 0.3687, 0.5, 1.7747, 0.8461, 1.69]}, "trim_numbers": {"difference": [-0.0036, -0.0004, -0.0056, 0.0014, 0.0069, -0.0034], "newTime": [0.118, 0.1182, 1.4119, 0.5227, 1.1059, 0.1257]}, "trim_urls": {"difference": [0.0074, -0.0035, -0.0067, 0.0058, 0.0096, 0.006], "newTime": [0.3825, 0.3748, 1.8548, 0.5564, 0.8338, 0.3792]}, "trim_whitespace": {"difference": [-0.0014, -0.0002, 0.0026, 0.0001, -0.0009, -0.0003], "newTime": [0.1051, 0.066, 0.0444, 0.1076, 0.103, 0.1029]}, "uniq": {"difference": [0.0, -0.001, 0.0007, -0.0026, -0.0004, 0.0009, -0.0009, 0.0005, -0.0001, -0.0233, -0.0003, 0.0003, 0.0006, 0.0011, -0.0014, 0.0003, -0.004, -0.0136, 0.002, -0.0006, -0.003, -0.0145, 0.0032, -0.0015, 0.0107, -0.0002, -0.0009, -0.009, -0.0006, -0.006, 0.0063, 0.0021, -0.0001, 0.0001, -0.0009, 0.0004, 0.0008, 0.0002, 0.0001, -0.0002, -0.0008, -0.0032, 0.0013, 0.0, 0.0013, -0.0002, 0.0012, 0.0006, -0.0004, 0.001, -0.0008, -0.0007, -0.0001, 0.001, 0.0011, 0.0006, -0.0018, -0.0185, 0.0011, -0.0003, -0.0005, 0.0003, -0.0003, 0.0001, -0.0064, -0.0007, 0.0033, -0.0057, 0.0027, -0.0056, 0.0038, 0.0028, 0.0077, -0.001, 0.0025, -0.0031, -0.0031, -0.0044, 0.0019, 0.0016], "newTime": [0.0199, 0.0704, 0.0502, 0.0499, 0.0514, 0.0556, 0.0594, 0.0731, 0.0946, 1.9733, 0.0438, 0.0217, 0.024, 0.023, 0.0213, 0.0214, 0.2629, 0.4145, 0.384, 0.3874, 0.3798, 0.3754, 0.3857, 0.3945, 0.3831, 0.5066, 0.4278, 0.3233, 1.0149, 0.3979, 0.3045, 0.3062, 0.0579, 0.1743, 0.1093, 0.1197, 0.1292, 0.141, 0.1559, 0.1662, 0.189, 0.3811, 0.1157, 0.0572, 0.0689, 0.0603, 0.0573, 0.0585, 0.042, 0.2258, 0.0808, 0.0937, 0.1065, 0.1246, 0.1498, 0.19, 0.2598, 1.8176, 0.087, 0.0408, 0.0405, 0.0416, 0.0401, 0.0405, 0.2708, 0.3432, 0.3396, 0.3276, 0.336, 0.3307, 0.3389, 0.3497, 0.3404, 1.3009, 0.3413, 0.2921, 0.5216, 0.3134, 0.2851, 0.2827]}, "url_hits": {"difference": [-0.0752, 0.0186, -0.0031, 0.0012, 0.0012, -0.003, 0.0066, -0.0034, 0.0001, -0.0038, -0.0028, -0.0007, 0.0011, -0.001, -0.0034, 0.0, 0.002, -0.0064, 0.0031], "newTime": [1.036, 0.7712, 0.3492, 0.3389, 0.3898, 0.4182, 0.4024, 0.32, 0.3613, 0.4312, 0.4517, 0.3862, 0.3044, 0.3114, 0.4377, 0.2756, 0.3895, 0.3941, 0.3157]}, "vectorize_aggregation_combinators": {"difference": [-0.0003, -0.0006, -0.0006, 0.0036, 0.0027], "newTime": [0.5132, 0.0323, 0.0268, 0.3424, 0.3192]}, "visit_param_extract_raw": {"difference": [0.0012, 0.0062, -0.0001], "newTime": [0.0943, 0.7132, 0.1991]}, "website": {"difference": [-0.0032, -0.0006, -0.006, -0.0021, -0.0001, 0.0037, 0.0063, 0.0005, 0.0001, 0.0004, -0.0013, 0.0007, -0.0001, -0.0011, 0.0005, -0.0011, 0.0027, 0.0004, -0.0009, 0.0026, 0.0004, 0.005, -0.0022, -0.0042, 0.0035, -0.0001, -0.0003, -0.001, 0.0, 0.0044, -0.0029, -0.0078, 0.0022, 0.0012, 0.0008, -0.0202, 0.0009, -0.0004, -0.0007, 0.0027, 0.01, 0.0031, 0.0019, 0.0061, -0.0003, 0.0063, 0.0007, 0.0024, 0.003, -0.0016, -0.0002, -0.0001, -0.0059, 0.0, -0.0006, -0.0071, -0.003, -0.0029, 0.0002, 0.0, -0.0001, -0.0004, 0.0359, 0.0054, -0.0004, -0.0002, 0.0003, -0.0002, -0.0017, -0.0005, 0.0005, -0.0003], "newTime": [0.4449, 0.2084, 1.3425, 0.1556, 0.006, 0.4726, 0.3667, 0.0467, 0.085, 0.0234, 0.0751, 0.2025, 0.037, 0.1766, 0.0327, 0.277, 0.3533, 0.0564, 0.0973, 0.1004, 0.0765, 0.762, 0.121, 0.3008, 0.2585, 0.3388, 0.0538, 0.0314, 0.0456, 0.1595, 0.1911, 0.0751, 0.0262, 0.0915, 0.0318, 1.3408, 0.1594, 0.0105, 0.012, 0.6094, 1.0084, 0.0585, 0.096, 0.4131, 0.0448, 1.7114, 0.1955, 0.3974, 0.2398, 0.0622, 0.0088, 0.0009, 0.2723, 0.0009, 0.0061, 0.0129, 0.4509, 0.0822, 0.0107, 0.0045, 0.0165, 0.0065, 0.9232, 0.1494, 0.0192, 0.0067, 0.003, 0.0097, 0.1255, 0.0423, 0.0698, 0.0418]}}, "reportErrors": []}
