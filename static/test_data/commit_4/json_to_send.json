{"commits": {"leftCommit": {"commit": "4ecc86becab4570e9bff67075f650e688da2e7d5 (HEAD -> master)", "merge": "d94fc263 da7eeb31", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Tue Apr 21 02:30:17 2020 +0300", "info": "Merge pull request #9950 from ClickHouse/aku/literal-columns\nCreate unique columns for literals"}, "rightCommit": {"commit": "08397efa64a6b11b514b1f82a14fac989f02b921 (pr/merge)", "author": "alexey-milovidov <milovidov@yandex-team.ru>", "date": "Tue Apr 21 02:57:07 2020 +0300", "info": "Added a test from Alexey Ilyukhov @livace\nReal tested commit is:\nMerge 750b73084a5adf54a30a7f0ed07cba879c0ecc2d into 4ecc86becab4570e9bff67075f650e688da2e7d5", "merge": "4ecc86be 750b7308"}}, "changes": [{"oldTime": 0.2007, "newTime": 0.2415, "relativeDifference": 0.203, "quantiles": [0.153, 0.166, 0.191, 0.198], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.0507, "newTime": 0.0624, "relativeDifference": 0.23, "quantiles": [0.004, 0.037, 0.14, 0.158], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}], "unstableQueries": [{"oldTime": 0.0342, "newTime": 0.0462, "relativeDifference": 0.35, "quantiles": [0.281, 0.348, 0.499, 0.538], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_111111_tuple\\n         group by key format Null;\\n    "}, {"oldTime": 0.9237, "newTime": 0.8652, "relativeDifference": -0.064, "quantiles": [0.036, 0.123, 0.216, 0.247], "testName": "if_array_string", "query": "SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\\'https://github.com/ClickHouse/ClickHouse/pull/1070\\', \\'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\\']) : emptyArrayString())"}, {"oldTime": 0.1216, "newTime": 0.1062, "relativeDifference": -0.127, "quantiles": [0.019, 0.059, 0.162, 0.186], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_111111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.1019, "newTime": 0.1162, "relativeDifference": 0.14, "quantiles": [0.015, 0.061, 0.142, 0.179], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0869, "newTime": 0.0896, "relativeDifference": 0.031, "quantiles": [0.006, 0.019, 0.124, 0.15], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, value\\n         FROM mingroupby_orderbylimit1_11111_key_value\\n         order by key, value limit 1 by key format Null;\\n     "}, {"oldTime": 0.0283, "newTime": 0.0284, "relativeDifference": 0.003, "quantiles": [0.0, 0.018, 0.118, 0.132], "testName": "codecs_float_insert", "query": "INSERT INTO codec_rnd_Float64_ZSTD (n) SELECT (intHash64(number) - 4294967295)/pi() FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1"}, {"oldTime": 0.1084, "newTime": 0.1084, "relativeDifference": 0.0, "quantiles": [0.0, 0.014, 0.116, 0.123], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0306, "newTime": 0.0308, "relativeDifference": 0.006, "quantiles": [0.006, 0.034, 0.111, 0.129], "testName": "website", "query": "SELECT Title, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(Title) GROUP BY Title ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.0466, "newTime": 0.0425, "relativeDifference": -0.088, "quantiles": [0.02, 0.06, 0.111, 0.116], "testName": "website", "query": "SELECT UserID, count() FROM hits_10m_single GROUP BY UserID ORDER BY count() DESC LIMIT 10"}, {"oldTime": 0.1429, "newTime": 0.1525, "relativeDifference": 0.067, "quantiles": [0.013, 0.037, 0.11, 0.131], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.1177, "newTime": 0.1102, "relativeDifference": -0.064, "quantiles": [0.002, 0.042, 0.109, 0.124], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.2906, "newTime": 0.3276, "relativeDifference": 0.127, "quantiles": [0.01, 0.079, 0.109, 0.118], "testName": "synthetic_hardware_benchmark", "query": "SELECT count() FROM zeros(1000000) WHERE NOT ignore(materialize(\\'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\\') AS s, concat(s,s,s,s,s,s,s,s,s,s) AS t, concat(t,t,t,t,t,t,t,t,t,t) AS u) SETTINGS max_block_size = 1000"}, {"oldTime": 0.1185, "newTime": 0.1108, "relativeDifference": -0.065, "quantiles": [0.04, 0.057, 0.108, 0.123], "testName": "codecs_int_insert", "query": "INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0358, "newTime": 0.0321, "relativeDifference": -0.104, "quantiles": [0.003, 0.005, 0.104, 0.113], "testName": "vectorize_aggregation_combinators", "query": "SELECT countMerge(v) FROM (SELECT countState() v FROM zeros(1000000000)) FORMAT Null"}, {"oldTime": 0.0454, "newTime": 0.0434, "relativeDifference": -0.045, "quantiles": [0.008, 0.026, 0.102, 0.119], "testName": "jit_large_requests", "query": "\\n        SELECT\\n            COUNT()\\n        FROM\\n            jit_test\\n        WHERE\\n            NOT ignore(a / b + c / d + e / f + g / h + i / j)\\n        SETTINGS\\n            compile_expressions = 0;\\n    "}, {"oldTime": 0.7068, "newTime": 0.7914, "relativeDifference": 0.119, "quantiles": [0.002, 0.056, 0.1, 0.109], "testName": "visit_param_extract_raw", "query": "SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\\'{\"myparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\",\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}}\\'), \\'myparam\\'))"}, {"oldTime": 0.1308, "newTime": 0.1312, "relativeDifference": 0.003, "quantiles": [0.002, 0.034, 0.098, 0.11], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0788, "newTime": 0.0773, "relativeDifference": -0.02, "quantiles": [0.004, 0.03, 0.096, 0.194], "testName": "website", "query": "SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \\'2013-07-01\\' AND EventDate <= \\'2013-07-31\\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10"}, {"oldTime": 0.964, "newTime": 1.036, "relativeDifference": 0.074, "quantiles": [0.02, 0.047, 0.094, 0.105], "testName": "url_hits", "query": "SELECT count() FROM hits_100m_single WHERE NOT ignore(URLHierarchy(URL))"}, {"oldTime": 0.1026, "newTime": 0.0972, "relativeDifference": -0.053, "quantiles": [0.004, 0.047, 0.09, 0.112], "testName": "cpu_synthetic", "query": "SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single"}, {"oldTime": 0.1114, "newTime": 0.1048, "relativeDifference": -0.06, "quantiles": [0.003, 0.044, 0.09, 0.115], "testName": "codecs_int_insert", "query": "INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.029, "newTime": 0.0275, "relativeDifference": -0.052, "quantiles": [0.007, 0.051, 0.085, 0.105], "testName": "codecs_float_insert", "query": "INSERT INTO codec_seq_Float64_ZSTD (n) SELECT number/pi() FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1"}, {"oldTime": 0.4216, "newTime": 0.472, "relativeDifference": 0.119, "quantiles": [0.003, 0.056, 0.083, 0.101], "testName": "math", "query": "SELECT count() FROM numbers(100000000) WHERE NOT ignore(exp2(toFloat32(number)))"}, {"oldTime": 0.0663, "newTime": 0.068, "relativeDifference": 0.025, "quantiles": [0.008, 0.027, 0.081, 0.11], "testName": "array_element", "query": "SELECT count() FROM numbers(10000000) WHERE NOT ignore([[1], [2]][number % 2 + 2])"}, {"oldTime": 0.1346, "newTime": 0.1242, "relativeDifference": -0.078, "quantiles": [0.014, 0.028, 0.08, 0.103], "testName": "codecs_int_insert", "query": "INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1"}, {"oldTime": 0.0688, "newTime": 0.0698, "relativeDifference": 0.014, "quantiles": [0.0, 0.025, 0.076, 0.101], "testName": "trim_whitespace", "query": "SELECT replaceRegexpOne(value, \\' *$\\', \\'\\') FROM whitespaces LIMIT 10000000 FORMAT Null"}, {"oldTime": 0.2466, "newTime": 0.253, "relativeDifference": 0.025, "quantiles": [0.001, 0.015, 0.045, 0.101], "testName": "json_extract_simdjson", "query": "SELECT \\'simdjson-13\\', count() FROM zeros(1000000) WHERE NOT ignore(JSONExtractBool(materialize(\\'{\"sparam\":{\"nested_1\":\"test_string\",\"nested_2\":\"test_2\"}, \"nparam\":8495, \"fparam\":{\"nested_1\":91.15,\"nested_2\":[334, 89.05, 1000.01]}, \"bparam\":false}\\'), \\'bparam\\'))"}, {"oldTime": 0.1952, "newTime": 0.201, "relativeDifference": 0.029, "quantiles": [0.009, 0.021, 0.043, 0.111], "testName": "mingroupby-orderbylimit1", "query": "\\n         SELECT key, min(value)\\n         FROM mingroupby_orderbylimit1_1111111_key_value\\n         group by key format Null;\\n    "}], "runErrors": [], "skipped": [{"testName": "IPv4", "reason": "Marked as broken (see compare.sh)"}, {"testName": "IPv6", "reason": "Marked as broken (see compare.sh)"}, {"testName": "modulo", "reason": "Marked as broken (see compare.sh)"}, {"testName": "parse_engine_file", "reason": "Marked as broken (see compare.sh)"}, {"testName": "number_formatting_formats", "reason": "Marked as broken (see compare.sh)"}, {"testName": "select_format", "reason": "Marked as broken (see compare.sh)"}, {"testName": "arithmetic", "reason": "Marked as broken (see compare.sh)"}, {"testName": "cryptographic_hashes", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_medium", "reason": "Marked as broken (see compare.sh)"}, {"testName": "logical_functions_small", "reason": "Marked as broken (see compare.sh)"}, {"testName": "agg_functions_min_max_any", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "columns_hashing", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "date_time", "reason": "Test is tagged as long."}, {"testName": "float_formatting", "reason": "Test is tagged as long."}, {"testName": "float_parsing", "reason": "Test is tagged as long."}, {"testName": "if_to_multiif", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "insert_values_with_expressions", "reason": "clickhouse_driver.errors.ServerException: Code: 107."}, {"testName": "leftpad", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "nyc_taxi", "reason": "clickhouse_driver.errors.ServerException: Code: 60."}, {"testName": "set", "reason": "Test is tagged as long."}], "badTests": [{"testName": "codecs_int_insert", "unstable": 8.0, "changedPerf": 1.0, "total": 9.0}, {"testName": "mingroupby-orderbylimit1", "unstable": 4.0, "changedPerf": 0.0, "total": 4.0}, {"testName": "website", "unstable": 3.0, "changedPerf": 0.0, "total": 3.0}, {"testName": "codecs_float_insert", "unstable": 2.0, "changedPerf": 0.0, "total": 2.0}, {"testName": "visit_param_extract_raw", "unstable": 1.0, "changedPerf": 1.0, "total": 2.0}, {"testName": "math", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "url_hits", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "if_array_string", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "array_element", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "cpu_synthetic", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "trim_whitespace", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "json_extract_simdjson", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "jit_large_requests", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "synthetic_hardware_benchmark", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}, {"testName": "vectorize_aggregation_combinators", "unstable": 1.0, "changedPerf": 0.0, "total": 1.0}], "testTimes": [{"testName": "parallel_insert", "wallClockTime": 28.777, "clientTime": 25.821, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.821, "avgWallClockTime": 28.777, "shortestQuery": 25.821}, {"testName": "materialized_view_parallel_insert", "wallClockTime": 28.504, "clientTime": 25.551, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 25.551, "avgWallClockTime": 28.503, "shortestQuery": 25.551}, {"testName": "simple_join_query", "wallClockTime": 80.192, "clientTime": 52.023, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.175, "avgWallClockTime": 20.048, "shortestQuery": 12.903}, {"testName": "general_purpose_hashes", "wallClockTime": 1457.38, "clientTime": 1335.883, "total": 78.0, "ignoredQueries": 0.0, "longestQuery": 37.974, "avgWallClockTime": 18.684, "shortestQuery": 3.535}, {"testName": "empty_string_serialization", "wallClockTime": 17.859, "clientTime": 16.207, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 16.207, "avgWallClockTime": 17.858, "shortestQuery": 16.207}, {"testName": "trim_urls", "wallClockTime": 105.62, "clientTime": 96.725, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 41.203, "avgWallClockTime": 17.603, "shortestQuery": 8.129}, {"testName": "array_fill", "wallClockTime": 103.044, "clientTime": 94.363, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 26.343, "avgWallClockTime": 17.173, "shortestQuery": 7.166}, {"testName": "group_array_moving_sum", "wallClockTime": 199.991, "clientTime": 147.139, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 19.875, "avgWallClockTime": 16.665, "shortestQuery": 6.704}, {"testName": "prewhere", "wallClockTime": 16.403, "clientTime": 14.918, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.918, "avgWallClockTime": 16.402, "shortestQuery": 14.918}, {"testName": "first_significant_subdomain", "wallClockTime": 15.571, "clientTime": 14.16, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 14.16, "avgWallClockTime": 15.571, "shortestQuery": 14.16}, {"testName": "constant_column_search", "wallClockTime": 400.45, "clientTime": 366.472, "total": 28.0, "ignoredQueries": 0.0, "longestQuery": 34.272, "avgWallClockTime": 14.301, "shortestQuery": 4.85}, {"testName": "trim_numbers", "wallClockTime": 80.796, "clientTime": 73.91, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 30.337, "avgWallClockTime": 13.465, "shortestQuery": 2.567}, {"testName": "string_sort", "wallClockTime": 1102.115, "clientTime": 1010.16, "total": 84.0, "ignoredQueries": 0.0, "longestQuery": 35.073, "avgWallClockTime": 13.12, "shortestQuery": 0.583}, {"testName": "and_function", "wallClockTime": 25.102, "clientTime": 22.927, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 20.941, "avgWallClockTime": 12.55, "shortestQuery": 1.986}, {"testName": "merge_tree_many_partitions_2", "wallClockTime": 12.053, "clientTime": 4.443, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 4.443, "avgWallClockTime": 12.053, "shortestQuery": 4.443}, {"testName": "constant_column_comparison", "wallClockTime": 219.697, "clientTime": 201.235, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 14.264, "avgWallClockTime": 10.461, "shortestQuery": 3.707}, {"testName": "json_extract_rapidjson", "wallClockTime": 135.0, "clientTime": 123.595, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 18.004, "avgWallClockTime": 10.384, "shortestQuery": 3.536}, {"testName": "bloom_filter", "wallClockTime": 9.872, "clientTime": 8.894, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 8.894, "avgWallClockTime": 9.871, "shortestQuery": 8.894}, {"testName": "url_hits", "wallClockTime": 193.062, "clientTime": 183.768, "total": 20.0, "ignoredQueries": 0.0, "longestQuery": 22.379, "avgWallClockTime": 9.653, "shortestQuery": 5.855}, {"testName": "joins_in_memory", "wallClockTime": 327.417, "clientTime": 450.539, "total": 34.0, "ignoredQueries": 10.0, "longestQuery": 21.324, "avgWallClockTime": 9.629, "shortestQuery": 17.574}, {"testName": "array_reduce", "wallClockTime": 57.71, "clientTime": 52.759, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 13.543, "avgWallClockTime": 9.618, "shortestQuery": 3.897}, {"testName": "general_purpose_hashes_on_UUID", "wallClockTime": 616.421, "clientTime": 564.764, "total": 66.0, "ignoredQueries": 11.0, "longestQuery": 27.615, "avgWallClockTime": 9.339, "shortestQuery": 0.888}, {"testName": "base64_hits", "wallClockTime": 107.301, "clientTime": 98.255, "total": 12.0, "ignoredQueries": 0.0, "longestQuery": 17.722, "avgWallClockTime": 8.941, "shortestQuery": 0.797}, {"testName": "if_array_string", "wallClockTime": 53.156, "clientTime": 48.489, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 20.806, "avgWallClockTime": 8.859, "shortestQuery": 4.131}, {"testName": "sum_map", "wallClockTime": 34.49, "clientTime": 29.494, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 13.445, "avgWallClockTime": 8.622, "shortestQuery": 1.334}, {"testName": "logical_functions_large", "wallClockTime": 85.589, "clientTime": 78.263, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 20.139, "avgWallClockTime": 8.558, "shortestQuery": 3.856}, {"testName": "string_join", "wallClockTime": 25.574, "clientTime": 19.346, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 8.19, "avgWallClockTime": 8.524, "shortestQuery": 4.285}, {"testName": "visit_param_extract_raw", "wallClockTime": 25.506, "clientTime": 23.28, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 16.358, "avgWallClockTime": 8.502, "shortestQuery": 2.068}, {"testName": "synthetic_hardware_benchmark", "wallClockTime": 209.885, "clientTime": 192.331, "total": 26.0, "ignoredQueries": 0.0, "longestQuery": 36.774, "avgWallClockTime": 8.072, "shortestQuery": 0.894}, {"testName": "column_column_comparison", "wallClockTime": 140.756, "clientTime": 128.979, "total": 19.0, "ignoredQueries": 7.0, "longestQuery": 26.37, "avgWallClockTime": 7.408, "shortestQuery": 5.13}, {"testName": "math", "wallClockTime": 443.106, "clientTime": 406.044, "total": 60.0, "ignoredQueries": 0.0, "longestQuery": 19.346, "avgWallClockTime": 7.385, "shortestQuery": 2.229}, {"testName": "round_down", "wallClockTime": 35.579, "clientTime": 32.481, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 25.671, "avgWallClockTime": 7.115, "shortestQuery": 1.305}, {"testName": "sort", "wallClockTime": 71.06, "clientTime": 64.171, "total": 10.0, "ignoredQueries": 0.0, "longestQuery": 13.462, "avgWallClockTime": 7.105, "shortestQuery": 3.883}, {"testName": "array_join", "wallClockTime": 42.56, "clientTime": 38.876, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 9.251, "avgWallClockTime": 7.093, "shortestQuery": 2.36}, {"testName": "random_printable_ascii", "wallClockTime": 48.947, "clientTime": 44.719, "total": 7.0, "ignoredQueries": 1.0, "longestQuery": 15.04, "avgWallClockTime": 6.992, "shortestQuery": 2.933}, {"testName": "right", "wallClockTime": 13.87, "clientTime": 12.617, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 6.712, "avgWallClockTime": 6.934, "shortestQuery": 5.904}, {"testName": "cpu_synthetic", "wallClockTime": 321.768, "clientTime": 307.909, "total": 47.0, "ignoredQueries": 7.0, "longestQuery": 42.852, "avgWallClockTime": 6.846, "shortestQuery": 1.09}, {"testName": "ngram_distance", "wallClockTime": 109.194, "clientTime": 99.981, "total": 16.0, "ignoredQueries": 0.0, "longestQuery": 11.013, "avgWallClockTime": 6.824, "shortestQuery": 4.012}, {"testName": "vectorize_aggregation_combinators", "wallClockTime": 33.719, "clientTime": 27.166, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 11.323, "avgWallClockTime": 6.743, "shortestQuery": 0.598}, {"testName": "collations", "wallClockTime": 13.245, "clientTime": 12.049, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 10.934, "avgWallClockTime": 6.622, "shortestQuery": 1.114}, {"testName": "merge_tree_simple_select", "wallClockTime": 6.408, "clientTime": 0.021, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 6.407, "shortestQuery": 0.0}, {"testName": "uniq", "wallClockTime": 506.446, "clientTime": 463.152, "total": 80.0, "ignoredQueries": 6.0, "longestQuery": 43.119, "avgWallClockTime": 6.33, "shortestQuery": 0.884}, {"testName": "string_set", "wallClockTime": 42.461, "clientTime": 34.859, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 7.926, "avgWallClockTime": 6.065, "shortestQuery": 3.066}, {"testName": "merge_tree_many_partitions", "wallClockTime": 5.886, "clientTime": 0.028, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 5.886, "shortestQuery": 0.0}, {"testName": "base64", "wallClockTime": 50.167, "clientTime": 45.904, "total": 9.0, "ignoredQueries": 0.0, "longestQuery": 8.933, "avgWallClockTime": 5.574, "shortestQuery": 1.997}, {"testName": "json_extract_simdjson", "wallClockTime": 70.91, "clientTime": 64.968, "total": 13.0, "ignoredQueries": 0.0, "longestQuery": 12.333, "avgWallClockTime": 5.454, "shortestQuery": 2.755}, {"testName": "website", "wallClockTime": 377.733, "clientTime": 351.64, "total": 73.0, "ignoredQueries": 17.0, "longestQuery": 37.029, "avgWallClockTime": 5.174, "shortestQuery": 0.575}, {"testName": "read_hits_with_aio", "wallClockTime": 19.593, "clientTime": 17.868, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 5.961, "avgWallClockTime": 4.898, "shortestQuery": 2.669}, {"testName": "order_by_single_column", "wallClockTime": 32.817, "clientTime": 30.003, "total": 7.0, "ignoredQueries": 0.0, "longestQuery": 9.321, "avgWallClockTime": 4.688, "shortestQuery": 1.2}, {"testName": "range", "wallClockTime": 9.303, "clientTime": 8.423, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.833, "avgWallClockTime": 4.651, "shortestQuery": 2.589}, {"testName": "inserts_arrays_lowcardinality", "wallClockTime": 9.21, "clientTime": 7.347, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 5.667, "avgWallClockTime": 4.605, "shortestQuery": 1.68}, {"testName": "merge_tree_huge_pk", "wallClockTime": 18.223, "clientTime": 1.774, "total": 4.0, "ignoredQueries": 3.0, "longestQuery": 1.277, "avgWallClockTime": 4.555, "shortestQuery": 1.277}, {"testName": "mingroupby-orderbylimit1", "wallClockTime": 35.181, "clientTime": 30.893, "total": 8.0, "ignoredQueries": 1.0, "longestQuery": 9.458, "avgWallClockTime": 4.397, "shortestQuery": 0.92}, {"testName": "codecs_int_insert", "wallClockTime": 89.959, "clientTime": 79.718, "total": 21.0, "ignoredQueries": 0.0, "longestQuery": 7.636, "avgWallClockTime": 4.283, "shortestQuery": 1.242}, {"testName": "entropy", "wallClockTime": 37.546, "clientTime": 34.218, "total": 9.0, "ignoredQueries": 3.0, "longestQuery": 14.528, "avgWallClockTime": 4.171, "shortestQuery": 0.749}, {"testName": "scalar", "wallClockTime": 4.026, "clientTime": 1.355, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.355, "avgWallClockTime": 4.026, "shortestQuery": 1.355}, {"testName": "trim_whitespace", "wallClockTime": 23.814, "clientTime": 11.865, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 2.408, "avgWallClockTime": 3.968, "shortestQuery": 0.98}, {"testName": "order_by_read_in_order", "wallClockTime": 19.625, "clientTime": 17.524, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.871, "avgWallClockTime": 3.925, "shortestQuery": 1.364}, {"testName": "linear_regression", "wallClockTime": 19.057, "clientTime": 17.391, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 8.237, "avgWallClockTime": 3.811, "shortestQuery": 0.724}, {"testName": "set_hits", "wallClockTime": 22.779, "clientTime": 20.778, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 7.107, "avgWallClockTime": 3.796, "shortestQuery": 0.983}, {"testName": "array_auc", "wallClockTime": 3.705, "clientTime": 3.29, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 3.29, "avgWallClockTime": 3.704, "shortestQuery": 3.29}, {"testName": "functions_geo", "wallClockTime": 20.097, "clientTime": 18.331, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 5.572, "avgWallClockTime": 3.349, "shortestQuery": 1.7}, {"testName": "set_index", "wallClockTime": 15.869, "clientTime": 4.565, "total": 5.0, "ignoredQueries": 2.0, "longestQuery": 2.194, "avgWallClockTime": 3.173, "shortestQuery": 0.663}, {"testName": "if_array_num", "wallClockTime": 17.716, "clientTime": 16.128, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.534, "avgWallClockTime": 2.952, "shortestQuery": 1.841}, {"testName": "bitCount", "wallClockTime": 16.409, "clientTime": 14.95, "total": 6.0, "ignoredQueries": 0.0, "longestQuery": 3.698, "avgWallClockTime": 2.734, "shortestQuery": 1.678}, {"testName": "decimal_aggregates", "wallClockTime": 56.381, "clientTime": 51.444, "total": 21.0, "ignoredQueries": 6.0, "longestQuery": 5.292, "avgWallClockTime": 2.684, "shortestQuery": 0.85}, {"testName": "h3", "wallClockTime": 2.632, "clientTime": 2.317, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 2.317, "avgWallClockTime": 2.631, "shortestQuery": 2.317}, {"testName": "date_time_64", "wallClockTime": 41.889, "clientTime": 30.97, "total": 18.0, "ignoredQueries": 4.0, "longestQuery": 6.674, "avgWallClockTime": 2.327, "shortestQuery": 0.579}, {"testName": "least_greatest_hits", "wallClockTime": 6.632, "clientTime": 6.008, "total": 3.0, "ignoredQueries": 1.0, "longestQuery": 3.66, "avgWallClockTime": 2.21, "shortestQuery": 2.118}, {"testName": "empty_string_deserialization", "wallClockTime": 2.058, "clientTime": 0.395, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 2.058, "shortestQuery": 0.0}, {"testName": "distributed_aggregation", "wallClockTime": 7.683, "clientTime": 6.939, "total": 4.0, "ignoredQueries": 0.0, "longestQuery": 1.778, "avgWallClockTime": 1.92, "shortestQuery": 1.71}, {"testName": "pre_limit_no_sorting", "wallClockTime": 1.75, "clientTime": 1.488, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.488, "avgWallClockTime": 1.75, "shortestQuery": 1.488}, {"testName": "jit_large_requests", "wallClockTime": 3.452, "clientTime": 1.503, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.947, "avgWallClockTime": 1.725, "shortestQuery": 0.947}, {"testName": "merge_table_streams", "wallClockTime": 1.712, "clientTime": 1.361, "total": 1.0, "ignoredQueries": 0.0, "longestQuery": 1.361, "avgWallClockTime": 1.712, "shortestQuery": 1.361}, {"testName": "order_by_decimals", "wallClockTime": 8.508, "clientTime": 7.701, "total": 5.0, "ignoredQueries": 0.0, "longestQuery": 2.31, "avgWallClockTime": 1.701, "shortestQuery": 0.819}, {"testName": "array_element", "wallClockTime": 4.533, "clientTime": 4.065, "total": 3.0, "ignoredQueries": 0.0, "longestQuery": 1.486, "avgWallClockTime": 1.51, "shortestQuery": 1.109}, {"testName": "int_parsing", "wallClockTime": 101.595, "clientTime": 93.0, "total": 83.0, "ignoredQueries": 0.0, "longestQuery": 4.079, "avgWallClockTime": 1.224, "shortestQuery": 0.617}, {"testName": "basename", "wallClockTime": 2.175, "clientTime": 1.882, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 1.014, "avgWallClockTime": 1.087, "shortestQuery": 0.867}, {"testName": "if_string_hits", "wallClockTime": 4.139, "clientTime": 3.691, "total": 4.0, "ignoredQueries": 2.0, "longestQuery": 1.988, "avgWallClockTime": 1.034, "shortestQuery": 1.029}, {"testName": "bit_operations_fixed_string_numbers", "wallClockTime": 1.811, "clientTime": 1.566, "total": 2.0, "ignoredQueries": 0.0, "longestQuery": 0.94, "avgWallClockTime": 0.905, "shortestQuery": 0.625}, {"testName": "concat_hits", "wallClockTime": 23.434, "clientTime": 21.409, "total": 26.0, "ignoredQueries": 14.0, "longestQuery": 1.809, "avgWallClockTime": 0.901, "shortestQuery": 1.146}, {"testName": "great_circle_dist", "wallClockTime": 1.736, "clientTime": 1.491, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.957, "avgWallClockTime": 0.867, "shortestQuery": 0.957}, {"testName": "information_value", "wallClockTime": 1.732, "clientTime": 1.49, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.924, "avgWallClockTime": 0.865, "shortestQuery": 0.924}, {"testName": "joins_in_memory_pmj", "wallClockTime": 20.681, "clientTime": 37.657, "total": 24.0, "ignoredQueries": 8.0, "longestQuery": 2.704, "avgWallClockTime": 0.861, "shortestQuery": 2.094}, {"testName": "jit_small_requests", "wallClockTime": 2.349, "clientTime": 1.968, "total": 3.0, "ignoredQueries": 2.0, "longestQuery": 1.27, "avgWallClockTime": 0.782, "shortestQuery": 1.27}, {"testName": "codecs_float_insert", "wallClockTime": 11.068, "clientTime": 9.306, "total": 15.0, "ignoredQueries": 5.0, "longestQuery": 0.949, "avgWallClockTime": 0.737, "shortestQuery": 0.581}, {"testName": "slices_hits", "wallClockTime": 1.429, "clientTime": 1.202, "total": 2.0, "ignoredQueries": 1.0, "longestQuery": 0.956, "avgWallClockTime": 0.714, "shortestQuery": 0.956}, {"testName": "count", "wallClockTime": 0.688, "clientTime": 0.024, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.688, "shortestQuery": 0.0}, {"testName": "analyze_array_tuples", "wallClockTime": 0.658, "clientTime": 0.499, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.657, "shortestQuery": 0.0}, {"testName": "format_date_time", "wallClockTime": 3.499, "clientTime": 3.116, "total": 6.0, "ignoredQueries": 2.0, "longestQuery": 0.665, "avgWallClockTime": 0.583, "shortestQuery": 0.567}, {"testName": "complex_array_creation", "wallClockTime": 1.152, "clientTime": 0.962, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.575, "shortestQuery": 0.0}, {"testName": "consistent_hashes", "wallClockTime": 3.498, "clientTime": 3.103, "total": 7.0, "ignoredQueries": 5.0, "longestQuery": 1.521, "avgWallClockTime": 0.499, "shortestQuery": 1.006}, {"testName": "date_parsing", "wallClockTime": 0.468, "clientTime": 0.335, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.467, "shortestQuery": 0.0}, {"testName": "conditional", "wallClockTime": 3.527, "clientTime": 3.134, "total": 8.0, "ignoredQueries": 6.0, "longestQuery": 0.688, "avgWallClockTime": 0.44, "shortestQuery": 0.578}, {"testName": "early_constant_folding", "wallClockTime": 0.423, "clientTime": 0.284, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.423, "shortestQuery": 0.0}, {"testName": "fixed_string16", "wallClockTime": 0.399, "clientTime": 0.26, "total": 1.0, "ignoredQueries": 1.0, "longestQuery": 0.0, "avgWallClockTime": 0.398, "shortestQuery": 0.0}, {"testName": "generate_table_function", "wallClockTime": 6.833, "clientTime": 6.152, "total": 19.0, "ignoredQueries": 17.0, "longestQuery": 1.301, "avgWallClockTime": 0.359, "shortestQuery": 0.644}, {"testName": "cidr", "wallClockTime": 0.712, "clientTime": 0.549, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.356, "shortestQuery": 0.0}, {"testName": "bit_operations_fixed_string", "wallClockTime": 1.325, "clientTime": 1.103, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.331, "shortestQuery": 0.0}, {"testName": "codecs_float_select", "wallClockTime": 4.689, "clientTime": 3.342, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.312, "shortestQuery": 0.0}, {"testName": "codecs_int_select", "wallClockTime": 5.621, "clientTime": 4.15, "total": 21.0, "ignoredQueries": 21.0, "longestQuery": 0.0, "avgWallClockTime": 0.267, "shortestQuery": 0.0}, {"testName": "functions_coding", "wallClockTime": 1.05, "clientTime": 0.86, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.262, "shortestQuery": 0.0}, {"testName": "if_string_const", "wallClockTime": 1.018, "clientTime": 0.837, "total": 4.0, "ignoredQueries": 4.0, "longestQuery": 0.0, "avgWallClockTime": 0.254, "shortestQuery": 0.0}, {"testName": "round_methods", "wallClockTime": 2.747, "clientTime": 2.416, "total": 15.0, "ignoredQueries": 15.0, "longestQuery": 0.0, "avgWallClockTime": 0.183, "shortestQuery": 0.0}, {"testName": "bounding_ratio", "wallClockTime": 0.347, "clientTime": 0.223, "total": 2.0, "ignoredQueries": 2.0, "longestQuery": 0.0, "avgWallClockTime": 0.173, "shortestQuery": 0.0}], "slowOnClient": [], "allQueries": 1234, "timePerformance": {"analyze_array_tuples": [0.0002], "and_function": [-0.001, -0.0023], "array_auc": [-0.0022], "array_element": [0.0017, -0.001, 0.0046], "array_fill": [0.0003, -0.0045, -0.0068, -0.0127, -0.024, -0.0262], "array_join": [-0.0007, 0.0001, -0.0026, 0.0016, 0.001, -0.0017], "array_reduce": [-0.0134, -0.0146, -0.0369, -0.0268, -0.0404, -0.0411], "base64": [-0.0001, -0.0032, -0.001, 0.0033, 0.0056, 0.0014, 0.0016, -0.0062, 0.0002], "base64_hits": [0.0002, 0.0015, -0.0061, 0.0022, -0.0002, -0.0004, -0.0039, 0.009, 0.0, 0.0016, -0.0325, -0.0145], "basename": [-0.0007, -0.001], "bitCount": [-0.0037, 0.0015, 0.0008, 0.0009, -0.0018, -0.0011], "bit_operations_fixed_string": [0.0, -0.0003, 0.0007, 0.0007], "bit_operations_fixed_string_numbers": [0.0, -0.0001], "bloom_filter": [-0.0012], "bounding_ratio": [0.0004, -0.0001], "cidr": [0.0001, -0.0001], "codecs_float_insert": [-0.0004, 0.0, 0.0005, -0.0004, 0.0017, -0.0002, 0.0008, 0.0007, -0.0002, 0.0001, -0.0002, 0.0001, -0.0004, 0.001, -0.0015], "codecs_float_select": [0.0012, -0.0002, 0.0001, -0.0003, 0.0004, 0.0008, -0.0001, 0.0005, 0.0, 0.0001, 0.0006, 0.0009, 0.0002, 0.0005, 0.0002], "codecs_int_insert": [-0.0104, 0.0041, -0.0051, -0.0081, 0.0004, -0.0079, 0.0009, -0.0075, -0.0122, -0.0033, -0.0077, 0.0, 0.0096, -0.0084, 0.0143, 0.0117, 0.0046, 0.0032, -0.0066, -0.0002, 0.0094], "codecs_int_select": [-0.0002, 0.0002, 0.0, -0.0001, -0.0004, 0.0002, -0.0001, -0.0003, 0.0001, -0.0001, -0.0001, -0.0003, -0.0003, 0.0008, 0.0, -0.0001, -0.0004, -0.0002, -0.0003, -0.0001, 0.0], "collations": [0.0226, -0.0012], "column_column_comparison": [0.0001, 0.0018, -0.0002, 0.0001, 0.0016, 0.0029, -0.0002, -0.0017, -0.0002, -0.0002, 0.0125, -0.0001, 0.0, -0.0001, -0.0033, 0.0013, -0.0107, 0.0, -0.0018], "complex_array_creation": [0.0001, -0.0002], "concat_hits": [-0.0006, 0.0, -0.0004, -0.0001, 0.0001, -0.0003, 0.0007, 0.0002, 0.0002, 0.0019, -0.0005, 0.0, 0.0052, 0.0002, 0.0007, 0.0, 0.0003, -0.0006, 0.0005, -0.0026, -0.0012, 0.0, -0.0016, -0.0003, -0.0017, 0.0006], "conditional": [-0.0003, -0.0009, -0.0001, -0.0001, -0.0002, -0.0002, -0.0007, -0.0003], "consistent_hashes": [-0.0002, -0.0007, 0.0015, 0.0003, 0.0002, 0.0001, -0.0003], "constant_column_comparison": [-0.015, -0.0068, -0.0029, -0.0025, -0.0073, -0.0124, -0.0023, -0.0011, -0.0001, 0.0024, -0.0012, -0.0001, 0.0039, 0.0042, -0.0037, -0.0122, -0.0143, -0.0149, -0.0097, -0.0033, -0.0051], "constant_column_search": [0.0006, -0.0013, -0.0067, 0.0089, 0.0043, 0.017, -0.0002, 0.0035, 0.0033, -0.0143, 0.0067, -0.0267, -0.0003, -0.0087, 0.0085, -0.0102, 0.0, -0.0095, -0.0137, 0.0036, -0.0171, 0.0021, -0.0003, -0.0015, -0.0013, -0.0007, -0.0026, 0.0048], "count": [0.0], "cpu_synthetic": [-0.0012, -0.0028, 0.0016, 0.0098, 0.0189, 0.0014, 0.0002, -0.0017, -0.0154, 0.0007, 0.0003, 0.0008, 0.0015, -0.0041, 0.001, 0.0016, -0.0417, 0.0016, 0.0123, -0.0008, 0.0031, 0.0099, -0.0135, 0.0041, -0.0006, 0.0013, -0.0013, 0.0001, -0.0018, -0.0221, 0.0041, -0.0054, 0.0003, 0.0, -0.0003, 0.0, -0.0002, 0.0005, 0.0004, 0.0007, 0.0019, 0.0014, 0.0023, -0.0027, 0.0027], "date_parsing": [-0.0009], "date_time_64": [-0.0007, -0.0003, 0.0012, 0.0003, 0.0, 0.0, 0.0009, 0.0, -0.0005, -0.0015, 0.0022, -0.0001, -0.0002, -0.0002, 0.0004, 0.0006, 0.0004, 0.0002], "decimal_aggregates": [0.0004, 0.0005, 0.0, 0.0007, -0.0058, -0.0003, -0.0004, 0.0005, -0.0004, 0.004, 0.0009, 0.0006, -0.0019, 0.0019, -0.0024, 0.0012, -0.004, -0.0036, -0.0003, 0.0009, 0.0006], "distributed_aggregation": [0.002, -0.0003, -0.0003, 0.0035], "early_constant_folding": [-0.0004], "empty_string_deserialization": [0.0002], "empty_string_serialization": [-0.0463], "entropy": [0.0013, 0.0015, 0.0001, 0.0001, 0.0001, -0.0006, -0.0049, -0.0114, -0.0008], "first_significant_subdomain": [-0.0119], "fixed_string16": [0.0], "format_date_time": [0.0022, -0.0001, -0.0006, -0.0001, -0.0001, 0.0003], "functions_coding": [-0.0007, -0.0003, 0.0004, 0.0002], "functions_geo": [-0.0009, -0.0006, 0.0151, -0.0006, -0.0029, 0.0011], "general_purpose_hashes": [-0.0058, 0.002, 0.0415, -0.0116, -0.0008, 0.0052, 0.0064, -0.033, 0.0148, 0.026, 0.0129, -0.0204, 0.0159, -0.019, -0.0053, 0.0073, 0.0189, -0.002, 0.0048, -0.0302, 0.0125, -0.0133, 0.0085, -0.0195, 0.0094, -0.0018, -0.0054, -0.0009, 0.0104, 0.0024, 0.0014, 0.0016, 0.013, -0.0099, 0.0065, -0.0002, 0.0064, -0.0013, 0.002, -0.0107, -0.0003, -0.003, 0.0016, 0.0097, 0.0037, 0.01, 0.0062, 0.0014, 0.0018, 0.0022, -0.0043, -0.0001, -0.0004, -0.0297, -0.0064, 0.0142, 0.0053, 0.0106, 0.0021, 0.0156, 0.0155, -0.0009, -0.024, -0.0054, -0.0025, -0.0375, 0.0094, -0.0027, -0.0321, -0.0247, -0.0129, -0.0043, -0.0115, -0.0265, -0.0094, 0.0131, -0.0042, -0.007], "general_purpose_hashes_on_UUID": [-0.0002, -0.0016, -0.0017, 0.0001, 0.0007, -0.0001, -0.0002, 0.0001, 0.0, -0.0001, 0.0001, 0.0001, -0.0008, -0.0001, 0.0002, -0.0001, 0.0011, -0.0001, 0.0001, 0.002, -0.0003, -0.0002, 0.0036, 0.0008, -0.0356, -0.0468, -0.0143, -0.0288, 0.0186, 0.0286, -0.0081, 0.007, -0.0324, -0.0326, 0.0133, -0.0018, 0.0204, 0.0112, 0.0015, 0.012, -0.0053, -0.0041, 0.011, 0.0028, 0.0104, 0.0038, -0.0074, -0.0156, -0.0117, -0.0148, 0.0043, -0.0003, 0.0035, -0.0013, -0.0088, -0.0189, 0.0014, 0.0043, 0.0003, -0.0005, -0.0059, 0.0006, 0.0177, -0.0019, 0.0011, -0.0004], "generate_table_function": [-0.0003, -0.0002, 0.0008, -0.0002, 0.0001, -0.0007, -0.0002, -0.0003, -0.002, -0.0001, -0.0002, -0.0003, 0.0, 0.0006, -0.0001, -0.0002, 0.0001, 0.0002, -0.0001], "great_circle_dist": [0.0, 0.0], "group_array_moving_sum": [0.0033, 0.0063, 0.0073, 0.004, -0.0122, 0.0012, -0.0013, 0.0021, 0.0013, -0.0025, -0.0043, -0.01], "h3": [0.0015], "if_array_num": [0.0001, -0.0007, 0.0019, -0.0019, -0.0017, 0.0006], "if_array_string": [-0.0016, -0.0048, -0.0017, 0.0022, -0.0003, -0.0585], "if_string_const": [0.0004, 0.0011, 0.0002, 0.0003], "if_string_hits": [-0.0002, 0.0007, -0.0005, 0.0049], "information_value": [-0.0003, 0.0021], "inserts_arrays_lowcardinality": [-0.0001, 0.0033], "int_parsing": [-0.0001, 0.0006, 0.0005, 0.0008, 0.0011, 0.0004, 0.0, 0.0007, 0.0006, -0.0018, 0.0003, -0.0005, 0.0015, 0.0019, 0.0004, -0.0032, 0.0006, 0.0004, 0.0003, 0.0002, 0.001, 0.002, 0.0, 0.0004, 0.001, -0.0006, 0.0004, 0.0012, 0.0003, 0.0008, 0.0006, 0.0004, -0.0003, 0.0006, 0.0003, 0.0009, 0.0007, 0.0008, -0.0013, 0.0017, 0.0014, 0.0006, 0.001, 0.0003, 0.0008, 0.0003, 0.0005, 0.0004, -0.0002, 0.0003, 0.0009, 0.0019, 0.0003, -0.0007, 0.0009, 0.0024, 0.0004, 0.0004, -0.001, -0.0001, 0.0026, 0.0007, 0.0006, 0.0004, 0.0003, 0.0003, 0.0005, 0.001, 0.0003, 0.0015, 0.0002, 0.0004, 0.0005, 0.0039, 0.0011, 0.001, -0.0024, 0.0019, 0.0006, 0.0005, 0.0005, 0.0002, 0.0002], "jit_large_requests": [-0.002, -0.0003], "jit_small_requests": [-0.0002, 0.0002, 0.0005], "joins_in_memory": [0.0, 0.0001, -0.0002, 0.0001, -0.0001, -0.0399, -0.0427, -0.0722, -0.0435, -0.0268, -0.0319, -0.037, -0.0149, -0.0037, 0.0177, -0.0022, 0.0099, 0.067, 0.0557, 0.0685, 0.0586], "joins_in_memory_pmj": [-0.0003, -0.0002, -0.0005, -0.0001, -0.0028, -0.0054, -0.0035, -0.0027, -0.0007, -0.0028, -0.0027, -0.0032], "json_extract_rapidjson": [-0.0071, 0.0001, 0.0144, 0.0093, 0.0128, -0.0014, -0.0028, -0.0012, 0.001, 0.0145, 0.0189, -0.0007, -0.0137], "json_extract_simdjson": [0.0022, -0.0073, -0.0092, 0.0022, 0.0064, 0.001, -0.0013, -0.0036, -0.0045, 0.0047, 0.0082, 0.0047, 0.0033], "least_greatest_hits": [-0.0008, -0.0045, -0.0036], "linear_regression": [0.0015, 0.0013, 0.0037, -0.0055, -0.0011], "logical_functions_large": [-0.0272, -0.002, 0.0194, -0.0005, -0.0126, 0.0001, -0.0004, -0.0001, 0.0001, -0.0038], "materialized_view_parallel_insert": [0.0156], "math": [0.0007, 0.0006, 0.0011, 0.002, 0.0012, 0.0015, 0.0008, 0.0043, 0.0037, -0.0007, 0.0009, 0.0009, -0.0006, -0.0019, 0.0, 0.0002, -0.0018, 0.0, 0.001, -0.003, -0.0106, -0.0017, 0.0019, 0.0032, 0.0053, -0.0032, 0.0006, -0.0048, 0.0301, 0.011, -0.0004, 0.0457, -0.0016, 0.0004, -0.024, 0.0197, -0.0002, 0.0006, -0.0078, 0.0218, -0.0171, 0.049, -0.0322, 0.0504, -0.0349, -0.0011, -0.0033, 0.0012, -0.0104, 0.022, -0.0219, -0.0004, -0.0001, -0.0001, 0.0051, 0.0, -0.0008, 0.0007, 0.0008, 0.0013], "merge_table_streams": [0.0003], "merge_tree_huge_pk": [0.0, 0.0003, 0.0005, 0.0003], "merge_tree_many_partitions": [0.0005], "merge_tree_many_partitions_2": [0.0031], "merge_tree_simple_select": [0.0], "mingroupby-orderbylimit1": [0.0058, -0.001, 0.0023, 0.012, -0.0154, -0.0122, 0.0027, 0.0006], "ngram_distance": [-0.0004, -0.0006, -0.0008, 0.0005, 0.0006, -0.0069, -0.0067, -0.0072, -0.0005, 0.0001, -0.0021, -0.0008, -0.0033, -0.0013, 0.0004, 0.0004], "order_by_decimals": [0.0017, -0.0002, -0.0016, 0.0003, 0.0004], "order_by_read_in_order": [0.0063, -0.0031, 0.0151, 0.0003, 0.0019], "order_by_single_column": [0.0004, 0.0003, -0.0007, -0.001, -0.0002, -0.0004, -0.0028], "parallel_insert": [-0.0018], "pre_limit_no_sorting": [0.0001], "prewhere": [0.0065], "random_printable_ascii": [-0.0012, -0.0057, -0.0001, -0.0043, 0.0183, -0.0003, 0.0011], "range": [-0.0285, -0.0007], "read_hits_with_aio": [0.0002, -0.0006, -0.0004, 0.0031], "right": [0.0024, 0.0018], "round_down": [-0.0119, -0.0009, -0.0014, -0.0012, 0.0006], "round_methods": [0.0, 0.0007, 0.0001, -0.0003, -0.0002, 0.0003, 0.0005, 0.0001, -0.0002, 0.0002, 0.0002, 0.0003, -0.0006, 0.0002, -0.0001], "scalar": [-0.0068], "set_hits": [0.0018, -0.0002, 0.0035, 0.0003, 0.0015, 0.0034], "set_index": [-0.0006, -0.0001, 0.003, -0.0008, -0.0014], "simple_join_query": [-0.0318, -0.0044, -0.0149, -0.0111], "slices_hits": [0.0006, -0.0008], "sort": [-0.0005, -0.0002, 0.0048, 0.0011, -0.001, -0.0016, 0.0012, 0.005, 0.0047, 0.0027], "string_join": [-0.0068, 0.0098, -0.0018], "string_set": [0.0032, -0.0005, 0.0001, 0.0019, -0.0012, 0.0023, -0.0015], "string_sort": [-0.0004, 0.0022, -0.0005, 0.0019, 0.0024, 0.0063, 0.0026, -0.009, -0.0017, 0.0025, 0.0052, 0.0039, 0.0019, 0.003, 0.0005, 0.0055, -0.003, -0.0029, -0.0001, 0.0039, -0.0005, 0.0491, 0.0012, -0.0001, 0.0064, 0.0049, -0.0007, 0.002, -0.0034, -0.002, 0.0038, 0.0135, 0.0038, 0.0063, -0.0011, 0.0107, -0.0008, 0.0136, 0.0015, 0.0019, 0.0116, 0.0146, -0.0007, -0.0001, 0.0032, -0.0052, -0.0016, -0.0004, -0.0001, 0.0216, -0.0004, -0.0068, 0.0002, 0.0351, -0.0026, -0.0012, 0.0007, -0.01, 0.0039, -0.0031, -0.0038, 0.0048, -0.0054, 0.0597, 0.0026, -0.0318, 0.002, -0.0097, 0.0044, 0.0047, -0.005, -0.0041, 0.0028, -0.0227, 0.0053, -0.0073, -0.0045, -0.0063, -0.0015, -0.0598, -0.0006, 0.0356, 0.001, 0.0031], "sum_map": [-0.0022, -0.0064, -0.0002, -0.0223], "synthetic_hardware_benchmark": [0.0015, 0.0017, -0.0023, -0.0009, -0.0025, 0.0014, 0.0055, 0.0017, 0.0008, -0.0464, 0.0, 0.0003, 0.0024, 0.0004, 0.0008, -0.0249, 0.037, 0.0031, -0.0025, 0.0011, -0.0012, 0.0016, 0.0031, -0.0088, 0.0125, -0.0336], "trim_numbers": [-0.004, 0.0007, 0.0114, -0.0032, -0.0065, 0.0003], "trim_urls": [-0.0039, 0.0013, 0.0334, -0.0005, 0.0106, 0.003], "trim_whitespace": [-0.0003, 0.001, 0.0027, 0.0018, -0.002, 0.0004], "uniq": [0.0, 0.0007, 0.0013, -0.0005, 0.0002, -0.0005, -0.0005, 0.0021, 0.0035, 0.0038, -0.0003, -0.0017, -0.0002, -0.0003, -0.0001, 0.001, 0.01, 0.013, 0.0091, 0.0, 0.0002, -0.0048, 0.0025, 0.0067, -0.0124, 0.001, -0.0073, 0.011, -0.0147, 0.0023, -0.0029, 0.0001, 0.0003, -0.0008, 0.0007, 0.0004, -0.0004, -0.0004, -0.0002, 0.0004, 0.0025, -0.0008, 0.0005, 0.0003, 0.002, -0.0018, 0.0014, -0.0004, -0.0001, -0.0007, 0.0, -0.002, -0.0007, -0.0018, -0.0053, 0.0089, 0.0136, -0.0012, 0.0, -0.0002, -0.0001, 0.0003, -0.0006, 0.0007, 0.0016, 0.0039, -0.0015, -0.0012, -0.0001, -0.0045, -0.0003, 0.0011, -0.0028, 0.002, -0.0063, 0.0013, -0.0085, -0.0043, -0.0001, 0.001], "url_hits": [0.072, -0.0061, -0.0039, 0.0047, -0.0007, 0.0006, 0.002, -0.0042, 0.0004, -0.0004, 0.0076, -0.0012, 0.0001, 0.0012, -0.0005, -0.0014, -0.0021, 0.0101, -0.0104], "vectorize_aggregation_combinators": [-0.0027, -0.0037, -0.0003, 0.0026, -0.003], "visit_param_extract_raw": [0.0014, 0.0846, 0.0408], "website": [-0.0023, 0.0014, -0.0053, 0.001, -0.0003, 0.0047, 0.0034, 0.0002, -0.0009, 0.0004, -0.0005, -0.0001, 0.0003, -0.0003, 0.0001, 0.0027, 0.0046, 0.0015, 0.002, 0.0003, 0.0015, -0.0013, -0.0015, -0.0031, 0.0015, -0.0006, -0.0005, 0.0002, -0.002, -0.0068, -0.0024, -0.0015, -0.0001, 0.0017, 0.001, 0.0045, -0.0018, 0.0001, -0.0002, 0.0, -0.0037, -0.0002, -0.0014, -0.0012, -0.0041, -0.01, -0.0023, -0.0008, -0.0007, -0.0012, 0.0008, 0.0001, -0.0049, 0.0003, -0.0005, -0.0022, 0.0005, -0.0004, -0.0001, 0.0001, 0.0003, 0.0008, 0.0124, 0.005, 0.0001, 0.0, -0.0006, -0.0001, -0.0038, -0.0006, 0.0006, -0.0014]}, "reportErrors": []}
