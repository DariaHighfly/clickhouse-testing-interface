0.0363	0.0333	-0.083	[0.084,0.16,0.497,0.538]	mingroupby-orderbylimit1	\n         SELECT key, min(value)\n         FROM mingroupby_orderbylimit1_111111_key_value\n         group by key format Null;\n    
0.1443	0.1422	-0.015	[0.008,0.02,0.383,0.416]	string_set	SELECT 1 FROM strings WHERE short IN (SELECT short FROM strings) FORMAT Null
0.3119	0.3158	0.012	[0.012,0.018,0.375,0.381]	string_join	SELECT 1 FROM strings AS l ANY LEFT JOIN strings AS r USING (long) FORMAT Null
0.0265	0.0255	-0.038	[0.005,0.038,0.331,0.361]	generate_table_function	SELECT sum(NOT ignore(*)) FROM (SELECT * FROM generateRandom(\'i Tuple(Int32, Array(Int64))\', 0, 10, 10) LIMIT 10000000);
0.2792	0.281	0.006	[0.006,0.057,0.312,0.342]	string_set	SELECT 1 FROM hits_10m_words WHERE word IN (SELECT long FROM strings) FORMAT Null
0.0478	0.0486	0.016	[0.012,0.037,0.306,0.329]	mingroupby-orderbylimit1	\n         SELECT key, min(value)\n         FROM mingroupby_orderbylimit1_111111_tuple\n         group by key format Null;\n    
1.0003	1.1479	0.147	[0.147,0.259,0.29,0.297]	joins_in_memory	SELECT COUNT() FROM ints l RIGHT JOIN ints r USING i64,i32,i16,i8 WHERE i32 = 200042
0.827	0.8178	-0.012	[0.002,0.024,0.29,0.295]	joins_in_memory	SELECT COUNT() FROM ints l INNER JOIN ints r USING i64 WHERE i32 = 200042
0.2119	0.2555	0.205	[0.056,0.206,0.288,0.299]	string_join	SELECT 1 FROM strings AS l ANY LEFT JOIN strings AS r USING (short) FORMAT Null
0.8553	0.8774	0.025	[0.001,0.25,0.278,0.283]	joins_in_memory	SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64 WHERE i32 IN(42, 100042, 200042, 300042, 400042)
0.8355	0.8221	-0.017	[0.002,0.015,0.277,0.284]	joins_in_memory	SELECT COUNT() FROM ints l INNER JOIN ints r ON l.i64 = r.i64 WHERE i32 = 200042
0.4612	0.5882	0.275	[0.03,0.11,0.273,0.28]	group_array_moving_sum	select k % 10 kk, groupArrayMovingSum(1000)(v) from moving_sum_50m group by kk format Null
0.643	0.8178	0.271	[0.036,0.098,0.271,0.295]	group_array_moving_sum	select k, groupArrayMovingSum(1000)(v) from moving_sum_100m group by k format Null
0.3348	0.4165	0.244	[0.052,0.236,0.259,0.266]	group_array_moving_sum	select k, groupArrayMovingSum(1000)(v) from moving_sum_50m group by k format Null
0.4933	0.395	-0.2	[0.076,0.198,0.255,0.28]	synthetic_hardware_benchmark	SELECT number % 1000000 AS k, count() FROM numbers(    10000000) GROUP BY k FORMAT Null
0.199	0.2016	0.013	[0.012,0.04,0.254,0.291]	string_set	SELECT 1 FROM strings WHERE short IN (SELECT long FROM strings) FORMAT Null
0.2657	0.2137	-0.196	[0.091,0.205,0.252,0.263]	mingroupby-orderbylimit1	\n         SELECT key, min(value)\n         FROM mingroupby_orderbylimit1_1111111_tuple\n         group by key format Null;\n    
0.2353	0.2438	0.036	[0.024,0.086,0.251,0.26]	mingroupby-orderbylimit1	\n         SELECT key, min(value)\n         FROM mingroupby_orderbylimit1_1111111_key_value\n         group by key format Null;\n    
0.6015	0.58	-0.036	[0.015,0.039,0.247,0.253]	group_array_moving_sum	select k % 10 kk, groupArrayMovingSum(10000)(v) from moving_sum_50m group by kk format Null
0.2125	0.2093	-0.016	[0.009,0.217,0.242,0.246]	string_set	SELECT 1 FROM strings WHERE long IN (SELECT short FROM strings) FORMAT Null
0.1969	0.191	-0.03	[0.03,0.108,0.236,0.256]	random_printable_ascii	SELECT count() FROM zeros(10000) WHERE NOT ignore(randomPrintableASCII(10000))
1.2868	1.266	-0.017	[0.003,0.014,0.232,0.242]	group_array_moving_sum	select k % 10 kk, groupArrayMovingSum(1000)(v) from moving_sum_100m group by kk format Null
0.8571	1.0151	0.184	[0.184,0.207,0.229,0.246]	joins_in_memory	SELECT COUNT() FROM ints l FULL JOIN ints r ON l.i64 = r.i64 WHERE i32 = 200042
0.7559	0.5905	-0.219	[0.005,0.053,0.228,0.232]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(metroHash64(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.1045	0.1187	0.135	[0.089,0.143,0.222,0.233]	mingroupby-orderbylimit1	\n         SELECT key, value\n         FROM mingroupby_orderbylimit1_111111_key_value\n         order by key, value limit 1 by key format Null;\n     
1.2848	1.0226	-0.205	[0.006,0.204,0.219,0.224]	joins_in_memory	SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64,i32,i16,i8 WHERE i32 = 200042
1.0608	1.0378	-0.022	[0,0.017,0.218,0.224]	joins_in_memory	SELECT COUNT() FROM ints l RIGHT JOIN ints r USING i64 WHERE i32 = 200042
0.3215	0.3365	0.046	[0.004,0.011,0.217,0.252]	group_array_moving_sum	select k, groupArrayMovingSum(10)(v) from moving_sum_50m group by k format Null
0.7412	0.5903	-0.204	[0.009,0.049,0.217,0.223]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(xxHash64(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.0572	0.0494	-0.137	[0.054,0.123,0.209,0.251]	codecs_int_insert	INSERT INTO codec_seq_UInt64_DoubleDelta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.3393	0.2838	-0.164	[0.047,0.082,0.208,0.245]	string_set	SELECT 1 FROM strings WHERE long IN (SELECT long FROM strings) FORMAT Null
0.2522	0.2559	0.014	[0.006,0.015,0.205,0.211]	decimal_aggregates	SELECT quantile(d128), quantileExact(d128), quantileExactWeighted(d128, 2) FROM t
1.0656	0.858	-0.195	[0.003,0.074,0.204,0.206]	joins_in_memory	SELECT COUNT() FROM ints l LEFT JOIN ints r ON l.i64 = r.i64 WHERE i32 = 200042
1.0599	0.8493	-0.199	[0,0.193,0.204,0.213]	joins_in_memory	SELECT COUNT() FROM ints l LEFT JOIN ints r USING i64 WHERE i32 = 200042
1.059	1.0353	-0.023	[0.004,0.012,0.203,0.212]	joins_in_memory	SELECT COUNT() FROM ints l RIGHT JOIN ints r ON l.i64 = r.i64 WHERE i32 = 200042
0.582	0.487	-0.164	[0.127,0.163,0.202,0.221]	group_array_moving_sum	select k % 10 kk, groupArrayMovingSum(10)(v) from moving_sum_50m group by kk format Null
0.4161	0.3477	-0.165	[0.002,0.028,0.201,0.222]	group_array_moving_sum	select k, groupArrayMovingSum(10000)(v) from moving_sum_50m group by k format Null
0.7944	0.6601	-0.17	[0.049,0.098,0.198,0.211]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(murmurHash3_64(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.2509	0.2929	0.167	[0.003,0.154,0.197,0.211]	decimal_aggregates	SELECT quantilesExact(0.1, 0.9)(d128), quantilesExactWeighted(0.1, 0.9)(d128, 2) FROM t
0.3285	0.3258	-0.009	[0.005,0.011,0.195,0.204]	set_hits	SELECT count() FROM hits_10m_single WHERE URL IN (SELECT URL FROM hits_10m_single WHERE SearchEngineID != 0)
0.1596	0.191	0.196	[0.025,0.157,0.191,0.199]	decimal_aggregates	SELECT uniq(d64), uniqCombined(d64), uniqExact(d64), uniqHLL12(d64) FROM t
0.7715	0.7688	-0.004	[0.003,0.034,0.19,0.197]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(xxHash32(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.7713	0.6314	-0.182	[0.022,0.039,0.189,0.201]	group_array_moving_sum	select k, groupArrayMovingSum(10)(v) from moving_sum_100m group by k format Null
1.302	1.3083	0.004	[0.004,0.169,0.188,0.2]	cpu_synthetic	SELECT SearchEngineID, SearchPhrase, RegionID FROM hits_10m_single GROUP BY SearchEngineID, SearchPhrase, RegionID ORDER BY count() DESC LIMIT 10 SETTINGS max_threads = 1
1.07	1.0605	-0.009	[0.002,0.008,0.187,0.191]	joins_in_memory	SELECT COUNT() FROM ints l RIGHT JOIN ints r USING i64 WHERE i32 IN(42, 100042, 200042, 300042, 400042)
0.2885	0.2838	-0.017	[0.016,0.136,0.183,0.211]	set_hits	SELECT count() FROM hits_10m_single WHERE SearchPhrase IN (SELECT SearchPhrase FROM hits_10m_single)
2.084	2.0623	-0.011	[0.001,0.013,0.179,0.183]	synthetic_hardware_benchmark	SELECT number % 10000000 AS k, count() FROM numbers(   10000000) GROUP BY k FORMAT Null
0.7981	0.7998	0.002	[0.002,0.016,0.179,0.199]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(murmurHash2_64(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.2322	0.2693	0.159	[0.012,0.143,0.179,0.189]	string_set	SELECT 1 FROM hits_10m_words WHERE word IN (SELECT short FROM strings) FORMAT Null
0.7985	0.8122	0.017	[0.017,0.041,0.176,0.187]	entropy	SELECT entropy(URL) FROM test.hits
1.0909	0.9187	-0.158	[0.008,0.031,0.175,0.198]	joins_in_memory	SELECT COUNT() FROM ints l FULL JOIN ints r USING i64 WHERE i32 IN(42, 100042, 200042, 300042, 400042)
0.5958	0.5908	-0.009	[0.003,0.008,0.175,0.199]	simple_join_query	SELECT COUNT() FROM join_table LEFT JOIN join_table USING A
0.8344	0.8091	-0.031	[0.023,0.027,0.17,0.182]	entropy	SELECT entropy(URL, URLDomain) FROM test.hits
1.5319	1.7809	0.162	[0.09,0.151,0.17,0.175]	uniq	SELECT SearchPhrase AS k, uniqExact(UserID) FROM hits_100m_single GROUP BY k FORMAT Null
0.128	0.1193	-0.068	[0.068,0.09,0.168,0.213]	codecs_int_insert	INSERT INTO codec_rnd_UInt64_NONE (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.6454	0.6754	0.046	[0.006,0.034,0.167,0.185]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(farmHash64(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.6692	0.7094	0.06	[0.002,0.059,0.164,0.169]	simple_join_query	SELECT COUNT() FROM join_table AS left LEFT JOIN join_table AS right ON left.A = right.A
0.9042	0.9217	0.019	[0,0.01,0.161,0.162]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(murmurHash2_32(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
1.0556	0.8732	-0.173	[0.022,0.105,0.157,0.185]	if_array_string	SELECT count() FROM zeros(10000000) WHERE NOT ignore(rand() % 2 ? materialize([\'https://github.com/ClickHouse/ClickHouse/pull/1070\', \'https://www.google.ru/search?newwindow=1&site=&source=hp&q=zookeeper+wire+protocol+exists&oq=zookeeper+wire+protocol+exists&gs_l=psy-ab.3...330.6300.0.6687.33.28.0.0.0.0.386.4838.0j5j9j5.19.0....0...1.1.64.psy-ab..14.17.4448.0..0j35i39k1j0i131k1j0i22i30k1j0i19k1j33i21k1.r_3uFoNOrSU\']) : emptyArrayString())
0.8474	0.9698	0.144	[0.001,0.007,0.156,0.161]	general_purpose_hashes	SELECT count() from zeros(1000000) where not ignore(murmurHash3_32(materialize(\'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sollicitudin nisi ac erat mollis dapibus. Maecenas leo purus, bibendum eu erat eget, iaculis molestie tortor. Phasellus maximus odio nec mauris ultrices dictum. Morbi efficitur nisl eget congue mollis. Vestibulum pharetra diam vitae urna interdum, eget ultricies justo sollicitudin. Nunc sit amet purus id leo tempus dignissim. Donec ac lacus ut orci tempus scelerisque quis ultricies nibh. Nullam lobortis, erat ac ullamcorper interdum, odio nisl elementum quam, ut malesuada massa nunc eget quam. Nam suscipit neque quis sapien ultricies imperdiet. Maecenas augue libero, finibus tristique sagittis et, semper nec arcu. Morbi non tortor ultrices, sollicitudin justo sed, accumsan ligula. Nullam at ipsum in nibh auctor ullamcorper. Nullam laoreet neque id lorem condimentum tincidunt. Nullam vel orci nibh. Ut sit amet sem faucibus, fringilla orci at, lacinia enim. Mauris imperdiet ex id scelerisque eleifend. Ut tincidunt massa nibh, viverra pharetra metus\')))
0.0953	0.0937	-0.017	[0.001,0.01,0.153,0.171]	inserts_arrays_lowcardinality	INSERT INTO lot_of_string_arrays_dst SELECT rand64() as id, columns(\'^col\') FROM lot_of_string_arrays_src
0.104	0.0916	-0.12	[0,0.055,0.151,0.182]	cpu_synthetic	SELECT quantilesExactIf(0.5, 0.9)(SendTiming, SendTiming > 0) FROM hits_100m_single
0.1785	0.1652	-0.075	[0.074,0.111,0.151,0.161]	decimal_aggregates	SELECT quantilesExact(0.1, 0.9)(d64), quantilesExactWeighted(0.1, 0.9)(d64, 2) FROM t
0.117	0.1216	0.039	[0.029,0.07,0.149,0.159]	codecs_int_insert	INSERT INTO codec_seq_UInt64_Delta (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.5043	0.4827	-0.043	[0.035,0.047,0.149,0.165]	url_hits	SELECT count() FROM hits_100m_single WHERE NOT ignore(pathFull(URL))
0.1762	0.1606	-0.089	[0.086,0.113,0.148,0.16]	cpu_synthetic	SELECT uniqExact(UserID) FROM hits_10m_single SETTINGS max_threads = 1
0.1267	0.1224	-0.034	[0.034,0.072,0.143,0.153]	codecs_int_insert	INSERT INTO codec_rnd_UInt64_Delta (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.1829	0.1646	-0.101	[0.028,0.067,0.143,0.15]	decimal_aggregates	SELECT median(d32), medianExact(d32), medianExactWeighted(d32, 2) FROM t
0.1509	0.1547	0.025	[0.021,0.049,0.142,0.157]	codecs_int_insert	INSERT INTO codec_mon_UInt64_NONE (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.1623	0.1853	0.141	[0.09,0.11,0.142,0.15]	decimal_aggregates	SELECT median(d64), medianExact(d64), medianExactWeighted(d64, 2) FROM t
0.1552	0.1564	0.007	[0.007,0.103,0.138,0.158]	array_auc	SELECT avg(ifNotFinite(arrayAUC(arrayMap(x -> rand(x) / 0x100000000, range(2 + rand() % 100)), arrayMap(x -> rand(x) % 2, range(2 + rand() % 100))), 0)) FROM numbers(100000)
0.1367	0.1195	-0.126	[0.001,0.023,0.136,0.167]	cpu_synthetic	SELECT uniqExact(UserID) FROM hits_10m_single
0.4224	0.4621	0.093	[0.01,0.093,0.134,0.144]	uniq	SELECT RegionID AS k, uniqExact(UserID) FROM hits_100m_single GROUP BY k FORMAT Null
0.9845	0.9875	0.003	[0.002,0.005,0.134,0.291]	joins_in_memory	SELECT COUNT() FROM ints l INNER JOIN ints r USING i64,i32,i16,i8 WHERE i32 = 200042
0.1691	0.1879	0.111	[0.056,0.071,0.131,0.141]	codecs_int_insert	INSERT INTO codec_mon_UInt64_T64 (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.1736	0.1588	-0.086	[0.084,0.111,0.13,0.138]	decimal_aggregates	SELECT quantilesExact(0.1, 0.9)(d32), quantilesExactWeighted(0.1, 0.9)(d32, 2) FROM t
0.0811	0.0891	0.098	[0,0.05,0.126,0.147]	distributed_aggregation	select count() from (select sipHash64(zero) from zeros_mt(100000000) union all select sipHash64(zero) from zeros_mt(100000000))
0.1545	0.1491	-0.035	[0.034,0.058,0.126,0.157]	codecs_int_insert	INSERT INTO codec_mon_UInt64_Delta (n) SELECT number*512+(intHash64(number)%512) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.5826	0.657	0.127	[0.005,0.058,0.123,0.153]	string_sort	SELECT Title, URL FROM hits_100m_single ORDER BY Title, URL LIMIT 10
0.1645	0.1844	0.12	[0,0.094,0.12,0.127]	decimal_aggregates	SELECT quantile(d64), quantileExact(d64), quantileExactWeighted(d64, 2) FROM t
0.4555	0.4579	0.005	[0.002,0.009,0.117,0.13]	bloom_filter	INSERT INTO test_bf SELECT number AS id, [CAST(id, \'String\'), CAST(id + 1, \'String\'), CAST(id + 2, \'String\')] FROM numbers(1000000)
0.1231	0.1304	0.059	[0.002,0.062,0.116,0.141]	read_hits_with_aio	SELECT count() FROM hits_100m_single where EventDate between toDate(\'2013-07-10\') and toDate(\'2013-07-16\') and UserID=123 SETTINGS max_threads = 1, min_bytes_to_use_direct_io = 0, max_read_buffer_size = 10485760;
0.0307	0.0271	-0.118	[0,0.019,0.112,0.12]	codecs_float_insert	INSERT INTO codec_seq_Float64_ZSTD (n) SELECT number/pi() FROM system.numbers LIMIT 1000000 SETTINGS max_threads=1
0.1559	0.1651	0.059	[0.027,0.065,0.11,0.132]	codecs_int_insert	INSERT INTO codec_rnd_UInt64_T64 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.4936	0.5511	0.116	[0.078,0.091,0.108,0.113]	general_purpose_hashes	SELECT count() from numbers(100000000) where not ignore(CRC32(materialize(\'\')))
0.1796	0.163	-0.093	[0.014,0.088,0.106,0.113]	decimal_aggregates	SELECT quantile(d32), quantileExact(d32), quantileExactWeighted(d32, 2) FROM t
0.6717	0.6739	0.003	[0.003,0.009,0.105,0.112]	simple_join_query	SELECT COUNT() FROM join_table AS left LEFT JOIN (SELECT A FROM join_table) AS right ON left.A = right.A
1.3104	1.4492	0.105	[0.003,0.033,0.104,0.13]	url_hits	SELECT count() FROM hits_100m_single WHERE NOT ignore(URLHierarchy(URL))
0.0486	0.053	0.09	[0.014,0.056,0.104,0.132]	int_parsing	SELECT count() FROM test.hits WHERE NOT ignore(toString(ResolutionHeight)) SETTINGS max_threads = 1
0.0887	0.0849	-0.043	[0.011,0.046,0.102,0.114]	string_sort	SELECT PageCharset, MobilePhoneModel FROM hits_100m_single ORDER BY PageCharset, MobilePhoneModel LIMIT 10
0.1567	0.1571	0.002	[0.002,0.025,0.101,0.138]	decimal_aggregates	SELECT uniq(d32), uniqCombined(d32), uniqExact(d32), uniqHLL12(d32) FROM t
0.5163	0.4563	-0.117	[0.033,0.052,0.101,0.105]	math	SELECT count() FROM numbers(100000000) WHERE NOT ignore(exp2(toFloat64(number)))
0.9963	1.0379	0.041	[0.003,0.028,0.098,0.11]	website	SELECT SearchPhrase, any(URL), any(Title), count() AS c, uniq(UserID) FROM hits_100m_single WHERE Title LIKE \'%Яндекс%\' AND URL NOT LIKE \'%.yandex.%\' AND SearchPhrase != \'\' GROUP BY SearchPhrase ORDER BY c DESC LIMIT 10
0.0526	0.0558	0.06	[0.021,0.038,0.095,0.108]	base64_hits	SELECT count() FROM hits_100m_single WHERE tryBase64Decode(base64Encode(MobilePhoneModel)) != MobilePhoneModel
0.027	0.026	-0.038	[0.016,0.037,0.095,0.136]	uniq	SELECT 1 AS k, uniqUpTo(100)(UserID) FROM hits_100m_single GROUP BY k FORMAT Null
1.0769	0.9739	-0.096	[0.005,0.015,0.095,0.168]	joins_in_memory	SELECT COUNT() FROM ints l FULL JOIN ints r USING i64 WHERE i32 = 200042
0.9527	1.0476	0.099	[0.002,0.051,0.094,0.101]	url_hits	SELECT count() FROM hits_100m_single WHERE NOT ignore(URLPathHierarchy(URL))
0.055	0.0493	-0.104	[0.031,0.067,0.093,0.102]	array_element	SELECT count() FROM numbers(10000000) WHERE NOT ignore([[], []][number % 2 + 2])
0.3516	0.3752	0.067	[0.01,0.064,0.093,0.117]	string_set	SELECT 1 FROM hits_10m_words WHERE word IN (SELECT word FROM hits_10m_words) FORMAT Null
0.0754	0.0845	0.12	[0.022,0.063,0.092,0.11]	entropy	SELECT entropy(ClientIP, RegionID) FROM test.hits
0.0273	0.0261	-0.044	[0.043,0.047,0.088,0.119]	jit_large_requests	\n        SELECT\n            COUNT()\n        FROM\n            jit_test\n        WHERE\n            NOT ignore(a / b + c / d + e / f + g / h + i / j)\n        SETTINGS\n            compile_expressions = 1,\n            min_count_to_compile_expression = 1\n    
0.0248	0.0255	0.028	[0.024,0.03,0.081,0.1]	date_time_64	SELECT count() FROM dt where not ignore(x)
0.0835	0.0818	-0.021	[0.02,0.029,0.081,0.216]	website	SELECT URL, count() AS PageViews FROM hits_100m_single WHERE CounterID = 34 AND EventDate >= \'2013-07-01\' AND EventDate <= \'2013-07-31\' AND NOT DontCountHits AND NOT Refresh AND notEmpty(URL) GROUP BY URL ORDER BY PageViews DESC LIMIT 10
0.126	0.1251	-0.008	[0.003,0.012,0.079,0.125]	codecs_int_insert	INSERT INTO codec_seq_UInt64_NONE (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.1432	0.142	-0.009	[0.006,0.034,0.079,0.105]	codecs_int_insert	INSERT INTO codec_seq_UInt64_T64 (n) SELECT number FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.6922	0.7736	0.117	[0.028,0.032,0.074,0.101]	visit_param_extract_raw	SELECT count() FROM zeros(2000000) WHERE NOT ignore(visitParamExtractRaw(materialize(\'{"myparam":{"nested_1":"test_string","nested_2":"test_2","nested_1":"test_string","nested_2":"test_2","nested_1":"test_string","nested_2":"test_2"}}\'), \'myparam\'))
0.5827	0.6395	0.097	[0.005,0.026,0.073,0.101]	json_extract_rapidjson	SELECT \'rapidjson-8\', count() FROM zeros(1000000) WHERE NOT ignore(JSONExtractInt(materialize(\'{"sparam":{"nested_1":"test_string","nested_2":"test_2"}, "nparam":8495, "fparam":{"nested_1":91.15,"nested_2":[334, 89.05, 1000.01]}, "bparam":false}\'), \'nparam\'))
0.4167	0.4183	0.003	[0,0.025,0.073,0.105]	string_join	SELECT 1 FROM hits_10m_words AS l ANY LEFT JOIN hits_10m_words AS r USING (word) FORMAT Null
0.122	0.1199	-0.018	[0.002,0.013,0.069,0.115]	codecs_int_insert	INSERT INTO codec_rnd_UInt64_LZ4 (n) SELECT intHash64(number) FROM system.numbers LIMIT 10000000 SETTINGS max_threads=1
0.2829	0.3487	0.232	[0,0.009,0.068,0.234]	right	SELECT count() FROM hits_100m_single WHERE NOT ignore(right(URL, 16))
0.0566	0.0597	0.054	[0.015,0.027,0.059,0.125]	entropy	SELECT entropy(SearchPhrase) FROM test.hits
1.2694	1.2877	0.014	[0.001,0.009,0.04,0.247]	group_array_moving_sum	select k % 10 kk, groupArrayMovingSum(10)(v) from moving_sum_100m group by kk format Null
0.2593	0.2632	0.015	[0.003,0.022,0.037,0.116]	inserts_arrays_lowcardinality	INSERT INTO lot_of_string_arrays_dst_lowcardinality SELECT rand64() as id, columns(\'^col\') FROM lot_of_string_arrays_src
